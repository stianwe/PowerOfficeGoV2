openapi: 3.0.1
info:
  description: merged spec
  title: merged spec
  version: 1.0.0
servers:
- url: http://localhost:8080
paths:
  /SalesOrders/{id}/createAndSendInvoice:
    post:
      description: "Transforms the sales order to an invoice or credit note and delivers\
        \ it to the customer.\r\nIf the request is successful, a 202Accepted response\
        \ code will be returned,\r\nand the header Location will contain a URL to\
        \ the status endpoint with the sales order id.\r\nThe integration must have\
        \ the invoice sending privilege."
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SendInvoiceRequestPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/SendInvoiceRequestPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/SendInvoiceRequestPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SendInvoiceRequestPostDto'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendInvoiceRequestDto'
          description: Given when sales order is queued for delivery.
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Create a send request for a sales order. (Auth roles: SalesOrders_Full)"
      tags:
      - CreateAndSendInvoice
  /Employees/Employments/{employmentId}/FtePercentages:
    get:
      parameters:
      - description: The id of the employment.
        example: 12345
        in: path
        name: employmentId
        required: true
        schema:
          format: int64
          type: integer
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EmploymentFtePercentageDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "400":
          content:
            application/json:
              example:
                detail: Fields property in resourceParameter is not formatted correct.
                title: Invalid resourceParameter
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Employment with id = 12345 not found.
                title: Employment not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get full-time equivalent (FTE) percentage lines for the given employment\
        \ (employment relationships) on an employee. (Auth roles: EmploymentFtePercentage,EmploymentFtePercentage_Full)"
      tags:
      - EmploymentFtePercentages
    post:
      description: "If successful, the new entity will be returned with an id which\
        \ is unique and can be used to reference the created object in relevant requests."
      parameters:
      - description: The id of the employment.
        example: 98765
        in: path
        name: employmentId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EmploymentFtePercentagePostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/EmploymentFtePercentagePostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/EmploymentFtePercentagePostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EmploymentFtePercentagePostDto'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentFtePercentageDto'
          description: Given when resource was successfully created.
        "400":
          content:
            application/json:
              example:
                detail: Employment full-time equivalent (FTE) percentage object is
                  missing.
                title: Employment validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted.
        "404":
          content:
            application/json:
              example:
                detail: Employment with id = 12345 not found.
                title: Employment not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Create a new full-time equivalent (FTE) percentage (line) on a given\
        \ employment. (Auth roles: EmploymentFtePercentage_Full)"
      tags:
      - EmploymentFtePercentages
  /ClientIntegrationInformation:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientIntegrationInformationDto'
          description: OK
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: Get information about the integration. (Auth)
      tags:
      - ClientIntegrationInformation
  /ClientContacts:
    get:
      parameters:
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ClientContactDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the contacts registered in the client organization settings.\
        \ (Auth roles: CommonServices,CommonServices_Full)"
      tags:
      - ClientContacts
  /Onboarding/Initiate:
    post:
      description: Initiate the first step in the process of onboarding the integration
        on clients. Read our documentation page for detailed workflow descriptions.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiateOnboardingPostDto'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateOnboardingResponseDto'
          description: Given when resource returned successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted.
        "429":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
      security:
      - {}
      summary: "Initiate the first procedural step of onboarding your integration\
        \ for one or more PowerOffice Go client, using the external onboarding worklfow."
      tags:
      - Onboarding
  /Employees/Employments/{employmentId}/FixedSalaries:
    get:
      parameters:
      - description: The id of the employment.
        example: 12345
        in: path
        name: employmentId
        required: true
        schema:
          format: int64
          type: integer
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EmploymentFixedSalaryDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "400":
          content:
            application/json:
              example:
                detail: Fields property in resourceParameter is not formatted correct.
                title: Invalid resourceParameter
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Employment with id = 12345 not found.
                title: Employment not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get fixed salary lines for the given employment (employment relationships)\
        \ on an employee. (Auth roles: EmploymentFixedSalary,EmploymentFixedSalary_Full)"
      tags:
      - EmploymentFixedSalaries
    post:
      description: "If successful, the new entity will be returned with an id which\
        \ is unique and can be used to reference the created object in relevant requests."
      parameters:
      - description: The id of the employment.
        example: 98765
        in: path
        name: employmentId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EmploymentFixedSalaryPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/EmploymentFixedSalaryPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/EmploymentFixedSalaryPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EmploymentFixedSalaryPostDto'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentFixedSalaryDto'
          description: Given when resource was successfully created.
        "400":
          content:
            application/json:
              example:
                detail: Employment fixed salary object is missing.
                title: Employment validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted.
        "404":
          content:
            application/json:
              example:
                detail: Employment with id = 12345 not found.
                title: Employment not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Create a new fixed salary (line) on a given employment. (Auth roles:\
        \ EmploymentFixedSalary_Full)"
      tags:
      - EmploymentFixedSalaries
  /ClientAdmin/{clientId}/Users:
    get:
      parameters:
      - description: The id of the client to get users from.
        example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        in: path
        name: clientId
        required: true
        schema:
          format: uuid
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "400":
          content:
            application/json:
              example:
                detail: Fields property in resourceParameter is not formatted correct.
                title: Invalid resourceParameter
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the users of the given client.\r\nNote: Only clients that belong\
        \ to the partner are available. (Auth roles: ClientAdmin,ClientAdmin_Full)"
      tags:
      - Users
  /Employees/Employments/{employmentId}/Leaves:
    get:
      parameters:
      - description: The id of the employment.
        example: 12345
        in: path
        name: employmentId
        required: true
        schema:
          format: int64
          type: integer
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EmploymentLeaveDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "400":
          content:
            application/json:
              example:
                detail: Fields property in resourceParameter is not formatted correct.
                title: Invalid resourceParameter
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Employment with id = 12345 not found.
                title: Employment not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get leave lines for the given employment (employment relationships)\
        \ on an employee. (Auth roles: EmploymentLeave,EmploymentLeave_Full)"
      tags:
      - EmploymentLeaves
    post:
      description: "If successful, the new entity will be returned with an id which\
        \ is unique and can be used to reference the created object in relevant requests."
      parameters:
      - description: The id of the employment.
        example: 98765
        in: path
        name: employmentId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EmploymentLeavePostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/EmploymentLeavePostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/EmploymentLeavePostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EmploymentLeavePostDto'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentLeaveDto'
          description: Given when resource was successfully created.
        "400":
          content:
            application/json:
              example:
                detail: Employment leave object is missing.
                title: Employment validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted.
        "404":
          content:
            application/json:
              example:
                detail: Employment with id = 12345 not found.
                title: Employment not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Create a new leave (line) on a given employment. (Auth roles: EmploymentLeave_Full)"
      tags:
      - EmploymentLeaves
  /SalesOrders/{salesOrderId}/attachments/{id}:
    delete:
      parameters:
      - description: The sales order identifier
        example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        in: path
        name: salesOrderId
        required: true
        schema:
          format: uuid
          type: string
      - description: The sales order attachment identifier
        example: 12345
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Given when resource deleted successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource could not be deleted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Deletes an existing attachment from a sales order by its identifier\
        \ (Auth roles: SalesOrderAttachment_Full)"
      tags:
      - SalesOrderAttachments
    get:
      description: Use this method to fetch a attachment file.
      operationId: GetInvoiceAttachmentById
      parameters:
      - description: The sales order identifier
        example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        in: path
        name: salesOrderId
        required: true
        schema:
          format: uuid
          type: string
      - description: The sales order attachment identifier
        example: 12345
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "400":
          description: Given when an error fetching the file occurs
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Fetch an attachment (file) from a sales order by its identifier. (Auth\
        \ roles: SalesOrderAttachment, SalesOrderAttachment_Full)"
      tags:
      - SalesOrderAttachments
  /Suppliers/{id}:
    delete:
      description: "If the supplier have links to transactions or other entities,\
        \ or if the contact is an active customer/employee, this operation cannot\
        \ be performed."
      parameters:
      - description: The id of the supplier to delete.
        example: 12345
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Given when supplier is deleted
        "404":
          content:
            application/json:
              example:
                detail: Supplier with id = 12345 not found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Supplier with id = 12345 is in use and cannot be deleted.
                title: Supplier conflict
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource is in use and cannot be deleted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Delete a supplier entity with a given id. (Auth roles: Supplier_Full)"
      tags:
      - Suppliers
    get:
      description: "The supplier object is a contact entity, meaning the id might\
        \ be shared with a customer and/or an employee if the contact is registered\
        \ as both a supplier and customer/employee in Go."
      operationId: GetSupplierById
      parameters:
      - description: The id of the supplier.
        example: 12345
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Supplier with id = 12345 not found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the specific supplier by id. (Auth roles: Supplier,Supplier_Full)"
      tags:
      - Suppliers
    patch:
      parameters:
      - description: The id of the supplier.
        example: 12345
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: add
              path: /phoneNumber
              value: 2222 5555
            - from: /firstname
              op: copy
              path: /lastname
            - from: /firstname
              op: move
              path: /lastname
            - op: replace
              path: /phoneNumber
              value: 2222 6666
            - op: remove
              path: /phoneNumber
            - op: test
              path: /phoneNumber
              value: 2222 6666
            - op: add
              path: /ContactGroupIds/-
              value: "1"
            - op: add
              path: /ContactGroupIds
              value:
              - 3
              - 1001
            - op: remove
              path: /ContactGroupIds/0
            - op: remove
              path: /ContactGroupIds/-
            - op: replace
              path: /ContactGroupIds/0
              value: 1002
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: "JSON Patch structure for updating a Supplier. See SupplierPatchDto\
          \ schema for all available properties. For more information on JSON patch\
          \ and the various operations allowed, check out: https://datatracker.ietf.org/doc/html/rfc6902"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierDto'
          description: Given when resource was successfully updated
        "400":
          content:
            application/json:
              example:
                detail: ExternalImportReference is already in use. 'ABC123' is used
                  on (contact) Id = 123456789.
                title: Supplier validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Supplier with id = 12345 not found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Change an existing supplier with a given id. (Auth roles: Supplier_Full)"
      tags:
      - Suppliers
  /Customerledger/Statement:
    get:
      parameters:
      - description: "From date, inclusive. Get all transactions with a posted date\
          \ from this date (inclusive). Note that (date time) offsets (if provided)\
          \ is not taken into account, only date is used."
        example: 2021-01-01
        in: query
        name: fromDate
        required: true
        schema:
          format: date
          type: string
      - description: "To date, inclusive. Get all transactions with a posted date\
          \ up to this date (inclusive). If date is less then the current date (today);\
          \ the balance displayed on all entries will be the balance the entry was\
          \ on that date. Note that (date time) offsets (if provided) is not taken\
          \ into account, only date is used."
        example: 2021-01-28
        in: query
        name: toDate
        required: true
        schema:
          format: date
          type: string
      - description: "Filter by contact group IDs. This will return entries for the\
          \ customers belonging in the given contact groups. Separate by comma to\
          \ filter on multiple contact group IDs. If filterString is null or whitespace,\
          \ query is returned as is."
        example: "41345, 21445, 65457"
        in: query
        name: contactGroupIds
        schema:
          type: string
      - description: Filter entries based on the created timestamp property. This
          filtering will return all entries with a created timestamp greater than
          the timestamp provided. Can be used when polling for new entries from Go.
          Date not inclusive.
        example: 2021-09-25 08:03:00.1234567 -00:00
        in: query
        name: createdDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: "Filter by customer numbers. Customer number also represent the\
          \ customer sub-ledger account number. SearchString should be in the form\
          \ of \"10000-15999, 12500, 13000-\" where values from 10000 to 15999, 12500\
          \ and all over 13000 will be selected. If filterString is null or whitespace,\
          \ query is returned as is."
        example: "10000-15990, 12500, 13000-"
        in: query
        name: customerNos
        schema:
          type: string
      - description: Filter transactions on invoices with given custom matching references.
          Separate by comma to filter on multiple custom matching references.
        example: cmr101
        in: query
        name: customMatchingReferences
        schema:
          type: string
      - description: "Filter entries on department codes. Separate by comma to filter\
          \ on multiple codes. If blank, all transactions with or without department\
          \ codes are returned (no filter). If -1, then all transactions without department\
          \ codes are included."
        example: "1, 3, 4"
        in: query
        name: departmentCodes
        schema:
          type: string
      - description: "Filter by customer external numbers. SearchString should be\
          \ in the form of \"30000, 14153-19534, 150000-\" where values for 30000,\
          \ between (inclusive) 14153-19534 and all over 150000 (inclusive) will be\
          \ retrieved. If filterString is null or whitespace, query is returned as\
          \ is."
        example: "30000, 14153-19534, 150000-"
        in: query
        name: externalNos
        schema:
          type: string
      - description: "Include Sub-project(s) for specified project. If projectCodes\
          \ is null, all (sub)projects are included (regardless of this variable)."
        example: true
        in: query
        name: includeSubProject
        schema:
          type: boolean
      - description: Filter transactions for invoices with given invoice numbers.
          Separate by comma to filter on multiple invoice numbers.
        example: "1337, 69420"
        in: query
        name: invoiceNos
        schema:
          type: string
      - description: "Filter entries based on the last changed timestamp property.\
          \ The accounting entry in itself cannot change, but the match state of the\
          \ sub-ledger entry might change. Using last changed filtering is one way\
          \ of retrieving new matched items and as such the payment status of invoices.\
          \ This filtering will return all entries with a last changed timestamp greater\
          \ than the timestamp provided. Date not inclusive."
        example: 2021-09-25 08:03:00.1234567 -00:00
        in: query
        name: lastChangedDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: "Filter on transactions with balances less than amount. This\
          \ will only provide entries with matches. If, for instance, this filter\
          \ is set true and combined with voucherType filter on outgoing invoices,\
          \ this can be one way of retrieving payments on invoices. NOTE: We use absolute\
          \ values, so for credit note entries where balance and amount is negative,\
          \ we get transactions with amount greater than balance."
        example: true
        in: query
        name: onlyBalancesLessThanAmount
        schema:
          type: boolean
      - description: Sets whether or not to return only entries that the current integration
          created. Can be used to reduce the number of entries if only the status
          of transactions that the querying integration created are relevant to report.
        example: true
        in: query
        name: onlyCreatedByCurrentIntegration
        schema:
          type: boolean
      - description: "Filter entries on project codes. Separate by comma to filter\
          \ on multiple codes. If blank, all transactions with or without projects\
          \ codes are returned (no filter). If -1, then all transactions without project\
          \ codes are included."
        example: "10, 20, 30.1"
        in: query
        name: projectCodes
        schema:
          type: string
      - description: "Filter entries by sub-ledger number series IDs. This will return\
          \ entries for the customers belonging in the given sub-ledger number series.\
          \ Separate by comma to filter on multiple sub-ledger number series IDs.\
          \ If filterString is null or whitespace, query is returned as is.\""
        example: "38ecfc1a-bf51-448f-99a8-a61bc5771109, ee373540-ca8d-4562-8fb6-6fb52de47722"
        in: query
        name: subLedgerNumberSeriesIds
        schema:
          type: string
      - description: "Filter by voucher types. Separate by comma to filter multiple\
          \ voucher types. If blank, all transactions returned (no filter)."
        example: "OutgoingInvoice, BankJournal"
        in: query
        name: voucherTypes
        schema:
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomerLedgerEntryDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets all customer sub-ledger transactions between two dates (inclusive).\
        \ The dates represent the posted date (date of accounting effect). Multiple\
        \ filtering options. (Auth roles: CustomerLedger,CustomerLedger_Full)"
      tags:
      - CustomerSubLedgerEntries
  /ClientBankAccounts/BankApprovers/{id}:
    get:
      operationId: GetBankApproverById
      parameters:
      - description: The id of the bank approver.
        example: 12345
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankApproverDto'
          description: Given when resource returned successfully
        "400":
          content:
            application/json:
              example:
                detail: Bank approver object is missing.
                title: Bank approvers validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Bank approver with id = 12345 not found.
                title: Bank approvers not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get a specific bank approver by Id. (Auth roles: ClientBankAccount,ClientBankAccount_Full)"
      tags:
      - ClientBankAccountApprovers
    patch:
      parameters:
      - description: The id of the bank approver.
        example: 12345
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: add
              path: /IsActiveApprover
              value: "true"
            - from: /ToDate
              op: copy
              path: /FromDate
            - from: /ToDate
              op: move
              path: /FromDate
            - op: replace
              path: /IsActiveApprover
              value: "false"
            - op: remove
              path: /IsActiveApprover
            - op: test
              path: /IsActiveApprover
              value: "true"
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: "JSON Patch structure for updating an approver. See BankApproverPatchDto\
          \ schema for all available properties. For more information on JSON patch\
          \ and the various operations allowed, check out: https://datatracker.ietf.org/doc/html/rfc6902"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankApproverDto'
          description: Given when resource was successfully updated.
        "400":
          content:
            application/json:
              example:
                detail: Bank approver object is missing.
                title: Bank approvers validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Bank approver with id = 12345 not found.
                title: Bank approvers not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Make changes to a specific bank approver. (Auth roles: ClientBankAccount_Full)"
      tags:
      - ClientBankAccountApprovers
  /SalesOrders/Complete:
    post:
      description: "If successful, the new entity will be returned with an id which\
        \ is unique and can be used to reference the created object in relevant requests."
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SalesOrderCompletePostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrderCompletePostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/SalesOrderCompletePostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SalesOrderCompletePostDto'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrderCompleteDto'
          description: Given when resource was successfully created.
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted.
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Create a new sales order entity complete with lines. (Auth roles:\
        \ SalesOrders_Full)"
      tags:
      - SalesOrderComplete
  /ClientBankAccounts/{id}:
    get:
      operationId: GetClientBankAccountById
      parameters:
      - description: The identifier of a client bank account.
        example: 12345
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientBankAccountDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get a client bank account by id (Auth roles: ClientBankAccount,ClientBankAccount_Full)"
      tags:
      - ClientBankAccounts
    patch:
      parameters:
      - description: The identifier of a client bank account.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: add
              path: /OverdraftLimit
              value: "10000"
            - op: remove
              path: /OverdraftLimit
            - op: replace
              path: /AllowOverdraft
              value: "true"
            - op: replace
              path: /BankName
              value: DNB ASA
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: "JSON Patch structure for updating a ClientBankAccount. See ClientBankAccountPatchDto\
          \ schema for all available properties.\r\n            For more information\
          \ on JSON patch and the various operations allowed, check out: https://datatracker.ietf.org/doc/html/rfc6902"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientBankAccountDto'
          description: Given when a resource was updated successfully
        "400":
          content:
            application/json:
              example:
                detail: Client bank account with id = 12345 not found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Client bank account with id = 12345 not found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Update a bank account on the client (Auth roles: ClientBankAccount_Full)"
      tags:
      - ClientBankAccounts
  /ContactDeliveryAddresses/{contactId}:
    post:
      description: "CountryCode must be a valid ISO 3166-1 alfa-2 code if provided.\
        \ If not CountryCode is provided, it will default to \"NO\"."
      parameters:
      - description: Id of the contact
        in: path
        name: contactId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ContactDeliveryAddressPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ContactDeliveryAddressPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ContactDeliveryAddressPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ContactDeliveryAddressPostDto'
        description: A contact delivery address post dto
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactDeliveryAddressDto'
          description: Given when a resource was created successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Creates a delivery address for a given contact (customer/employee/supplier).\
        \ (Auth roles: ContactDeliveryAddress_Full, Customer_Full, Supplier_Full,\
        \ Employee_Full)"
      tags:
      - ContactDeliveryAddresses
  /Employees/{employeeId}:
    delete:
      description: "If the employee have links to transactions or other entities,\
        \ or if the contact is an active customer/supplier, this operation cannot\
        \ be performed."
      parameters:
      - description: The id of the employee to delete.
        example: 12345
        in: path
        name: employeeId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Given when employee is deleted
        "404":
          content:
            application/json:
              example:
                detail: Employee with id = 12345 not found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Employee with id = 12345 is in use and cannot be deleted.
                title: Employee conflict
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource is in use and cannot be deleted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Delete an employee entity with a given id. (Auth roles: Employee_Full)"
      tags:
      - Employees
    get:
      description: "The employee object is a contact entity, meaning the id might\
        \ be shared with a customer and/or a supplier if the contact is registered\
        \ as both an employee and customer/supplier in Go."
      operationId: GetEmployeeById
      parameters:
      - description: The id of the employee.
        example: 12345
        in: path
        name: employeeId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Employee with id = 12345 not found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the specific employee by id. (Auth roles: Employee,Employee_Full)"
      tags:
      - Employees
    patch:
      parameters:
      - description: The id of the employee.
        example: 12345
        in: path
        name: employeeId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: add
              path: /phoneNumber
              value: 2222 5555
            - from: /firstname
              op: copy
              path: /lastname
            - from: /firstname
              op: move
              path: /lastname
            - op: replace
              path: /phoneNumber
              value: 2222 6666
            - op: remove
              path: /phoneNumber
            - op: test
              path: /phoneNumber
              value: 2222 6666
            - op: add
              path: /ContactGroupIds/-
              value: "1"
            - op: add
              path: /ContactGroupIds
              value:
              - 3
              - 1001
            - op: remove
              path: /ContactGroupIds/0
            - op: remove
              path: /ContactGroupIds/-
            - op: replace
              path: /ContactGroupIds/0
              value: 1002
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: "JSON Patch structure for updating an Employee. See EmployeePatchDto\
          \ schema for all available properties. For more information on JSON patch\
          \ and the various operations allowed, check out: https://datatracker.ietf.org/doc/html/rfc6902"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDto'
          description: Given when resource was successfully updated.
        "400":
          content:
            application/json:
              example:
                detail: ExternalImportReference is already in use. 'ABC123' is used
                  on (contact) Id = 123456789.
                title: Employee validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Employee with id = 12345 not found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Change an existing employee with a given id. (Auth roles: Employee_Full)"
      tags:
      - Employees
  /VatSettings:
    get:
      operationId: GetVatSettings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VatSettingsDto'
          description: Given when resource returned successfully
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the vat settings on the client. (Auth roles: CommonServices,CommonServices_Full)"
      tags:
      - VatSettings
  /Products/{id}:
    delete:
      parameters:
      - description: The id of the product to delete.
        example: 12345
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Given when product is deleted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource is in use and cannot be deleted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Deletes a product by ID. (Auth roles: Product_Full)"
      tags:
      - Products
    get:
      operationId: GetProductById
      parameters:
      - description: The id of a product
        example: 1234
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get a product by its ID. (Auth roles: Product,Product_Full)"
      tags:
      - Products
    patch:
      parameters:
      - description: ""
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: add
              path: /description
              value: Bottomless box of mysteries
            - from: /unitPrice
              op: copy
              path: /unitCost
            - from: /unitPrice
              op: move
              path: /unitCost
            - op: replace
              path: /name
              value: Big blue box
            - op: remove
              path: /description
            - op: test
              path: /code
              value: BA-12
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDto'
          description: Given when product is updated
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Updates a product by ID. (Auth roles: Product_Full)"
      tags:
      - Products
  /Customers:
    get:
      description: "The customer object is a contact entity, meaning the id might\
        \ be shared with a supplier and/or an employee if the contact is registered\
        \ as both a customer and supplier/employee in Go."
      parameters:
      - description: "Filter by contact group IDs. Separate by comma [,] to filter\
          \ on multiple contact group IDs. If null or whitespace, all customers with\
          \ or without contact group IDs are returned (filter is not used)."
        example: "41345, 21445, 65457"
        in: query
        name: contactGroupIds
        schema:
          type: string
      - description: Filter by the customer created timestamp property. This filtering
          will return all customers with a created timestamp greater than the timestamp
          provided. Can be used when polling for new entries from Go. Timestamp not
          inclusive.
        example: 2021-09-25 08:03:00.1234567 -00:00
        in: query
        name: customerCreatedDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: "Filter by customer numbers. Separate by comma [,] to filter\
          \ on multiple customer numbers. A range of numbers can be specified using\
          \ dash/hyphen [-]. For example \"10000-11000, 12000, 13000-\" will result\
          \ in customers with numbers from and including 10000 to 11000, 12000, 13000\
          \ and all above will be returned. If null or whitespace, the filter is not\
          \ used."
        example: "10000-11000, 12000, 13000-"
        in: query
        name: customerNos
        schema:
          type: string
      - description: "Filter by external import reference. If null or whitespace,\
          \ the filter is not used."
        example: 123ABC
        in: query
        name: externalImportReference
        schema:
          type: string
      - description: "Filter by customer external numbers. SearchString should be\
          \ in the form of \"30000, 14153-19534, 150000-\" where values for 30000,\
          \ between (inclusive) 14153-19534 and all over 150000 (inclusive) will be\
          \ retrieved. If filterString is null or whitespace, query is returned as\
          \ is."
        example: "30000, 14153-19534, 150000-"
        in: query
        name: externalNos
        schema:
          type: string
      - description: "Filter by the last changed timestamp property. This filtering\
          \ will return all customers with a last changed timestamp greater than the\
          \ timestamp provided. Can be used when polling for new entries. If used,\
          \ changed customers should replace what was previously stored in the external\
          \ system. Date not inclusive."
        example: 2021-09-25 08:03:00.1234567 -00:00
        in: query
        name: lastChangedDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomerDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "400":
          content:
            application/json:
              example:
                detail: "contactGroupIds contains negative numbers and/or range of\
                  \ numbers. '-' is not allowed, only comma ',' separated single positive\
                  \ numbers are allowed."
                title: Unable to cast object(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: "Could not find contact group(s) with id = 41345, 21445."
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the customers available on the client. Multiple filtering options.\
        \ (Auth roles: Customer,Customer_Full)"
      tags:
      - Customers
    post:
      description: "If successful, the new entity will be returned with an id which\
        \ is unique and can be used to reference the created object in relevant requests."
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CustomerPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CustomerPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CustomerPostDto'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDto'
          description: Given when resource was successfully created.
        "400":
          content:
            application/json:
              example:
                detail: ExternalImportReference is already in use. 'ABC123' is used
                  on (contact) Id = 123456789.
                title: Customer validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted.
        "404":
          content:
            application/json:
              example:
                detail: Department with code = 'Avdeling10' not found.
                title: Customer validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Create one new customer entity. (Auth roles: Customer_Full)"
      tags:
      - Customers
  /Employees/Employments/{employmentId}/Salaries/{salaryId}:
    delete:
      description: "Note that there must be at least one salary line on an employment,\
        \ so if the last salary line is attempted to be deleted you will get a 409\
        \ Conflict response."
      parameters:
      - description: The id of the employment.
        example: 98765
        in: path
        name: employmentId
        required: true
        schema:
          format: int64
          type: integer
      - description: The id of the salary (line).
        example: 12345
        in: path
        name: salaryId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Given when salary line is deleted
        "404":
          content:
            application/json:
              example:
                detail: Employment with id = 12345 not found.
                title: Employment not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Salary (line) with id = 7001 is the last salary line on the
                  employment and thus cannot be deleted.
                title: Employment conflict error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource is in use and cannot be deleted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Delete a specific salary (line) on a given employment. (Auth roles:\
        \ EmploymentSalary_Full)"
      tags:
      - EmploymentSalaries
    get:
      operationId: GetSalaryById
      parameters:
      - description: The id of the employment.
        example: 98765
        in: path
        name: employmentId
        required: true
        schema:
          format: int64
          type: integer
      - description: The id of the salary (line).
        example: 12345
        in: path
        name: salaryId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentSalaryDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Employment with id = 12345 not found.
                title: Employment not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets a specific salary (line) on a given employment. (Auth roles:\
        \ EmploymentSalary,EmploymentSalary_Full)"
      tags:
      - EmploymentSalaries
    patch:
      parameters:
      - description: The id of the employment.
        example: 98765
        in: path
        name: employmentId
        required: true
        schema:
          format: int64
          type: integer
      - description: The id of the salary (line).
        example: 12345
        in: path
        name: salaryId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: add
              path: /AnnualSalary
              value: "123456"
            - from: /AnnualSalary
              op: copy
              path: /HourlyRate
            - from: /AnnualSalary
              op: move
              path: /HourlyRate
            - op: replace
              path: /FromDate
              value: 2024-07-15
            - op: remove
              path: /HourlyRate
            - op: test
              path: /RemunerationType
              value: FixedWage
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: "JSON Patch structure for updating a salary (line). See EmploymentSalaryPatchDto\
          \ schema for all available properties. For more information on JSON patch\
          \ and the various operations allowed, check out: https://datatracker.ietf.org/doc/html/rfc6902"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentSalaryDto'
          description: Given when resource was successfully updated
        "400":
          content:
            application/json:
              example:
                detail: "EmploymentSalaryPatchDto: The value 'bogus' is invalid for\
                  \ target location."
                title: Employment validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Employment with id = 12345 not found.
                title: Employment not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Change an existing salary (line) on a given employment. (Auth roles:\
        \ EmploymentSalary_Full)"
      tags:
      - EmploymentSalaries
  /ContactBankAccounts/{contactId}:
    post:
      parameters:
      - description: ""
        example: 12345
        in: path
        name: contactId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ContactBankAccountPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ContactBankAccountPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ContactBankAccountPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ContactBankAccountPostDto'
        description: ""
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactBankAccountDto'
          description: Given when a resource was created successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Add new bank account on a contact (customer/employee/supplier) with\
        \ a given id. (Auth roles: ContactBankAccount_Full, Customer_Full, Supplier_Full,\
        \ Employee_Full)"
      tags:
      - ContactBankAccounts
  /VoucherDocumentation/Download:
    get:
      description: The available VoucherDocumentationType is listed in the GET VoucherDocumentation
        endpoint.
      operationId: GetVoucherDocumentation
      parameters:
      - description: Voucher identifier
        example: f1e93414-0495-4121-b69f-4ddc99e67ce1
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: The type of documentation.
        example: Images
        in: query
        name: documentationType
        schema:
          $ref: '#/components/schemas/VoucherDocumentationType'
      responses:
        "200":
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get voucher documentation files as single zip file. (Auth roles: VoucherDocumentation,VoucherDocumentation_Full)"
      tags:
      - VoucherDocumentation
  /Employees/{employeeId}/HourlyRates/{hourlyRateId}:
    delete:
      parameters:
      - description: The id of the employee the hourly rate belongs to.
        example: 12345
        in: path
        name: employeeId
        required: true
        schema:
          format: int64
          type: integer
      - description: The id of the hourly rate to delete.
        example: 123
        in: path
        name: hourlyRateId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Given when hourly rate is deleted
        "404":
          content:
            application/json:
              example:
                detail: Employee with id = 12345 not found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Employee Hourly Rate with id = 123 is in use and cannot be
                  deleted.
                title: Employee Hourly Rate conflict
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource is in use and cannot be deleted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Delete a specific set of hourly rates on a given employee. (Auth roles:\
        \ EmployeeHourlyRates_Full)"
      tags:
      - EmployeeHourlyRates
    get:
      operationId: GetHourlyRateById
      parameters:
      - description: The id of the employee.
        example: 12345
        in: path
        name: employeeId
        required: true
        schema:
          format: int64
          type: integer
      - description: The id of the hourly rate.
        example: 123
        in: path
        name: hourlyRateId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeHourlyRateDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Employee with id = 12345 not found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets a specific hourly rate on a given employee. (Auth roles: EmployeeHourlyRates,EmployeeHourlyRates_Full)"
      tags:
      - EmployeeHourlyRates
    patch:
      parameters:
      - description: The id of the employee.
        example: 12345
        in: path
        name: employeeId
        required: true
        schema:
          format: int64
          type: integer
      - description: The id of the hourly rate to update.
        example: 123
        in: path
        name: hourlyRateId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: add
              path: /phoneNumber
              value: 2222 5555
            - from: /firstname
              op: copy
              path: /lastname
            - from: /firstname
              op: move
              path: /lastname
            - op: replace
              path: /phoneNumber
              value: 2222 6666
            - op: remove
              path: /phoneNumber
            - op: test
              path: /phoneNumber
              value: 2222 6666
            - op: add
              path: /ContactGroupIds/-
              value: "1"
            - op: add
              path: /ContactGroupIds
              value:
              - 3
              - 1001
            - op: remove
              path: /ContactGroupIds/0
            - op: remove
              path: /ContactGroupIds/-
            - op: replace
              path: /ContactGroupIds/0
              value: 1002
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: "JSON Patch structure for updating an hourly rate. See EmployeeHourlyRatesPatchDto\
          \ schema for all available properties. For more information on JSON patch\
          \ and the various operations allowed, check out: https://datatracker.ietf.org/doc/html/rfc6902"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeHourlyRateDto'
          description: Given when resource was successfully updated.
        "400":
          content:
            application/json:
              example:
                detail: ValidFromDate date must have a value.
                title: Employee Hourly Rates validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Employee with id = 12345 not found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Change an existing hourly rate entry on an employee with a given (hourlRate)\
        \ Id. (Auth roles: EmployeeHourlyRates_Full)"
      tags:
      - EmployeeHourlyRates
  /Currencies:
    get:
      description: "Gets a list of all currencies available in Go.\r\nThe currencies\
        \ in active use on the client has the property IsActive = true.\r\nActive\
        \ currencies can be used in GUI operations in Go, but does not affect which\
        \ currencies that can be used when\r\nposting transactions using the APIs"
      parameters:
      - description: Filter by currency code.
        example: NOK
        in: query
        name: currencyCode
        schema:
          type: string
      - description: Filter by isActive parameter..
        example: true
        in: query
        name: isActive
        schema:
          type: boolean
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CurrencyDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when no content is returned
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the currencies set on the client. (Auth roles: CommonServices,CommonServices_Full)"
      tags:
      - Currencies
  /Projects/{id}:
    delete:
      parameters:
      - description: The id of the department to delete.
        example: 12345
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Given when project is deleted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource is in use and cannot be deleted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Delete a project entity with a given id. (Auth roles: Project_Full)"
      tags:
      - Projects
    get:
      operationId: GetProjectById
      parameters:
      - description: The id of the project
        example: 12345
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get an existing project by it's id. (Auth roles: Project,Project_Full)"
      tags:
      - Projects
    patch:
      parameters:
      - description: The id of the project
        example: 12345
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: add
              path: /externalNumber
              value: "12345"
            - from: /hourlyRateMarkupFactor
              op: copy
              path: /expenseMarkupFactor
            - from: /hourlyRateMarkupFactor
              op: move
              path: /expenseMarkupFactor
            - op: replace
              path: /name
              value: Project A
            - op: remove
              path: /departmentCode
            - op: test
              path: /code
              value: "10"
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: "JSON Patch structure for updating a Project. See ProjectPatchDto\
          \ schema for all available properties. For more information on JSON patch\
          \ and the various operations allowed, check out: https://datatracker.ietf.org/doc/html/rfc6902"
      responses:
        "200":
          description: Given when resource was successfully updated.
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted.
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Make changes to an existing project. (Auth roles: Project_Full)"
      tags:
      - Projects
  /Employees/Employments/{employmentId}/Leaves/{leaveId}:
    delete:
      parameters:
      - description: The id of the employment.
        example: 98765
        in: path
        name: employmentId
        required: true
        schema:
          format: int64
          type: integer
      - description: The id of the leave (line).
        example: f575b4b0-55be-4b56-b01f-44b204df82c5
        in: path
        name: leaveId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          description: Given when leave line is deleted
        "404":
          content:
            application/json:
              example:
                detail: Employment with id = 12345 not found.
                title: Employment not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource cannot be deleted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Delete a specific leave (line) on a given employment. (Auth roles:\
        \ EmploymentLeave_Full)"
      tags:
      - EmploymentLeaves
    get:
      operationId: GetLeaveById
      parameters:
      - description: The id of the employment.
        example: 98765
        in: path
        name: employmentId
        required: true
        schema:
          format: int64
          type: integer
      - description: The id of the leave (line).
        example: f575b4b0-55be-4b56-b01f-44b204df82c5
        in: path
        name: leaveId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentLeaveDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Employment with id = 12345 not found.
                title: Employment not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets a specific leave (line) on a given employment. (Auth roles: EmploymentLeave,EmploymentLeave_Full)"
      tags:
      - EmploymentLeaves
    patch:
      parameters:
      - description: The id of the employment.
        example: 98765
        in: path
        name: employmentId
        required: true
        schema:
          format: int64
          type: integer
      - description: The id of the leave (line).
        example: f575b4b0-55be-4b56-b01f-44b204df82c5
        in: path
        name: leaveId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: add
              path: /ExcludeEmployeeFromPayroll
              value: "true"
            - from: /EndDate
              op: copy
              path: /StartDate
            - from: /EndDate
              op: move
              path: /StartDate
            - op: replace
              path: /StartDate
              value: 2024-07-15
            - op: remove
              path: /AdjustFixedWage
            - op: test
              path: /TypeOfLeave
              value: Military
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: "JSON Patch structure for updating a leave (line). See EmploymentLeavePatchDto\
          \ schema for all available properties. For more information on JSON patch\
          \ and the various operations allowed, check out: https://datatracker.ietf.org/doc/html/rfc6902"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentLeaveDto'
          description: Given when resource was successfully updated
        "400":
          content:
            application/json:
              example:
                detail: Enum 'typeofleave' with value = 2 is not valid. (Enums is
                  not allowed to be represented as integers).
                title: Employment validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Employment with id = 12345 not found.
                title: Employment not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Change an existing leave (line) on a given employment. (Auth roles:\
        \ EmploymentLeave_Full)"
      tags:
      - EmploymentLeaves
  /ContactDeliveryAddresses/{contactId}/{id}:
    delete:
      parameters:
      - description: Id of the contact
        in: path
        name: contactId
        required: true
        schema:
          format: int64
          type: integer
      - description: Id of the contact delivery address
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Given when resource is deleted successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource is in use and cannot be deleted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Deletes a delivery address by id for a given contact (Auth roles:\
        \ ContactDeliveryAddress_Full, Customer_Full, Supplier_Full, Employee_Full)"
      tags:
      - ContactDeliveryAddresses
    get:
      operationId: GetContactDeliveryAddressById
      parameters:
      - description: The id of the contact
        in: path
        name: contactId
        required: true
        schema:
          format: int64
          type: integer
      - description: The id of a delivery address
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactDeliveryAddressDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets a delivery address by id for a given contact (Auth roles: ContactDeliveryAddress,\
        \ ContactDeliveryAddress_Full, Customer, Customer_Full, Supplier, Supplier_Full,\
        \ Employee, Employee_Full)"
      tags:
      - ContactDeliveryAddresses
    patch:
      description: CountryCode will default to "NO" if provided as null or empty string.
      parameters:
      - description: Id of the contact
        in: path
        name: contactId
        required: true
        schema:
          format: int64
          type: integer
      - description: Id of the contact delivery address
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: add
              path: /addressLine1
              value: 123 Main St
            - from: /addressLine2
              op: copy
              path: /city
            - from: /addressLine2
              op: move
              path: /city
            - op: replace
              path: /zipCode
              value: "12345"
            - op: remove
              path: /countryCode
            - op: test
              path: /addressLine1
              value: 123 Main St
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: Json patch document
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactDeliveryAddressDto'
          description: Given when a resource was successfully updated
        "400":
          content:
            application/json:
              example:
                detail: "ContactDeliveryAddressPatchDto: The target location specified\
                  \ by path segment 'addressLine3' was not found."
                title: Contact delivery address validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Contact delivery address with id = 12345 not found on Contact
                  with id = 12345.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Change an existing delivery addresses for a given contact (customer/employee/supplier\
        \ identifier). (Auth roles: ContactDeliveryAddress_Full, Customer_Full, Supplier_Full,\
        \ Employee_Full)"
      tags:
      - ContactDeliveryAddresses
  /Products:
    get:
      description: "The primary use of products are to set products on sales order\
        \ lines, but the products can also be used as a general dimension og other\
        \ transactions, for reporting purposes."
      operationId: GetProducts
      parameters:
      - description: "Filter by product group codes. Search string should be in the\
          \ form of \"1, ABC, 10B\" (codes separated by comma). If filter string is\
          \ null or whitespace, query is returned as is."
        example: "1, ABC, 10B"
        in: query
        name: codes
        schema:
          type: string
      - description: Find product groups created after this timestamp.
        example: 2023-07-03 14:28:00.1234567Z
        in: query
        name: createdDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: Gets a value indicating whether the product is archived (set
          inactive). Archived products will be unavailable for usage in the GUI.
        example: false
        in: query
        name: isArchived
        schema:
          type: boolean
      - description: Find products that have been changed after this timestamp.
        example: 2023-07-03 14:28:00.1234567Z
        in: query
        name: lastChangedDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: Find products that have stock on hand changed after this timestamp.
        example: 2023-07-03 14:28:00.1234567Z
        in: query
        name: stockOnHandLastChangedDatetimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: Filter by product name. Filter should be a comma separated string.
        example: "iphone, galaxy, pixel"
        in: query
        name: names
        schema:
          type: string
      - description: "Filter by product group codes. Search string should be in the\
          \ form of \"12315, 12345, 22134\" (codes separated by comma). If filter\
          \ string is null or whitespace, query is returned as is."
        example: "12315, 12345"
        in: query
        name: productGroupCodes
        schema:
          type: string
      - description: "Filter products by type. Available values: Product, Service"
        example: service
        in: query
        name: type
        schema:
          $ref: '#/components/schemas/ProductType'
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProductDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when no content is returned
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get the products from the client. (Auth roles: Product,Product_Full)"
      tags:
      - Products
    post:
      description: "The primary use of products are to set products on sales order\
        \ lines, but the products can also be used as a general dimension og other\
        \ transactions, for reporting purposes."
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProductPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductPostDto'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDto'
          description: Given when resource returned successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Creates a new product. (Auth roles: Product_Full)"
      tags:
      - Products
  /Employees/Employments/{employmentId}/FixedSalaries/{fixedSalaryId}:
    delete:
      parameters:
      - description: The id of the employment.
        example: 98765
        in: path
        name: employmentId
        required: true
        schema:
          format: int64
          type: integer
      - description: The id of the fixed salary (line).
        example: f575b4b0-55be-4b56-b01f-44b204df82c5
        in: path
        name: fixedSalaryId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          description: Given when fixed salary line is deleted
        "404":
          content:
            application/json:
              example:
                detail: Employment with id = 12345 not found.
                title: Employment not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource cannot be deleted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Delete a specific fixed salary (line) on a given employment. (Auth\
        \ roles: EmploymentFixedSalary_Full)"
      tags:
      - EmploymentFixedSalaries
    get:
      operationId: GetFixedSalaryById
      parameters:
      - description: The id of the employment.
        example: 98765
        in: path
        name: employmentId
        required: true
        schema:
          format: int64
          type: integer
      - description: The id of the fixed salary (line).
        example: f575b4b0-55be-4b56-b01f-44b204df82c5
        in: path
        name: fixedSalaryId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentFixedSalaryDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Employment with id = 12345 not found.
                title: Employment not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets a specific fixed salary (line) on a given employment. (Auth roles:\
        \ EmploymentFixedSalary,EmploymentFixedSalary_Full)"
      tags:
      - EmploymentFixedSalaries
    patch:
      parameters:
      - description: The id of the employment.
        example: 98765
        in: path
        name: employmentId
        required: true
        schema:
          format: int64
          type: integer
      - description: The id of the fixed salary (line).
        example: f575b4b0-55be-4b56-b01f-44b204df82c5
        in: path
        name: fixedSalaryId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: add
              path: /Amount
              value: "123456"
            - from: /MinAmount
              op: copy
              path: /MaxAmount
            - from: /MinAmount
              op: move
              path: /MaxAmount
            - op: replace
              path: /CarRegistrationNo
              value: AB12345
            - op: remove
              path: /Amount
            - op: test
              path: /TaxRule
              value: Svalbard
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: "JSON Patch structure for updating a fixed salary (line). See\
          \ EmploymentFixedSalaryPatchDto schema for all available properties. For\
          \ more information on JSON patch and the various operations allowed, check\
          \ out: https://datatracker.ietf.org/doc/html/rfc6902"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentFixedSalaryDto'
          description: Given when resource was successfully updated
        "400":
          content:
            application/json:
              example:
                detail: Bank account does not belong to the supplier.
                title: Fixed salary line validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Employment with id = 12345 not found.
                title: Employment not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Change an existing fixed salary (line) on a given employment. (Auth\
        \ roles: EmploymentFixedSalary_Full)"
      tags:
      - EmploymentFixedSalaries
  /Vouchers/ManualJournals:
    post:
      description: "Directly post a new manual voucher to the general ledger of the\
        \ client. Manual vouchers contain general\r\nvoucher fields and features,\
        \ and are often used if no other specific voucher types apply to the use case\r\
        \nof the transactions."
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ManualVoucherPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ManualVoucherPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ManualVoucherPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ManualVoucherPostDto'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManualVoucherDto'
          description: Given when resource was created successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Directly post a new manual voucher to the general ledger of the client.\
        \ (Auth roles: ManualVoucher_Full)"
      tags:
      - ManualVoucherPosting
  /Suppliers:
    get:
      description: "The supplier object is a contact entity, meaning the id might\
        \ be shared with a customer and/or an employee if the contact is registered\
        \ as both a supplier and customer/employee in Go."
      parameters:
      - description: "Filter by contact group IDs. Separate by comma to filter on\
          \ multiple contact group IDs. If filterString is null or whitespace, query\
          \ is returned as is."
        example: "41345, 21445, 65457"
        in: query
        name: contactGroupIds
        schema:
          type: string
      - description: "Filter by external import reference. If filterString is null\
          \ or whitespace, query is returned as is."
        example: 123ABC
        in: query
        name: externalImportReference
        schema:
          type: string
      - description: "Filter by supplier external numbers. SearchString should be\
          \ in the form of \"30000, 14153-19534, 150000-\" where values for 30000,\
          \ between (inclusive) 14153-19534 and all over 150000 (inclusive) will be\
          \ retrieved. If filterString is null or whitespace, query is returned as\
          \ is."
        example: "30000, 14153-19534, 150000-"
        in: query
        name: externalNos
        schema:
          type: string
      - description: "Filter by the last changed timestamp property. This filtering\
          \ will return all suppliers with a last changed timestamp greater than the\
          \ timestamp provided. Can be used when polling for new entries. If used,\
          \ changed suppliers should replace what was previously stored in the external\
          \ system. Date not inclusive."
        example: 2021-09-25 08:03:00.1234567 -00:00
        in: query
        name: lastChangedDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: Filter by the supplier created timestamp property. This filtering
          will return all suppliers with a created timestamp greater than the timestamp
          provided. Can be used when polling for new entries from Go. Date not inclusive.
        example: 2021-09-25 08:03:00.1234567 -00:00
        in: query
        name: supplierCreatedDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: "Filter by supplier numbers. SearchString should be in the form\
          \ of \"20000, 20100-20200, 20500-\" where values for 20000, between (inclusive)\
          \ 20100-20200 and all over 20500 (inclusive) will be retrieved. If filterString\
          \ is null or whitespace, query is returned as is."
        example: "20000, 20100-20200, 20500-"
        in: query
        name: supplierNos
        schema:
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SupplierDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "400":
          content:
            application/json:
              example:
                detail: "contactGroupIds contains negative numbers and/or range of\
                  \ numbers. '-' is not allowed, only comma ',' separated single positive\
                  \ numbers are allowed."
                title: Unable to cast object(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: "Could not find contact group(s) with id = 41345, 21445."
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the suppliers available on the client. Multiple filtering options.\
        \ (Auth roles: Supplier,Supplier_Full)"
      tags:
      - Suppliers
    post:
      description: "If successful, the new entity will be returned with an id which\
        \ is unique and can be used to reference the created object in relevant requests."
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SupplierPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/SupplierPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SupplierPostDto'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierDto'
          description: Given when resource was successfully created
        "400":
          content:
            application/json:
              example:
                detail: ExternalImportReference is already in use. 'ABC123' is used
                  on (contact) Id = 123456789.
                title: Supplier validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Supplier with id = 12345 not found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Create one new supplier entity. (Auth roles: Supplier_Full)"
      tags:
      - Suppliers
  /Projects:
    get:
      description: "A project may be a standalone project or a subproject.\r\nSubprojects\
        \ will have the code notation code of main project.code of subproject.\r\n\
        Example: A project with code 10 have a subproject with code 2 in the user\
        \ interface.\r\nThe code of the subprojcet when retrieved from the API will\
        \ be 10.2 (and because of this, \".\" (dot) is reserved and cannot be used\
        \ in project codes)"
      operationId: GetProjects
      parameters:
      - description: Filter on the created timestamp property. This filtering will
          return all projects with a created timestamp greater than the timestamp
          provided. Can be used when polling for new project from Go. Date not inclusive.
        example: 2021-09-25 08:03:00.1234567 -00:00
        in: query
        name: createdDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: "Filter by customer numbers. A project may only be assigned to\
          \ one customer, and this search-string will return all projects related\
          \ to the specified customer numbers provided.\r\n                Note that\
          \ sub-projects will inherit the main projects' customer, unless specified\
          \ otherwise on the sub-project.\r\n                If inherited, the sub-project\
          \ customer number will return null, so it is preferable to use the filter\
          \ includeSubProject in conjunction with this customer number filtering.\r\
          \n                Separate by comma [,] to filter on multiple customer numbers.\
          \ A range of numbers can be specified using dash/hyphen [-]. For example\
          \ \"10000-11000, 12000, 13000-\" will result in customers with numbers from\
          \ and including 10000 to 11000, 12000, 13000 and all above will be returned.\
          \ If null or whitespace, the filter is not used."
        example: "10000-11000, 12000, 13000-"
        in: query
        name: customerNos
        schema:
          type: string
      - description: "Filter projects on department codes. Separate by comma to filter\
          \ on multiple codes.\r\n                If blank, all projects with or without\
          \ department codes are returned (no filter). Note that subprojects will\
          \ inherit the main project department, unless specified otherwise on the\
          \ subproject.\r\n                If inherited, the subproject department\
          \ code will return null, so it is preferable to use the filter includeSubProject\
          \ in conjunction with this department code filtering"
        example: "1, 2, 3"
        in: query
        name: departmentCodes
        schema:
          type: string
      - description: "Option to exclude archivedprojects. Default is false, meaning\
          \ that all projects are returned if not set."
        example: false
        in: query
        name: excludeArchivedProject
        schema:
          type: boolean
      - description: "Include Sub-project(s) for specified projectCodes. If projectCodes\
          \ is null, all (sub)projects are included (regardless of this variable).\
          \ If projectCodes is set to subproject(s), this variable have no effect\
          \ for those projects."
        in: query
        name: includeSubProjects
        schema:
          type: boolean
      - description: Filter projects on the last changed timestamp property. This
          filtering will return all projects with a last changed timestamp greater
          than the timestamp provided. Date not inclusive.
        example: 2021-09-25 08:03:00.1234567 +00:00
        in: query
        name: lastChangedDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: Filter by the name of projects. Will return projects that contains
          the searchstring.
        example: Sales
        in: query
        name: name
        schema:
          type: string
      - description: Filter by project billing method.
        example: "1"
        in: query
        name: projectBillingMethod
        schema:
          $ref: '#/components/schemas/ProjectBillingMethod'
      - description: "Filter by project codes. SearchString should be in the form\
          \ of \"1, ABC, 10B\" (codes separated by comma). If filterString is null\
          \ or whitespace, query is returned as is."
        example: "1, ABC, 10B"
        in: query
        name: projectCodes
        schema:
          type: string
      - description: "Filter by project managers via their employee numbers. SearchString\
          \ should be in the form of \"1-5, 8, 25-\" where values from 1 to 15, 8\
          \ and all over 25 (inclusive) will be selected. If filterString is null\
          \ or whitespace, query is returned as is."
        example: "1-5, 8, 25-"
        in: query
        name: projectManagerEmployeeNos
        schema:
          type: string
      - description: Filter by project status.
        in: query
        name: status
        schema:
          $ref: '#/components/schemas/ProjectStatusType'
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the projects available on the client. Multiple filtering options.\
        \ (Auth roles: Project,Project_Full)"
      tags:
      - Projects
    post:
      description: "Create a new project entity on the client. To create a subproject,\
        \ the parentProjectCode property must be set ass well and equal to the main\
        \ project that the subproject will be a part of.\r\nThe response from the\
        \ POST will return the notation code of main project.code of subproject as\
        \ the code of the created subproject."
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProjectPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ProjectPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProjectPostDto'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDto'
          description: Given when resource was successfully created.
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted.
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Create a new project entity on the client. (Auth roles: Project_Full)"
      tags:
      - Projects
  /ClientAdmin/Clients:
    get:
      parameters:
      - description: Filter clients based on active status.
        example: true
        in: query
        name: isActive
        schema:
          type: boolean
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ClientDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "400":
          content:
            application/json:
              example:
                detail: Fields property in resourceParameter is not formatted correct.
                title: Invalid resourceParameter
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets all the clients the partner has access to. (Auth roles: ClientAdmin,ClientAdmin_Full)"
      tags:
      - Clients
  /JournalEntryVouchers/{id}/submitForApproval:
    post:
      description: "Attempt to submit the journal entry voucher with the given id\
        \ for approval.\r\n            Will only work if the client is configured\
        \ with standard approver or the supplier of a supplier voucher is set with\
        \ an approver.\r\n            If the voucher pass the validation rules in\
        \ Go, it will be added in the approval workflow set in Go."
      parameters:
      - description: Identifier of the vouhcer
        example: 39608e1b-ab04-4040-9609-f523b2ba4624
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SubmitForApprovalPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitForApprovalPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/SubmitForApprovalPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SubmitForApprovalPostDto'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoucherApprovalStatusResponseDto'
          description: Given when the resource was successfully submitted for approval
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "409":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when the resource could not be submitted for approval
        "404":
          description: Given when request was invalid
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Submit a voucher for approval. (Auth roles: JournalEntryVoucher_Full)"
      tags:
      - JournalEntryVouchers
  /Employees/Employments:
    get:
      description: Returns a lightweight (slimmed down) version of the employment
        entity.
      parameters:
      - description: "Filter employments based on active status.\r\nAn employment\
          \ is considered active if no endDate is set, or if the endDate set is at\
          \ a future date.\r\nThe filter do not consider the EndedAndReported property,\
          \ as a future endDate and reason might be reported on an employment still\
          \ active until the end date.\r\nTrue to only get employments with active\
          \ status, false to only get employments with inactive status. If empty the\
          \ filter is not used."
        example: true
        in: query
        name: activeEmployments
        schema:
          type: boolean
      - description: "Filter by employment form. If null or whitespace, the filter\
          \ is not used."
        example: Temporary
        in: query
        name: employmentForm
        schema:
          type: string
      - description: "Filter by the last changed timestamp property.\r\nThis filtering\
          \ will return all employments with a last changed timestamp greater than\
          \ the timestamp provided.\r\nCan be used when polling for new entries or\
          \ when changes has occured.\r\nNote that the last changed property is unaffected\
          \ by changes in sub entities of an employment (salary, leave, fixed salary\
          \ lines and other \"lists\")\r\nDate not inclusive."
        example: 2021-09-25 08:03:00.1234567 -00:00
        in: query
        name: lastChangedDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EmploymentLightDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "400":
          content:
            application/json:
              example:
                detail: Fields property in resourceParameter is not formatted correct.
                title: Invalid resourceParameter
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get all employments for all employees registered on the client. (Auth\
        \ roles: Employment,Employment_Full)"
      tags:
      - Employments
  /JournalEntryVouchers/ManualJournals/{id}:
    get:
      description: The integration only has access to vouchers that it has created
        or is the current approver of.
      operationId: GetManualJournalById
      parameters:
      - description: The identifier of a manual journal entry voucher.
        example: d77e1400-d1cb-44e3-853c-bf64d8953af3
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManualJournalEntryVoucherDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Voucher with id = 347acc0d-ab04-4a39-99f2-1573983c4f64 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get a manual voucher by id. (Auth roles: JournalEntryVoucher,JournalEntryVoucher_Full)"
      tags:
      - ManualJournals
    patch:
      description: "The integration only has access to vouchers that it has created\
        \ or is the current approver of.\r\n            If the voucher is currently\
        \ under approval by a different approver, the integration will not be able\
        \ to update the voucher.\r\n            Manual journal entry voucher lines\
        \ must be updated using a separate endpoint."
      parameters:
      - description: The identifier of a manual journal entry.
        example: d77e1400-d1cb-44e3-853c-bf64d8953af3
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: remove
              path: /departmentId
            - op: add
              path: /projectId
              value: "69"
            - op: test
              path: /locationId
              value: "69"
            - op: replace
              path: /voucherDate
              value: 2024-10-17
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: "JSON Patch structure for updating a ManualJournalEntryVoucher.\
          \ See ManualJournalEntryVoucherPatchDto schema for all available properties.\r\
          \n            For more information on JSON patch and the various operations\
          \ allowed, check out: https://datatracker.ietf.org/doc/html/rfc6902"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManualJournalEntryVoucherDto'
          description: Given when a resource was updated successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Voucher with id = 347acc0d-ab04-4a39-99f2-1573983c4f64 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Voucher with id = 347acc0d-ab04-4a39-99f2-1573983c4f64 is
                  already posted.
                title: Object conflict
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource conflict occur
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Update manual journal entry voucher header. (Auth roles: JournalEntryVoucher_Full)"
      tags:
      - ManualJournals
  /Employees:
    get:
      description: "The employee object is a contact entity, meaning the id might\
        \ be shared with a customer and/or a supplier if the contact is registered\
        \ as both an employee and customer/supplier in Go."
      parameters:
      - description: "Filter by contact group IDs. Separate by comma [,] to filter\
          \ on multiple contact group IDs. If null or whitespace, the filter is not\
          \ used."
        example: "41345, 21445, 65457"
        in: query
        name: contactGroupIds
        schema:
          type: string
      - description: Filter by the employee created timestamp. This filtering will
          return all employees with a created timestamp greater than the timestamp
          provided. Can be used when polling for new entries. Date not inclusive.
        example: 2021-09-25 08:03:00.1234567 -00:00
        in: query
        name: employeeCreatedDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: "Filter by employee numbers. Separate by comma [,] to filter\
          \ on multiple employee numbers. A range of numbers can be specified using\
          \ dash/hyphen [-]. For example \"1, 100-200, 500-\" will result in employees\
          \ with number 1, from and including 100 to 200, 500 and all above will be\
          \ returned. If null or whitespace, the filter is not used."
        example: "1, 100-200, 500-"
        in: query
        name: employeeNos
        schema:
          type: string
      - description: "Filter by external import reference. If null or whitespace,\
          \ the filter is not used."
        example: 123ABC
        in: query
        name: externalImportReference
        schema:
          type: string
      - description: "Filter by employee external numbers. Separate by comma [,] to\
          \ filter on multiple employee external numbers. A range of numbers can be\
          \ specified using dash/hyphen [-]. For example \"30000, 14153-19534, 150000-\"\
          \ will result in employees with external number 30000, from and including\
          \ 14153 to 19534, 150000 and all above will be returned. If null or whitespace,\
          \ the filter is not used."
        example: "30000, 14153-19534, 150000-"
        in: query
        name: externalNos
        schema:
          type: string
      - description: "Filter by the last changed timestamp. This filtering will return\
          \ all employees with a last changed timestamp greater than the timestamp\
          \ provided. Can be used when polling for new entries. If used, changed employees\
          \ should replace what was previously stored in the external system. Date\
          \ not inclusive."
        example: 2021-09-25 08:03:00.1234567 -00:00
        in: query
        name: lastChangedDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EmployeeDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "400":
          content:
            application/json:
              example:
                detail: "contactGroupIds contains negative numbers and/or range of\
                  \ numbers. '-' is not allowed, only comma ',' separated single positive\
                  \ numbers are allowed."
                title: Unable to cast object(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: "Could not find contact group(s) with id = 41345, 21445."
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the employees available on the client. Multiple filtering options.\
        \ (Auth roles: Employee,Employee_Full)"
      tags:
      - Employees
    post:
      description: "If successful, the new entity will be returned with an id which\
        \ is unique and can be used to reference the created object in relevant requests."
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EmployeePostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeePostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EmployeePostDto'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDto'
          description: Given when resource was successfully created.
        "400":
          content:
            application/json:
              example:
                detail: ExternalImportReference is already in use. 'ABC123' is used
                  on (contact) Id = 123456789.
                title: Employee validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted.
        "404":
          content:
            application/json:
              example:
                detail: Department with code = 'Avdeling10' not found.
                title: Employee validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Create one new employee entity. (Auth roles: Employee_Full)"
      tags:
      - Employees
  /JournalEntryVouchers/SupplierCreditNotes/{id}/VoucherLines:
    post:
      parameters:
      - description: The identifier of a supplier credit note.
        example: d77e1400-d1cb-44e3-853c-bf64d8953af3
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SupplierVoucherLinePostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierVoucherLinePostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/SupplierVoucherLinePostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SupplierVoucherLinePostDto'
        description: A supplier voucher line post dto.
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierCreditNoteJournalEntryVoucherDto'
          description: Given when a resource was created successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Add a new supplier voucher line on a supplier credit note. (Auth roles:\
        \ JournalEntryVoucher_Full)"
      tags:
      - SupplierCreditNotes
  /Employees/{employeeId}/Employments/{employmentId}:
    delete:
      description: Note that an employment cannot be deleted if it has been reported
        (a-melding).
      parameters:
      - description: The id of the employee.
        example: 12345
        in: path
        name: employeeId
        required: true
        schema:
          format: int64
          type: integer
      - description: The id of the employment to delete.
        example: 98765
        in: path
        name: employmentId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Given when salary line is deleted
        "404":
          content:
            application/json:
              example:
                detail: Employment with id = 12345 not found.
                title: Employment not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Employment with id = 1010 has been reported (a-melding) and
                  thus cannot be deleted.
                title: Employment conflict error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource is in use and cannot be deleted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Delete a specific employment on a given employee. (Auth roles: Employment_Full)"
      tags:
      - Employments
    get:
      operationId: GetEmploymentById
      parameters:
      - description: The id of the employee.
        example: 12345
        in: path
        name: employeeId
        required: true
        schema:
          format: int64
          type: integer
      - description: The id of the employment.
        example: 98765
        in: path
        name: employmentId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Employee with id = 12345 not found.
                title: Employment not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets a specific employment on a given employee. (Auth roles: Employment,Employment_Full)"
      tags:
      - Employments
    patch:
      parameters:
      - description: The id of the employee.
        example: 12345
        in: path
        name: employeeId
        required: true
        schema:
          format: int64
          type: integer
      - description: The id of the employment.
        example: 98765
        in: path
        name: employmentId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: add
              path: /EmploymentSpecification
              value: CrossBorderCommuter
            - from: /EndDate
              op: copy
              path: /StartDate
            - from: /EndDate
              op: move
              path: /StartDate
            - op: replace
              path: /EndDateReason
              value: EmployeeHasResigned
            - op: remove
              path: /EndDateReason
            - op: test
              path: /ProfessionCode
              value: "2554102"
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: "JSON Patch structure for updating an employment. See EmploymentPatchDto\
          \ schema for all available properties. For more information on JSON patch\
          \ and the various operations allowed, check out: https://datatracker.ietf.org/doc/html/rfc6902"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentDto'
          description: Given when resource was successfully updated
        "400":
          content:
            application/json:
              example:
                detail: The country code UK is not valid according to ISO 3166-1.
                title: Employment validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Employment object is missing.
                title: Employment validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Change an existing employment with a given id. (Auth roles: Employment_Full)"
      tags:
      - Employments
  /JournalEntryVouchers/ManualJournals:
    post:
      description: Use the voucher page endpoint to add a page to the manual journal
        entry voucher.
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ManualJournalEntryVoucherPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ManualJournalEntryVoucherPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ManualJournalEntryVoucherPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ManualJournalEntryVoucherPostDto'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManualJournalEntryVoucherDto'
          description: Given when a resource was created successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Create a manual journal entry. (Auth roles: JournalEntryVoucher_Full)"
      tags:
      - ManualJournals
  /SubLedgerNumberSeries:
    get:
      description: "Gets the sub-ledger number series set on the client. Sub-ledgers\
        \ are sub-accounts of a general ledger account, used\r\nfor entries related\
        \ to either customers, suppliers or employees."
      parameters:
      - description: "Gets the underlying general ledger account code of this subledger\
          \ series. Subledger transactions in Go will be posted using the subledger\
          \ number, but the overall accounting effect will be on this underlying account.\
          \ More information of accounts can be retrieved using the GeneralLedgerAccount\
          \ service."
        example: 1500-3100
        in: query
        name: generalLedgerAccountNos
        schema:
          type: string
      - description: Filter series based on the isDefault property. Blank means no
          filter.
        example: true
        in: query
        name: isDefault
        schema:
          type: boolean
      - description: "Filter by SubledgerNumberSeriesType\r\n            \r\nNote:\
          \ The SubLedgerNumberSeriesType filter is case sensitive."
        example: "Customer, Employee, Supplier"
        in: query
        name: subLedgerNumberSeriesType
        schema:
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SubLedgerNumberSeriesDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when no content is returned
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the sub-ledger number series set on the client (Auth roles: CommonServices,CommonServices_Full)"
      tags:
      - SubLedgerNumberSeries
  /Employees/{employeeId}/BankAccounts:
    patch:
      description: Note that in order to use this endpoint you need to have the special
        privilege "EmployeeBankAccounts".
      parameters:
      - description: The id of the employee.
        example: 12345
        in: path
        name: employeeId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: "JSON Patch structure for updating employee bank accounts. See\
          \ EmployeeBankAccountsPatchDto schema for all available properties. For\
          \ more information on JSON patch and the various operations allowed, check\
          \ out: https://datatracker.ietf.org/doc/html/rfc6902"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDto'
          description: Given when resource was successfully updated.
        "400":
          content:
            application/json:
              example:
                detail: "EmployeeBankAccountsPatchDto: The value 'bogus' is invalid\
                  \ for target location."
                title: Employee bank accounts validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Employee with id = 12345 not found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Change payout bank accounts for an employee with a given id. (Auth\
        \ roles: EmployeeBankAccounts_Full)"
      tags:
      - Employees
  /ClientAdmin/{userId}/UserAccessRoles:
    get:
      parameters:
      - description: The id of the user.
        example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        in: path
        name: userId
        required: true
        schema:
          format: uuid
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserAccessRoleDto'
                type: array
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the clients a given user have access to along with the access\
        \ role the user have on the client. (Auth roles: ClientAdmin,ClientAdmin_Full)"
      tags:
      - AccessRoles
  /ProductGroups:
    get:
      parameters:
      - description: "Filter by product group codes. SearchString should be in the\
          \ form of \"1, ABC, 10B\" (codes separated by comma). If filterString is\
          \ null or whitespace, query is returned as is."
        in: query
        name: codes
        schema:
          type: string
      - description: Find product groups created after this timestamp.
        example: 2023-09-07 08:46:00.1234567
        in: query
        name: createdDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: Gets a value indicating whether the product group is archived
          (set inactive). Archived product groups will be unavailable for usage in
          the GUI.
        example: false
        in: query
        name: isArchived
        schema:
          type: boolean
      - description: Find product groups that have been changed after this timestamp.
        example: 2023-09-07 08:46:00.1234567
        in: query
        name: lastChangedDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: "Filter by product group names. SearchString should be in the\
          \ form of \"1, ABC, 10B\" (codes separated by comma). If filterString is\
          \ null or whitespace, query is returned as is."
        example: "10, B1, A42"
        in: query
        name: names
        schema:
          type: string
      - description: "Filter product groups by product type. Available values: Product,\
          \ Service"
        in: query
        name: type
        schema:
          $ref: '#/components/schemas/ProductType'
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProductGroupDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when no content is returned
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get product groups from the client. (Auth roles: Product,Product_Full)"
      tags:
      - ProductGroups
    post:
      description: "The primary use of product groups are to assign products to the\
        \ groups that can inherit similar properties from the group, and/or reporting\
        \ purposes."
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProductGroupPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductGroupPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductGroupPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductGroupPostDto'
        description: ""
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductGroupDto'
          description: Given when resource was successfully created.
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Create a new product group. (Auth roles: Product_Full)"
      tags:
      - ProductGroups
  /Enterprises:
    get:
      parameters:
      - description: "Filter by enterprise number. Search string should be separated\
          \ by comma. If filter string is null or whitespace, query is returned as\
          \ is."
        example: "980858073, 980858074"
        in: query
        name: enterpriseNos
        schema:
          type: string
      - description: Filter by the enterprise created timestamp property. This filtering
          will return all enterprises with a created timestamp greater than the timestamp
          provided. Can be used when polling for new entries from Go. Timestamp not
          inclusive.
        example: 2024-08-26T11:05:00.1234567Z
        in: query
        name: createdDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: Filter by the enterprise last changed timestamp property. This
          filtering will return all enterprises with a last changed timestamp greater
          than the timestamp provided. Timestamp not inclusive.
        example: 2023-08-27T10:14:00.1234567Z
        in: query
        name: lastChangedDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EnterpriseDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when no content is returned
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get the enterprises registered for the client. Enterprises are primarily\
        \ used for payroll reporting in Go.\r\nA company may have more than one enterprise\
        \ if the company have operations in different industries. (Auth roles: Enterprises,Enterprises_Full)"
      tags:
      - Enterprises
  /PaymentTerms/{id}:
    delete:
      parameters:
      - description: The ID of the payment term.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "201":
          description: Given when resource was successfully created
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when the resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource is in use and cannot be deleted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Delete a payment term from the client sales settings. (Auth roles:\
        \ CommonServices_Full)"
      tags:
      - PaymentTerms
    get:
      operationId: GetPaymentTermById
      parameters:
      - description: The id of the payment term.
        example: 12345
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTermDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the specific payment term by id. (Auth roles: CommonServices,CommonServices_Full)"
      tags:
      - PaymentTerms
    patch:
      description: Change existing payment term with a given id.
      parameters:
      - description: The id of the payment term.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: "JSON Patch structure for updating a Payment Term. See PaymentTermPatchDto\
          \ schema for all available properties.\r\n            For more information\
          \ on JSON patch and the various operations allowed, check out: https://datatracker.ietf.org/doc/html/rfc6902"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTermDto'
          description: OK
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Make changes to a payment term in the client sales settings. (Auth\
        \ roles: CommonServices_Full)"
      tags:
      - PaymentTerms
  /JournalEntryVouchers/ManualJournals/{id}/VoucherLines/{lineId}:
    delete:
      parameters:
      - description: The identifier of the ManualJournalEntryVoucher.
        example: 2f228d21-8659-4c4f-8460-978ee24681a4
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: The identifier of the ManualJournalEntryVoucherLine.
        example: 60001
        in: path
        name: lineId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Given when a resource was deleted successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Delete a ManualJournalEntryVoucherLine from a ManualJournalEntryVoucher.\
        \ (Auth roles: JournalEntryVoucher_Full)"
      tags:
      - ManualJournals
    patch:
      parameters:
      - description: The identifier of the manual voucher.
        example: 2f228d21-8659-4c4f-8460-978ee24681a4
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: The identifier of the manual journal entry voucher line.
        example: 60001
        in: path
        name: lineId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /currencyCode
              value: EUR
            - op: replace
              path: /currencyExchangeRate
              value: "11.76"
            - op: remove
              path: /departmentId
            - op: add
              path: /projectId
              value: "69"
            - op: test
              path: /locationId
              value: "69"
            - op: add
              path: /Accrual
              value:
                BalanceAccountAgricultureDepartment: null
                BalanceAccountId: 1920
                BalanceAccountNo: null
                FromDate: 2023-10-01
                IsActive: true
                ToDate: 2024-10-01
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: JSON Patch structure for updating a manual journal entry voucher
          line.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManualJournalEntryVoucherLineDto'
          description: Given when a resource was updated successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Voucher with id = 347acc0d-ab04-4a39-99f2-1573983c4f64 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Voucher with id = 347acc0d-ab04-4a39-99f2-1573983c4f64 is
                  already posted.
                title: Object conflict
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource is in conflict
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Update a manual journal entry voucher line. (Auth roles: JournalEntryVoucher_Full)"
      tags:
      - ManualJournals
  /JournalEntryVouchers/{id}:
    delete:
      description: "Delete operations can only be done if the voucher is unposted\
        \ and not in an approval workflow state.\r\n            The integration only\
        \ has access to vouchers that it has created or is the current approver of.\r\
        \n            This endpoint is common for all voucher services, and used regardless\
        \ of voucher type."
      parameters:
      - description: The identifier of a journal entry voucher.
        example: d77e1400-d1cb-44e3-853c-bf64d8953af3
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          description: Given when a resource was deleted successfully
        "404":
          content:
            application/json:
              example:
                detail: Voucher with id = 347acc0d-ab04-4a39-99f2-1573983c4f64 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Voucher with id = 347acc0d-ab04-4a39-99f2-1573983c4f64 is
                  already posted.
                title: Object conflict
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource could not be deleted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Delete a voucher, the accompanying lines and pages. (Auth roles: JournalEntryVoucher_Full)"
      tags:
      - JournalEntryVouchers
  /JournalEntryVouchers/SupplierInvoices/{id}:
    get:
      description: The integration only has access to vouchers that it has created
        or is the current approver of.
      operationId: GetSupplierInvoiceById
      parameters:
      - description: The identifier of a supplier invoice.
        example: d77e1400-d1cb-44e3-853c-bf64d8953af3
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierInvoiceJournalEntryVoucherDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Voucher with id = 347acc0d-ab04-4a39-99f2-1573983c4f64 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Returns a supplier invoice by id. (Auth roles: JournalEntryVoucher,JournalEntryVoucher_Full)"
      tags:
      - SupplierInvoices
    patch:
      description: "The integration only has access to vouchers that it has created\
        \ or is the current approver of.\r\n            If the voucher is currently\
        \ under approval by a different approver, the integration will not be able\
        \ to update the voucher.\r\n            Supplier invoice lines must be updated\
        \ using a separate endpoint."
      parameters:
      - description: The identifier of a supplier invoice.
        example: d77e1400-d1cb-44e3-853c-bf64d8953af3
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /currencyAmount
              value: "69420"
            - op: replace
              path: /supplierAccountId
              value: "20001"
            - from: /contractNo
              op: copy
              path: /purchaseOrderReference
            - op: remove
              path: /departmentId
            - op: add
              path: /projectId
              value: "69"
            - op: test
              path: /locationId
              value: "69"
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: "JSON Patch structure for updating an Supplier Invoice. See SupplierInvoiceJournalEntryVoucherPatchDto\
          \ schema for all available properties. For more information on JSON patch\
          \ and the various operations allowed, check out: https://datatracker.ietf.org/doc/html/rfc6902"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierInvoiceJournalEntryVoucherDto'
          description: Given when a resource was updated successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Voucher with id = 347acc0d-ab04-4a39-99f2-1573983c4f64 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Voucher with id = 347acc0d-ab04-4a39-99f2-1573983c4f64 is
                  already posted.
                title: Object conflict
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource conflict occur
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Update supplier invoice header. (Auth roles: JournalEntryVoucher_Full)"
      tags:
      - SupplierInvoices
  /SubLedgerNumberSeries/{id}:
    get:
      parameters:
      - description: ""
        example: 1b8eec31-1f4f-434e-a73f-556eeea873e9
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get a SubLedgerNumberSeries by ID. (Auth roles: CommonServices,CommonServices_Full)"
      tags:
      - SubLedgerNumberSeries
  /JournalEntryVouchers/BankJournals:
    post:
      description: Use the voucher page endpoint to add a page to the BankJournalEntryVoucher.
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BankJournalEntryVoucherPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/BankJournalEntryVoucherPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/BankJournalEntryVoucherPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BankJournalEntryVoucherPostDto'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankJournalEntryVoucherDto'
          description: Given when a resource was created successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Create a BankJournalEntryVoucher. (Auth roles: JournalEntryVoucher_Full)"
      tags:
      - BankJournals
  /JournalEntryVouchers/SupplierInvoices/{id}/VoucherLines/{lineId}:
    delete:
      parameters:
      - description: The identifier of the supplier invoice.
        example: 2f228d21-8659-4c4f-8460-978ee24681a4
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: The identifier of the supplier invoice line.
        example: 60001
        in: path
        name: lineId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Given when a resource was deleted successfully
        "404":
          content:
            application/json:
              example:
                detail: Voucher with id = 347acc0d-ab04-4a39-99f2-1573983c4f64 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Voucher with id = 347acc0d-ab04-4a39-99f2-1573983c4f64 is
                  already posted.
                title: Object conflict
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource conflict occur
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Delete a supplier voucher line from a supplier invoice. (Auth roles:\
        \ JournalEntryVoucher_Full)"
      tags:
      - SupplierInvoices
    patch:
      parameters:
      - description: The identifier of the supplier invoice.
        example: 2f228d21-8659-4c4f-8460-978ee24681a4
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: The identifier of the supplier voucher line.
        example: 60001
        in: path
        name: lineId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /currencyAmount
              value: "69420"
            - op: replace
              path: /supplierAccountId
              value: "20001"
            - from: creditAccountId
              op: copy
              path: /supplierAccountId
            - op: remove
              path: /departmentId
            - op: add
              path: /projectId
              value: "69"
            - op: test
              path: /locationId
              value: "69"
            - op: add
              path: /Accrual
              value:
                BalanceAccountAgricultureDepartment: null
                BalanceAccountId: 1920
                BalanceAccountNo: null
                FromDate: 2023-10-01
                IsActive: true
                ToDate: 2024-10-01
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: "JSON Patch structure for updating a supplier voucher line. See\
          \ SupplierVoucherLinePatchDto schema for all available properties. For more\
          \ information on JSON patch and the various operations allowed, check out:\
          \ https://datatracker.ietf.org/doc/html/rfc6902"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierVoucherLineDto'
          description: Given when a resource was updated successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Voucher with id = 347acc0d-ab04-4a39-99f2-1573983c4f64 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Voucher with id = 347acc0d-ab04-4a39-99f2-1573983c4f64 is
                  already posted.
                title: Object conflict
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource is in conflict
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Update a supplier voucher line on a supplier invoice. (Auth roles:\
        \ JournalEntryVoucher_Full)"
      tags:
      - SupplierInvoices
  /JournalEntryVouchers/BankJournals/{id}/VoucherLines:
    post:
      description: "Returns the entire BankJournalEntryVoucher with all lines, including\
        \ the new one. The newest line can be identified by its created date."
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BankJournalEntryVoucherLinePostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/BankJournalEntryVoucherLinePostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/BankJournalEntryVoucherLinePostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BankJournalEntryVoucherLinePostDto'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankJournalEntryVoucherDto'
          description: Given when a resource was created successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Add a line to a BankJournalEntryVoucher. (Auth roles: JournalEntryVoucher_Full)"
      tags:
      - BankJournals
  /ClientAdmin/AddIntegrationToClient/{clientId}:
    post:
      parameters:
      - in: path
        name: clientId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewIntegrationDto'
          description: Given when resource returned successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Add the (currently authenticated) partner integration to an existing\
        \ client belonging to the partner, and get the client-key (Norsk: klientnø\
        kkel) in return.\r\nFurther api-calls can then be performed on the specific\
        \ client using the newly created client credentials. (Auth roles: ClientAdmin_Full)"
      tags:
      - Clients
  /Customerledger/CustomerBalances:
    get:
      parameters:
      - description: "Date, inclusive. Get all balances as of this date. Note that\
          \ (date time) offsets (if provided) is not taken into account, only date\
          \ is used."
        example: 2021-01-01
        in: query
        name: date
        required: true
        schema:
          format: date
          type: string
      - description: "Filter balances by contact group IDs. This will return the balances\
          \ for the customers belonging in the given contact groups. Separate by comma\
          \ to filter on multiple contact group IDs. If filterString is null or whitespace,\
          \ query is returned as is."
        example: "41345, 21445, 65457"
        in: query
        name: contactGroupIds
        schema:
          type: string
      - description: "Sets whether or not to return balances for customers with only\
          \ open items. If false, all active customers and their balances will be\
          \ returned, including zero balances for customers with no open items. NOTE:\
          \ Customers without any ledger entries are not shown."
        example: true
        in: query
        name: includeOnlyOpenItems
        schema:
          type: boolean
      - description: "Filter balances by sub-ledger number series IDs. This will return\
          \ balances for the customers belonging in the given sub-ledger number series.\
          \ Separate by comma to filter on multiple sub-ledger number series IDs.\
          \ If filterString is null or whitespace, query is returned as is.\""
        example: "38ecfc1a-bf51-448f-99a8-a61bc5771109, ee373540-ca8d-4562-8fb6-6fb52de47722"
        in: query
        name: subLedgerNumberSeriesIds
        schema:
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomerBalanceDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the customer balances at a given date (inclusive).\r\nThe balances\
        \ represent the sum of accounts receivable for the customers at the given\
        \ date.\r\nNOTE: Customers without any ledger entries are not shown.\r\nMultiple\
        \ filtering options. (Auth roles: CustomerLedger,CustomerLedger_Full)"
      tags:
      - CustomerSubLedgerEntries
  /JournalEntryVouchers/{id}/ehf:
    get:
      parameters:
      - description: ""
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          description: Given when a resource was returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Retrieve the EHF-file from a voucher draft, if the voucher draft was\
        \ created by EHF (Auth roles: JournalEntryVoucher, JournalEntryVoucher_Full)"
      tags:
      - JournalEntryVouchers
  /BrandingThemes/{id}:
    get:
      operationId: GetBrandingThemeById
      parameters:
      - description: The id of the branding theme.
        example: 12345
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandingThemeDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the specified branding theme by its id. (Auth roles: CommonServices,CommonServices_Full)"
      tags:
      - BrandingThemes
  /SalesOrders/{id}/Complete:
    get:
      operationId: GetCompleteSalesOrderById
      parameters:
      - description: The id of the sales order.
        example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: "Choose whether to display the properties as in Go GUI - with\
          \ inherited values, or as the actual values set on the sales order.\r\n\
          \            When the sales order is sent and is converted to invoice, the\
          \ inherited values will be used. Defaults to false."
        example: true
        in: query
        name: showInherited
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrderCompleteDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the specific (complete) sales order by id.\r\nThe returned object\
        \ are a complete version of an sales order, including line details. (Auth\
        \ roles: SalesOrders,SalesOrders_Full)"
      tags:
      - SalesOrderComplete
  /Vouchers/CashJournals/{id}:
    get:
      description: "Note that when querying Cash vouchers, a response will only be\
        \ produced for vouchers the integration\r\nhave created using POST operations\
        \ with the cash voucher endpoint."
      operationId: GetCashVoucherById
      parameters:
      - description: The id of the cash voucher.
        example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashVoucherDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the specific cash voucher by id. (Auth roles: CashVoucher_Full)"
      tags:
      - CashVoucherPosting
  /Vouchers/ManualJournals/{id}:
    get:
      description: "Gets the specific manual voucher by id. Note that when querying\
        \ manual vouchers, a response will only\r\nbe produced for vouchers the integration\
        \ have created using POST operations with the manual voucher\r\nendpoint."
      operationId: GetManualVoucherById
      parameters:
      - description: The id of the manual voucher.
        example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManualVoucherDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the specific manual voucher by id. (Auth roles: ManualVoucher_Full)"
      tags:
      - ManualVoucherPosting
  /Vouchers/YearEndJournals/{id}:
    get:
      description: "Gets the specific year end voucher by id. Note that when querying\
        \ year end vouchers, a response will only be\r\nproduced for vouchers the\
        \ integration have created using POST operations with the year end voucher\
        \ endpoint"
      operationId: GetYearEndVoucherById
      parameters:
      - description: The id of the year end voucher.
        example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YearEndVoucherDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "400":
          description: Given when request is badly formatted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the specific year end voucher by id. (Auth roles: YearEndVoucher_Full)"
      tags:
      - YearEndVoucherPosting
  /FinancialSettings:
    get:
      description: Changes in agio (gains) and disagio (loss) accounts does not update
        the LastChangedDateTimeOffset property in FinancialSettings.
      operationId: GetFinancialSettings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialSettingsDto'
          description: Given when resource was successfully returned.
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the financial settings on the client, and conversion date. (Auth\
        \ roles: CommonServices,CommonServices_Full)"
      tags:
      - FinancialSettings
  /Employees/Employments/{employmentId}/FtePercentages/{ftePercentageId}:
    delete:
      description: "Note that there must be at least one full-time equivalent (FTE)\
        \ percentage line on an employment, so if the last FTE percentage line is\
        \ attempted to be deleted you will get a 409 Conflict response."
      parameters:
      - description: The id of the employment.
        example: 98765
        in: path
        name: employmentId
        required: true
        schema:
          format: int64
          type: integer
      - description: The id of the full-time equivalent (FTE) percentage (line).
        example: 12345
        in: path
        name: ftePercentageId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Given when FTE percentage line is deleted
        "404":
          content:
            application/json:
              example:
                detail: Employment with id = 12345 not found.
                title: Employment not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Full-time equivalent (FTE) percentage (line) with id = 7001
                  is the last FTE percentage line on the employment and thus cannot
                  be deleted.
                title: Employment conflict error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource is in use and cannot be deleted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Delete a specific full-time equivalent (FTE) percentage (line) on\
        \ a given employment. (Auth roles: EmploymentFtePercentage_Full)"
      tags:
      - EmploymentFtePercentages
    get:
      operationId: GetFtePercentageById
      parameters:
      - description: The id of the employment.
        example: 98765
        in: path
        name: employmentId
        required: true
        schema:
          format: int64
          type: integer
      - description: The id of the full-time equivalent (FTE) percentage (line).
        example: 12345
        in: path
        name: ftePercentageId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentFtePercentageDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Employment with id = 12345 not found.
                title: Employment not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets a specific full-time equivalent (FTE) percentage (line) on a\
        \ given employment. (Auth roles: EmploymentFtePercentage,EmploymentFtePercentage_Full)"
      tags:
      - EmploymentFtePercentages
    patch:
      parameters:
      - description: The id of the employment.
        example: 98765
        in: path
        name: employmentId
        required: true
        schema:
          format: int64
          type: integer
      - description: The id of the full-time equivalent (FTE) percentage (line).
        example: 12345
        in: path
        name: ftePercentageId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /FromDate
              value: 2024-07-15
            - op: test
              path: /FtePercentage
              value: "60"
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: "JSON Patch structure for updating a full-time equivalent (FTE)\
          \ percentage (line). See EmploymentFtePercentagePatchDto schema for all\
          \ available properties. For more information on JSON patch and the various\
          \ operations allowed, check out: https://datatracker.ietf.org/doc/html/rfc6902"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentFtePercentageDto'
          description: Given when resource was successfully updated
        "400":
          content:
            application/json:
              example:
                detail: "EmploymentFtePercentagePatchDto: The value 'bogus' is invalid\
                  \ for target location."
                title: Employment validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Employment with id = 12345 not found.
                title: Employment not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Change an existing full-time equivalent (FTE) percentage (line) on\
        \ a given employment. (Auth roles: EmploymentFtePercentage_Full)"
      tags:
      - EmploymentFtePercentages
  /JournalEntryVouchers/{id}/VoucherPages:
    post:
      description: "You can only access vouchers and voucher pages you have created\
        \ or is an approver of.\r\n            Posted vouchers or vouchers in approval\
        \ at a different users can not be updated by the current integration or user."
      parameters:
      - description: The identifier of the voucher.
        example: 2f228d21-8659-4c4f-8460-978ee24681a4
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          multipart/form-data:
            encoding:
              file:
                style: form
            schema:
              $ref: '#/components/schemas/_JournalEntryVouchers__id__VoucherPages_post_request'
        description: A FormFile
      responses:
        "201":
          description: Given when a resource was created successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "409":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource conflict occur
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Add a page to a voucher. (Auth roles: JournalEntryVoucher_Full)"
      tags:
      - VoucherPages
  /Customerledger/EntriesByMatchId:
    get:
      parameters:
      - description: The match ID to filter for.
        example: 12345
        in: query
        name: matchId
        required: true
        schema:
          format: int64
          type: integer
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomerLedgerEntryDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: "Given when there is no content to return (response body is\
            \ empty). This could happen if matchId exist, but match is not on a customer\
            \ sub-ledger transaction."
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets all customer sub-ledger transactions that share a given match\
        \ ID. (Auth roles: CustomerLedger,CustomerLedger_Full)"
      tags:
      - CustomerSubLedgerEntries
  /GeneralLedgerAccounts:
    get:
      operationId: GetGeneralLedgerAccounts
      parameters:
      - description: "Filter by account numbers. Separate by comma [,] to filter on\
          \ multiple account numbers. A range of numbers can be specified using dash/hyphen\
          \ [-]. For example \"1000-1999, 2500, 3000-\" will result in accounts with\
          \ account numbers from and including 1000 to 1999, 2500, 3000 and all above\
          \ will be returned. If null or whitespace, the filter is not used."
        example: "1000-1999, 2500, 3000-"
        in: query
        name: accountNos
        schema:
          type: string
      - description: "Filter by agriculture departments. Separate by comma [,] to\
          \ filter on multiple agriculture departments."
        example: "farming, private, otherIndustries"
        in: query
        name: agricultureDepartments
        schema:
          type: string
      - description: Filter by last changed timestamp.
        example: 2021-09-25 08:03:00.1234567 -00:00
        in: query
        name: lastChangedDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GeneralLedgerAccountDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when no content is returned
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get a list of general ledger accounts. (Auth roles: GeneralLedgerAccount,GeneralLedgerAccount_Full)"
      tags:
      - GeneralLedgerAccounts
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/GeneralLedgerAccountPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/GeneralLedgerAccountPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/GeneralLedgerAccountPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GeneralLedgerAccountPostDto'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralLedgerAccountDto'
          description: Given when resource was successfully created
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Create a new general ledger account with setting. (Auth roles: GeneralLedgerAccount_Full)"
      tags:
      - GeneralLedgerAccounts
  /JournalEntryVouchers:
    get:
      description: "To get the details, get the voucher by its identifier using the\
        \ endpoint relevant for the voucher type."
      parameters:
      - description: Filter vouchers with created timestamp greater than the provided
          timestamp. Timestamp not inclusive.
        example: 2023-11-29T14:00:00.1234567Z
        in: query
        name: createdDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: Filter vouchers with last changed timestamp greater than the
          provided timestamp. Timestamp not inclusive.
        example: 2023-11-29T14:00:00.1234567Z
        in: query
        name: lastChangedDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: Filter by the approval state.
        example: true
        in: query
        name: inApprovalWorkflow
        schema:
          type: boolean
      - description: Filter by the posted state.
        example: false
        in: query
        name: isPosted
        schema:
          type: boolean
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/JournalEntryVoucherListItem'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "List the journal entry vouchers on the client, returning lightweight\
        \ journal entry voucher objects and their type. (Auth roles: JournalEntryVoucher,JournalEntryVoucher_Full)"
      tags:
      - JournalEntryVouchers
  /Supplierledger/SupplierBalances:
    get:
      parameters:
      - description: "Date, inclusive. Get all balances as of this date. Note that\
          \ (date time) offsets (if provided) is not taken into account, only date\
          \ is used."
        example: 2021-01-01
        in: query
        name: date
        required: true
        schema:
          format: date
          type: string
      - description: "Filter balances by contact group IDs. This will return the balances\
          \ for the supplier belonging in the given contact groups. Separate by comma\
          \ to filter on multiple contact group IDs. If filterString is null or whitespace,\
          \ query is returned as is."
        example: "41345, 21445, 65457"
        in: query
        name: contactGroupIds
        schema:
          type: string
      - description: "Sets whether or not to return balances for suppliers with only\
          \ open items. If false, all active suppliers and their balances will be\
          \ returned, including zero balances for suppliers with no open items. NOTE:\
          \ Suppliers without any ledger entries are not shown."
        example: true
        in: query
        name: includeOnlyOpenItems
        schema:
          type: boolean
      - description: "Filter balances by sub-ledger number series IDs. This will return\
          \ balances for the suppliers belonging in the given sub-ledger number series.\
          \ Separate by comma to filter on multiple sub-ledger number series IDs.\
          \ If filterString is null or whitespace, query is returned as is.\""
        example: "38ecfc1a-bf51-448f-99a8-a61bc5771109, ee373540-ca8d-4562-8fb6-6fb52de47722"
        in: query
        name: subLedgerNumberSeriesIds
        schema:
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SupplierBalanceDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the supplier balances at a given date (inclusive).\r\nThe balances\
        \ represent the sum of accounts payable for the suppliers at the given date.\r\
        \nNOTE: Suppliers without any ledger entries are not shown.\r\nMultiple filtering\
        \ options. (Auth roles: SupplierLedger,SupplierLedger_Full)"
      tags:
      - SupplierSubLedgerEntries
  /PaymentTerms:
    get:
      description: "List the payment terms set on the client.\r\nGo provides a default\
        \ set of payment terms on new clients, but any custom payment term can be\
        \ created and used on customers and sales orders created in Go."
      operationId: GetPaymentTerms
      parameters:
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PaymentTermDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when no content is returned
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "List the payment terms from the client sales settings. (Auth roles:\
        \ CommonServices,CommonServices_Full)"
      tags:
      - PaymentTerms
    post:
      description: "Go provides a default set of payment terms on new clients, but\
        \ any custom payment term can be created and used on customers and sales orders\
        \ created in Go.\r\nIsActive defaults to true, if not provided."
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PaymentTermPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTermPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/PaymentTermPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PaymentTermPostDto'
        description: A PaymentTermPostDto.
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTermDto'
          description: Given when resource was created successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request was badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Create a new payment term in the client sales settings. (Auth roles:\
        \ CommonServices_Full)"
      tags:
      - PaymentTerms
  /DeliveryTerms:
    get:
      description: "The default set of delivery terms provided in Go are incoterms,\
        \ but any custom string can be created and used on sales orders created in\
        \ Go."
      operationId: GetDeliveryTerms
      parameters:
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeliveryTermDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request was badly formatted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "List the delivery terms from the client sales settings. (Auth roles:\
        \ CommonServices,CommonServices_Full)"
      tags:
      - DeliveryTerms
    post:
      description: "The default set of delivery terms provided in Go are incoterms,\
        \ but any custom string can be created and used on sales orders created in\
        \ Go."
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeliveryTermPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryTermPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/DeliveryTermPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeliveryTermPostDto'
        description: Properties to create. Name Required.
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryTermDto'
          description: Given when resource was successfully created
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request was badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Create a new delivery term in the client sales settings. (Auth roles:\
        \ CommonServices_Full)"
      tags:
      - DeliveryTerms
  /JournalEntryVouchers/SupplierInvoices/{id}/VoucherLines:
    post:
      parameters:
      - description: The identifier of a supplier invoice.
        example: d77e1400-d1cb-44e3-853c-bf64d8953af3
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SupplierVoucherLinePostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierVoucherLinePostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/SupplierVoucherLinePostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SupplierVoucherLinePostDto'
        description: A supplier voucher line post dto.
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierInvoiceJournalEntryVoucherDto'
          description: Given when a resource was created successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Voucher with id = 347acc0d-ab04-4a39-99f2-1573983c4f64 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Add a new supplier voucher line on a supplier invoice. (Auth roles:\
        \ JournalEntryVoucher_Full)"
      tags:
      - SupplierInvoices
  /OutgoingInvoices/{id}:
    get:
      operationId: GetOutgoingInvoiceById
      parameters:
      - description: The id of the outgoing invoice / credit note.
        example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutgoingInvoiceDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the specific outgoing invoice / credit note by id.\r\nThe returned\
        \ object are a lightweight version of an invoice, not containing any line\
        \ details. (Auth roles: OutgoingInvoice,OutgoingInvoice_Full)"
      tags:
      - OutgoingInvoices
  /Supplierledger/OpenItems:
    get:
      parameters:
      - description: "Date, inclusive. Get all open entries as of this date. Note\
          \ that (date time) offsets (if provided) is not taken into account, only\
          \ date is used."
        example: 2021-01-01
        in: query
        name: date
        required: true
        schema:
          format: date
          type: string
      - description: "Filter by contact group IDs. This will return entries for the\
          \ suppliers belonging in the given contact groups. Separate by comma to\
          \ filter on multiple contact group IDs. If filterString is null or whitespace,\
          \ query is returned as is."
        example: "41345, 21445, 65457"
        in: query
        name: contactGroupIds
        schema:
          type: string
      - description: Filter entries based on the created timestamp property. This
          filtering will return all entries with a created timestamp greater than
          the timestamp provided. Can be used when polling for new entries from Go.
          Blank means no filter. Timestamp not inclusive.
        example: 2021-09-25 08:03:00.1234567 -00:00
        in: query
        name: createdDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: Filter transactions on invoices with given custom matching references.
          Separate by comma to filter on multiple custom matching references.
        example: cmr101
        in: query
        name: customMatchingReferences
        schema:
          type: string
      - description: "Filter entries on department codes. Separate by comma to filter\
          \ on multiple codes. If blank, all transactions with or without department\
          \ codes are returned (no filter). If -1, then all transactions without department\
          \ codes are included."
        example: "1, 3, 4"
        in: query
        name: departmentCodes
        schema:
          type: string
      - description: "Filter by supplier external numbers. SearchString should be\
          \ in the form of \"30000, 14153-19534, 150000-\" where values for 30000,\
          \ between (inclusive) 14153-19534 and all over 150000 (inclusive) will be\
          \ retrieved. If filterString is null or whitespace, query is returned as\
          \ is."
        example: "30000, 14153-19534, 150000-"
        in: query
        name: externalNos
        schema:
          type: string
      - description: "Include Sub-project(s) for specified project. If projectCodes\
          \ is null, all (sub)projects are included (regardless of this variable)."
        example: true
        in: query
        name: includeSubProject
        schema:
          type: boolean
      - description: Filter transactions for invoices with given invoice numbers.
          Separate by comma to filter on multiple invoice numbers.
        example: "1337, 69420"
        in: query
        name: invoiceNos
        schema:
          type: string
      - description: "Filter entries based on the last changed timestamp property.\
          \ The accounting entry in itself cannot change, but the match state of the\
          \ sub-ledger entry might change. Using last changed filtering is one way\
          \ of retrieving new matched items and as such the payment status of invoices.\
          \ This filtering will return all entries with a last changed timestamp greater\
          \ than the timestamp provided. Timestamp not inclusive."
        example: 2021-09-25 08:03:00.1234567 -00:00
        in: query
        name: lastChangedDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: Filter on transactions with balances greater than amount. This
          will only provide entries with matches that are still open.
        example: true
        in: query
        name: onlyBalancesGreaterThanAmount
        schema:
          type: boolean
      - description: Sets whether or not to return only entries that the current integration
          created. Can be used to reduce the number of entries if only the status
          of transactions that the querying integration created are relevant to report.
        example: true
        in: query
        name: onlyCreatedByCurrentIntegration
        schema:
          type: boolean
      - description: "Filter entries on project codes. Separate by comma to filter\
          \ on multiple codes. If blank, all transactions with or without projects\
          \ codes are returned (no filter). If -1, then all transactions without project\
          \ codes are included."
        example: "10, 20, 30.1"
        in: query
        name: projectCodes
        schema:
          type: string
      - description: "Filter items by sub-ledger number series IDs. This will return\
          \ entries for the suppliers belonging in the given sub-ledger number series.\
          \ Separate by comma to filter on multiple sub-ledger number series IDs.\
          \ If filterString is null or whitespace, query is returned as is.\""
        example: "38ecfc1a-bf51-448f-99a8-a61bc5771109, ee373540-ca8d-4562-8fb6-6fb52de47722"
        in: query
        name: subLedgerNumberSeriesIds
        schema:
          type: string
      - description: "Filter by supplier numbers. Supplier number also represent the\
          \ supplier sub-ledger account number. SearchString should be in the form\
          \ of \"20000-25999, 22500, 23000-\" where values from 20000 to 25999, 22500\
          \ and all over 23000 will be selected. If filterString is null or whitespace,\
          \ query is returned as is."
        example: "20000-25990, 22500, 23000-"
        in: query
        name: supplierNos
        schema:
          type: string
      - description: "Filter by voucher types. Separate by comma to filter multiple\
          \ voucher types. If blank, all transactions returned (no filter)."
        example: "IncomingInvoice, BankJournal"
        in: query
        name: voucherTypes
        schema:
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SupplierLedgerEntryDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets all supplier sub-ledger transactions that are open items at a\
        \ given date (inclusive). Multiple filtering options. (Auth roles: SupplierLedger,SupplierLedger_Full)"
      tags:
      - SupplierSubLedgerEntries
  /SalesOrders/{id}/Lines:
    get:
      parameters:
      - description: The id of the sales order.
        example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SalesOrderLineDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: " (Auth roles: SalesOrders,SalesOrders_Full)"
      tags:
      - SalesOrderLines
    post:
      description: "If successful, the new entity will be returned with an id which\
        \ is unique and can be used to reference the created object in relevant requests."
      parameters:
      - description: The id of the sales order.
        example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SalesOrderLinePostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrderLinePostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/SalesOrderLinePostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SalesOrderLinePostDto'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrderLineDto'
          description: Given when resource was successfully created.
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted.
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Create a new sales order line. (Auth roles: SalesOrders_Full)"
      tags:
      - SalesOrderLines
  /ClientBankAccounts:
    get:
      parameters:
      - description: "Filter by client bank account number. Search string should be\
          \ separated by comma. If filter string is null or whitespace, query is returned\
          \ as is."
        example: "67774073962, 83529195381"
        in: query
        name: bankAccountNumbers
        schema:
          type: string
      - description: Filter by the client bank account created timestamp property.
          This filtering will return all client bank accounts with a created timestamp
          greater than the timestamp provided. Can be used when polling for new entries
          from Go. Timestamp not inclusive.
        example: 2023-10-19T11:05:00.1234567Z
        in: query
        name: createdDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: Filter by the client bank account last changed timestamp property.
          This filtering will return all client bank accounts with a last changed
          timestamp greater than the timestamp provided. Timestamp not inclusive.
        example: 2023-10-19T11:05:00.1234567Z
        in: query
        name: lastChangedDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ClientBankAccountDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when no content is returned
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the bank accounts registered on the client. (Auth roles: ClientBankAccount,ClientBankAccount_Full)"
      tags:
      - ClientBankAccounts
    post:
      description: Bank account numbers are unique across all clients.
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ClientBankAccountPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ClientBankAccountPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ClientBankAccountPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ClientBankAccountPostDto'
        description: A client bank account post dto
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientBankAccountDto'
          description: Given when a resource was created successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Create a new client bank account (Auth roles: ClientBankAccount_Full)"
      tags:
      - ClientBankAccounts
  /BrandingThemes:
    get:
      description: "Get the branding themes available on the client.\r\nGo provides\
        \ a default set of branding themes on new clients, but any custom branding\
        \ theme can be created and used on customers, projects and sales orders created\
        \ in Go.\r\nBranding themes hold a set of templates for various documents,\
        \ such as invoices, reminders, quotes etc."
      parameters:
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BrandingThemeDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when no content is returned
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "List the branding themes available on the client. (Auth roles: CommonServices,CommonServices_Full)"
      tags:
      - BrandingThemes
  /Locations:
    get:
      description: "The usage of locations is typically that of a dimension separating\
        \ specific areas of activity for reporting purposes, especially relevant for\
        \ projects."
      operationId: GetLocations
      parameters:
      - description: Filter by created timestamp. This filtering will return all location
          objects with a created timestamp greater than the timestamp provided. Can
          be used when polling for new location objects from Go. Blank means no filter.
          Date not inclusive.
        example: 2021-09-25 08:03:00.1234567 -00:00
        in: query
        name: createdDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: "Filter by location codes. Separate by comma [,] to filter on\
          \ multiple codes. If null or whitespace, the filter is not used."
        in: query
        name: codes
        schema:
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LocationDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the locations available on the client. Multiple filtering options.\
        \ (Auth roles: Location,Location_Full)"
      tags:
      - Locations
    post:
      description: "Name required.\r\nCode must be unique. If not provided, it will\
        \ be automatically assigned by Go.\r\nIsActive defaults to false, if not provided."
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/LocationPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/LocationPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/LocationPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LocationPostDto'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationDto'
          description: Given when resource returned successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Creates a new location. (Auth roles: Location_Full)"
      tags:
      - Locations
  /Vouchers/OutgoingInvoiceJournals/{id}:
    get:
      description: "Gets the specific outgoing invoice voucher by id. Note that when\
        \ querying outgoing invoice vouchers,\r\na response will only be produced\
        \ for vouchers the integration have created using POST operations with the\r\
        \noutgoing invoice voucher endpoint."
      operationId: GetOutgoingInvoiceVoucherById
      parameters:
      - description: The id of the outgoing invoice voucher.
        example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutgoingInvoiceVoucherDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the specific Outgoing invoice voucher by id. (Auth roles: OutgoingInvoiceVoucher_Full)"
      tags:
      - OutgoingInvoicePosting
  /Employees/Employments/{employmentId}/Layoffs/{layoffId}:
    delete:
      parameters:
      - description: The id of the employment.
        example: 98765
        in: path
        name: employmentId
        required: true
        schema:
          format: int64
          type: integer
      - description: The id of the layoff (line).
        example: f575b4b0-55be-4b56-b01f-44b204df82c5
        in: path
        name: layoffId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          description: Given when layoff line is deleted
        "404":
          content:
            application/json:
              example:
                detail: Employment with id = 12345 not found.
                title: Employment not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource cannot be deleted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Delete a specific layoff (line) on a given employment. (Auth roles:\
        \ EmploymentLayoff_Full)"
      tags:
      - EmploymentLayoffs
    get:
      operationId: GetLayoffById
      parameters:
      - description: The id of the employment.
        example: 98765
        in: path
        name: employmentId
        required: true
        schema:
          format: int64
          type: integer
      - description: The id of the layoff (line).
        example: f575b4b0-55be-4b56-b01f-44b204df82c5
        in: path
        name: layoffId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentLayoffDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Employment with id = 12345 not found.
                title: Employment not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets a specific layoff (line) on a given employment. (Auth roles:\
        \ EmploymentLayoff,EmploymentLayoff_Full)"
      tags:
      - EmploymentLayoffs
    patch:
      parameters:
      - description: The id of the employment.
        example: 98765
        in: path
        name: employmentId
        required: true
        schema:
          format: int64
          type: integer
      - description: The id of the layoff (line).
        example: f575b4b0-55be-4b56-b01f-44b204df82c5
        in: path
        name: layoffId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: add
              path: /ExcludeEmployeeFromPayroll
              value: "true"
            - from: /EndDate
              op: copy
              path: /StartDate
            - from: /EndDate
              op: move
              path: /StartDate
            - op: replace
              path: /StartDate
              value: 2024-07-15
            - op: remove
              path: /AdjustFixedWage
            - op: test
              path: /LayoffPercentage
              value: "95.15"
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: "JSON Patch structure for updating a layoff (line). See EmploymentLayoffPatchDto\
          \ schema for all available properties. For more information on JSON patch\
          \ and the various operations allowed, check out: https://datatracker.ietf.org/doc/html/rfc6902"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentLayoffDto'
          description: Given when resource was successfully updated
        "400":
          content:
            application/json:
              example:
                detail: "EmploymentLayoffPatchDto: The value 'bogus' is invalid for\
                  \ target location."
                title: Employment validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Employment with id = 12345 not found.
                title: Employment not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Change an existing layoff (line) on a given employment. (Auth roles:\
        \ EmploymentLayoff_Full)"
      tags:
      - EmploymentLayoffs
  /IncomingInvoices:
    get:
      operationId: GetIncomingInvoiceListItem
      parameters:
      - description: "From date, inclusive. Get all invoices with an voucher (invoice)\
          \ date from this date (inclusive). Note that (date time) offsets (if provided)\
          \ is not taken into account, only date is used."
        example: 2023-01-26
        in: query
        name: fromDate
        schema:
          format: date
          type: string
      - description: "To date, inclusive. Get all invoices with an voucher (invoice)\
          \ date up to this date (inclusive). Note that (date time) offsets (if provided)\
          \ is not taken into account, only date is used."
        example: 2023-02-28
        in: query
        name: toDate
        schema:
          format: date
          type: string
      - description: Filter invoices with last changed timestamp in balance (remaining
          amount to be paid) greater than the provided timestamp. Can be used as a
          lightweight version of retrieving payment states of invoices. Timestamp
          not inclusive.
        example: 2023-01-26 13:20:16.1234567 -00:00
        in: query
        name: balanceLastChangedDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: "Filter invoices on department codes. Note that this selects\
          \ invoices with department set in the header of the invoice. The invoice\
          \ costlines might specify other departments or no department. Separate by\
          \ comma to filter on multiple codes. If blank, all invoices with or without\
          \ department codes are returned (no filter). If -1, then all invoices without\
          \ department codes are included."
        example: "1, Development"
        in: query
        name: departmentCodes
        schema:
          type: string
      - description: "Include Sub-project(s) for specified project. If projectCodes\
          \ is null, all (sub)projects are included (regardless of this variable)."
        example: true
        in: query
        name: includeSubProject
        schema:
          type: boolean
      - description: "Filter on invoices that are unpaid (ie balance != 0). No filter\
          \ set will provide all invoices regardless of balance state, depending on\
          \ other filters set."
        example: true
        in: query
        name: onlyUnpaidInvoices
        schema:
          type: boolean
      - description: "Filter invoices on project codes. Separate by comma to filter\
          \ on multiple codes. If blank, all transactions with or without projects\
          \ codes are returned (no filter)."
        example: "1, Kitchen"
        in: query
        name: projectCodes
        schema:
          type: string
      - description: "Filter by supplier numbers. SearchString should be in the form\
          \ of \"20000-25999, 22500, 23000-\" where invoices from suppliers with numbers\
          \ from (and including) 20000 to 25999, 22500 and all over 23000 will be\
          \ selected. If filterString is null or whitespace, query is returned as\
          \ is."
        example: "20000-25999, 22500, 23000-"
        in: query
        name: supplierNos
        schema:
          type: string
      - description: "Filter on invoices voucher number. SearchString should be in\
          \ the form of \"1-15, 42, 690-\" where voucher numbers from (and including)\
          \ 1 to 15, 42 and 690 to infinity are selected. All vouchers in Go are posted\
          \ in the same ascending voucher number series."
        example: "69"
        in: query
        name: voucherNos
        schema:
          type: string
      - description: Filter by voucher type. Defaults to incoming invoice and incoming
          credit note if no parameter is supplied.
        example: "IncomingInvoice, IncomingCreditNote"
        in: query
        name: voucherTypes
        schema:
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IncomingInvoiceListItemDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when resource returned no content
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the posted incoming invoices from the client. The returned objects\
        \ are a lightweight version of a supplier invoice (or credit note), not containing\
        \ the cost transaction lines. Use the endpoint AccountTransactions if all\
        \ voucher lines are needed. Multiple filtering options. (Auth roles: IncomingInvoice,IncomingInvoice_Full)"
      tags:
      - IncomingInvoices
  /VatCodes:
    get:
      description: "Gets the SAF-T vat codes and any custom codes set on the client.\r\
        \nCustom codes will have a prefix with the letter 'C', and will be based on\
        \ the SAF-T codes, but used if the client have mixed vat conditions, for instance.\r\
        \nCompensation codes has a prefix with the letter 'K'."
      parameters:
      - description: Include expired VAT codes. Expired codes has a ValidTo date and
          can still be used for accounting events in the validFrom - validTo timeframe
          as long as it is active.
        example: true
        in: query
        name: includeExpired
        schema:
          type: boolean
      - description: "Returns both active and inactive codes as default. True returns\
          \ active codes, False returns only inactive codes."
        example: false
        in: query
        name: isActive
        schema:
          type: boolean
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VatCodeDto'
                type: array
          description: Given when resource returned successfully.
        "204":
          description: Given when request returns an empty response.
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted.
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the vat codes on the client. (Auth roles: CommonServices,CommonServices_Full)"
      tags:
      - VatCodes
  /PayrollSettings/PensionSchemes:
    get:
      parameters:
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PensionSchemeDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "400":
          content:
            application/json:
              example:
                detail: Fields property in resourceParameter is not formatted correct.
                title: Invalid resourceParameter
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get the pension schemes set in the payroll settings for the client.\
        \ (Auth roles: PayrollSettings,PayrollSettings_Full)"
      tags:
      - PayrollSettings
  /SalesOrders/{salesOrderId}/attachments:
    get:
      description: "To reduce the payload, the returned list do not contain the file.\
        \ To retrieve the files, this must be done by getting each attachment by its\
        \ identifier."
      parameters:
      - description: The sales order identifier
        example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        in: path
        name: salesOrderId
        required: true
        schema:
          format: uuid
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SalesOrderAttachmentDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when no content is returned
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Lists the details of all attachments from a sales order. (Auth roles:\
        \ SalesOrderAttachment,SalesOrderAttachment_Full)"
      tags:
      - SalesOrderAttachments
    post:
      description: Create and add a new attachment to an existing sales order entity
        on the client.
      parameters:
      - description: The sales order identifier
        example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        in: path
        name: salesOrderId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          multipart/form-data:
            encoding:
              file:
                style: form
            schema:
              $ref: '#/components/schemas/_JournalEntryVouchers__id__VoucherPages_post_request'
        description: A file
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrderAttachmentDto'
          description: Given when a resource was created successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Add a attachment to an existing sales order. (Auth roles: SalesOrderAttachment_Full)"
      tags:
      - SalesOrderAttachments
  /TrialBalance:
    get:
      parameters:
      - description: "The specific date (inclusive) to get trial balance for. Note\
          \ that (date time) offsets (if provided) is not taken into account, only\
          \ date is used."
        example: 2021-01-01
        in: query
        name: date
        required: true
        schema:
          format: date
          type: string
      - description: "Filter by account numbers. Separate by comma [,] to filter on\
          \ multiple account numbers. A range of numbers can be specified using dash/hyphen\
          \ [-]. For example \"1000-1999, 2500, 3000-\" will result in transactions\
          \ with account numbers from and including 1000 to 1999, 2500, 3000 and all\
          \ above will be returned. If null or whitespace, the filter is not used."
        example: "1000-1999, 2500, 3000-"
        in: query
        name: accountNos
        schema:
          type: string
      - description: "Filter by agriculture departments. Separate by comma [,] to\
          \ filter on multiple names. If null or whitespace, all transactions with\
          \ or without agriculture departments are returned (filter is not used)."
        example: Finance
        in: query
        name: agricultureDepartments
        schema:
          type: string
      - description: "Filter by department codes. Separate by comma [,] to filter\
          \ on multiple codes. If -1, then all transactions without department codes\
          \ are returned. If null or whitespace, all transactions with or without\
          \ department codes are returned (filter is not used)."
        example: "1, 3, 4"
        in: query
        name: departmentCodes
        schema:
          type: string
      - description: Hide all accounts that have balance = 0.
        example: false
        in: query
        name: hideAccountsWithZeroBalance
        schema:
          type: boolean
      - description: "Include sub-project(s) for the currently filtered project(s).\
          \ If projectCodes is null or whitespace, all (sub)projects are included\
          \ (regardless of this variable)."
        example: true
        in: query
        name: includeSubProject
        schema:
          type: boolean
      - description: "Filter by product code. If null or whitespace, the filter is\
          \ not used."
        example: Coffee Beans
        in: query
        name: productCode
        schema:
          type: string
      - description: "Filter by project code. If -1, then all transactions without\
          \ project codes are returned. If null or whitespace, all transactions with\
          \ or without project codes are returned (filter is not used)."
        example: Kitchen
        in: query
        name: projectCode
        schema:
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrialBalanceLineDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the trial balance at a specific date (inclusive). Multiple filtering\
        \ options (Auth roles: TrialBalance,TrialBalance_Full)"
      tags:
      - TrialBalance
  /ClientAdmin/{clientId}/AccessRoles:
    get:
      parameters:
      - description: The id of the client.
        example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        in: path
        name: clientId
        required: true
        schema:
          format: uuid
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccessRoleDto'
                type: array
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the access roles defined on a given client. (Auth roles: ClientAdmin,ClientAdmin_Full)"
      tags:
      - AccessRoles
  /ClientBankAccounts/BankApprovers:
    get:
      parameters:
      - description: "Filter by bank account numbers. Separate by comma [,] to filter\
          \ on multiple bank accounts. If null or whitespace, all bank accounts are\
          \ returned (filter is not used)."
        example: "36361508151, 46054249748, 86051053542"
        in: query
        name: bankAccountNumbers
        schema:
          type: string
      - description: "Filter by user ids. Separate by comma [,] to filter on multiple\
          \ users. If null or whitespace, all users are returned (filter is not used)."
        example: "21afcc3b-aff4-612c-15a2-f21fc1474163, 7a2cba1a-fa3f-c26a-65a2-c17cf6474621"
        in: query
        name: userIds
        schema:
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BankApproverDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when no content is returned
        "400":
          content:
            application/json:
              example:
                detail: Bank approver object is missing.
                title: Bank approvers validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Bank approver with id = 12345 not found.
                title: Bank approvers not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "List all bank approvers. (Auth roles: ClientBankAccount,ClientBankAccount_Full)"
      tags:
      - ClientBankAccountApprovers
    post:
      description: "If successful, the new entity will be returned with an id which\
        \ is unique and can be used to reference the created object in relevant requests."
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BankApproverPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/BankApproverPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/BankApproverPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BankApproverPostDto'
        description: Bank approver post dto
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankApproverDto'
          description: Given when resource was successfully created.
        "400":
          content:
            application/json:
              example:
                detail: Bank approver object is missing.
                title: Bank approvers validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted.
        "404":
          content:
            application/json:
              example:
                detail: Bank approver with id = 12345 not found.
                title: Bank approvers not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Create a new bank approver. (Auth roles: ClientBankAccount_Full)"
      tags:
      - ClientBankAccountApprovers
  /Vouchers/YearEndJournals:
    post:
      description: "Directly post a new year end voucher to the general ledger of\
        \ the client. Year end vouchers are used for\r\nthe year end closing transactions."
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/YearEndVoucherPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/YearEndVoucherPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/YearEndVoucherPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/YearEndVoucherPostDto'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YearEndVoucherDto'
          description: Given when resource was created successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when an input resources id was not found
        "400":
          description: Given when request is badly formatted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Directly post a new year end vocuher to the general ledger of the\
        \ client. (Auth roles: YearEndVoucher_Full)"
      tags:
      - YearEndVoucherPosting
  /OutgoingInvoices/{id}/Lines:
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OutgoingInvoiceLineDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the lines of the specific outgoing invoice / credit note (specified\
        \ by id).\r\nThe returned objects are the line details.\r\nNote that the line\
        \ information might not be complete or present if the invoice was imported\
        \ to Go (ie. not generated and sent from Go). (Auth roles: OutgoingInvoice,OutgoingInvoice_Full)"
      tags:
      - OutgoingInvoices
  /SalaryLines:
    get:
      description: Will only return salary lines that the integration has created.
      parameters:
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SalaryLineDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "400":
          content:
            application/json:
              example:
                detail: Fields property in resourceParameter is not formatted correct.
                title: Invalid resourceParameter
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get salary lines from the client. (Auth roles: SalaryLine,SalaryLine_Full)"
      tags:
      - SalaryLines
    post:
      description: "If successful, the new entity will be returned with an id which\
        \ is unique and can be used to reference the created object in relevant requests."
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SalaryLinePostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/SalaryLinePostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/SalaryLinePostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SalaryLinePostDto'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalaryLineDto'
          description: Given when resource was successfully created.
        "400":
          content:
            application/json:
              example:
                detail: ExternalImportReference is already in use. 'ABC123' is used
                  on salary line with Id = 123456789.
                title: Salary line validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted.
        "404":
          content:
            application/json:
              example:
                detail: Department with code = 'Avdeling10' not found.
                title: Salary line validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Create a new salary line. (Auth roles: SalaryLine_Full)"
      tags:
      - SalaryLines
  /Assignments/{id}:
    get:
      parameters:
      - description: Identifier of the assignment
        example: 123456
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentGeneralDto'
          description: Given when resource returned successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get the general information from a given quality assignment (Auth\
        \ roles: QualityAssignmentGeneral,QualityAssignmentGeneral_Full, QualityAssignmentLight,QualityAssignmentLight_Full)"
      tags:
      - Assignments
  /ClientAdmin/{clientId}/Users/Invite:
    post:
      parameters:
      - in: path
        name: clientId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/InviteUserPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/InviteUserPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/InviteUserPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/InviteUserPostDto'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
          description: Given when resource returned successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Invite a user to a client. (Auth roles: ClientAdmin_Full)"
      tags:
      - Users
  /JournalEntryVouchers/SupplierCreditNotes:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SupplierCreditNoteJournalEntryVoucherPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierCreditNoteJournalEntryVoucherPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/SupplierCreditNoteJournalEntryVoucherPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SupplierCreditNoteJournalEntryVoucherPostDto'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierCreditNoteJournalEntryVoucherDto'
          description: Given when a resource was created successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Create a new journal entry supplier credit note. (Auth roles: JournalEntryVoucher_Full)"
      tags:
      - SupplierCreditNotes
  /ProductGroups/{id}:
    delete:
      parameters:
      - description: The id of the product group to delete.
        example: 12345
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Given when product group is deleted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource is in use and cannot be deleted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Deletes a product group by ID. (Auth roles: Product_Full)"
      tags:
      - ProductGroups
    get:
      operationId: GetProductGroupById
      parameters:
      - description: The id of a product group.
        example: 1234
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductGroupDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get a product group by its id. (Auth roles: Product,Product_Full)"
      tags:
      - ProductGroups
    patch:
      parameters:
      - description: ""
        example: 1337
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: add
              path: /description
              value: Bottomless boxes of mysteries
            - from: /unitPrice
              op: copy
              path: /unitCost
            - from: /unitPrice
              op: move
              path: /unitCost
            - op: replace
              path: /name
              value: Big blue boxes
            - op: remove
              path: /description
            - op: test
              path: /code
              value: BA12
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductGroupDto'
          description: Given when resource returned successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Update an existing product group. (Auth roles: Product_Full)"
      tags:
      - ProductGroups
  /ClientAdmin/CreateNewClient:
    post:
      description: "If successful, the new entity will be returned with an (client)\
        \ id which is unique and can be used to reference the created object in relevant\
        \ requests."
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ClientPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ClientPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ClientPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ClientPostDto'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDto'
          description: Given when resource returned successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Create a new client in Go, optionally based on a template client.\r\
        \nElements inherited from a template client set, include roles, general ledger\
        \ accounts, activities, branding themes, and Altinn settings. (Auth roles:\
        \ ClientAdmin_Full)"
      tags:
      - Clients
  /Employees/{employeeId}/Employments:
    get:
      description: "Will only contain line count for salary-, fixed salary-, leave-,\
        \ layout- and percentage of full time employment lines."
      parameters:
      - description: The id of the employee.
        example: 12345
        in: path
        name: employeeId
        required: true
        schema:
          format: int64
          type: integer
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EmploymentDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "400":
          content:
            application/json:
              example:
                detail: Fields property in resourceParameter is not formatted correct.
                title: Invalid resourceParameter
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Employee with id = 12345 not found.
                title: Employment not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get employments (employment relationships) on the employee. (Auth\
        \ roles: Employment,Employment_Full)"
      tags:
      - Employments
    post:
      description: "If successful, the new entity will be returned with an id which\
        \ is unique and can be used to reference the created object in relevant requests."
      parameters:
      - description: The id of the employee.
        example: 12345
        in: path
        name: employeeId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EmploymentPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/EmploymentPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/EmploymentPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EmploymentPostDto'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentDto'
          description: Given when resource was successfully created.
        "400":
          content:
            application/json:
              example:
                detail: Employment object is missing.
                title: Employment validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted.
        "404":
          content:
            application/json:
              example:
                detail: Employee with id = 12345 not found.
                title: Employment not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Create a new employment. (Auth roles: Employment_Full)"
      tags:
      - Employments
  /Supplierledger/Statement:
    get:
      parameters:
      - description: "From date, inclusive. Get all transactions with a posted date\
          \ from this date (inclusive). Note that (date time) offsets (if provided)\
          \ is not taken into account, only date is used."
        example: 2021-01-01
        in: query
        name: fromDate
        required: true
        schema:
          format: date
          type: string
      - description: "To date, inclusive. Get all transactions with a posted date\
          \ up to this date (inclusive). If date is less then the current date (today);\
          \ the balance displayed on all entries will be the balance the entry was\
          \ on that date. Note that (date time) offsets (if provided) is not taken\
          \ into account, only date is used."
        example: 2021-01-28
        in: query
        name: toDate
        required: true
        schema:
          format: date
          type: string
      - description: "Filter by contact group IDs. This will return entries for the\
          \ suppliers belonging in the given contact groups. Separate by comma to\
          \ filter on multiple contact group IDs. If filterString is null or whitespace,\
          \ query is returned as is."
        example: "41345, 21445, 65457"
        in: query
        name: contactGroupIds
        schema:
          type: string
      - description: Filter entries based on the created timestamp property. This
          filtering will return all entries with a created timestamp greater than
          the timestamp provided. Can be used when polling for new entries from Go.
          Timestamp not inclusive.
        example: 2021-09-25 08:03:00.1234567 -00:00
        in: query
        name: createdDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: Filter transactions on invoices with given custom matching references.
          Separate by comma to filter on multiple custom matching references.
        example: cmr101
        in: query
        name: customMatchingReferences
        schema:
          type: string
      - description: "Filter entries on department codes. Separate by comma to filter\
          \ on multiple codes. If blank, all transactions with or without department\
          \ codes are returned (no filter). If -1, then all transactions without department\
          \ codes are included."
        example: "1, 3, 4"
        in: query
        name: departmentCodes
        schema:
          type: string
      - description: "Filter by supplier external numbers. SearchString should be\
          \ in the form of \"30000, 14153-19534, 150000-\" where values for 30000,\
          \ between (inclusive) 14153-19534 and all over 150000 (inclusive) will be\
          \ retrieved. If filterString is null or whitespace, query is returned as\
          \ is."
        example: "30000, 14153-19534, 150000-"
        in: query
        name: externalNos
        schema:
          type: string
      - description: "Include Sub-project(s) for specified project. If projectCodes\
          \ is null, all (sub)projects are included (regardless of this variable)."
        example: true
        in: query
        name: includeSubProject
        schema:
          type: boolean
      - description: Filter transactions for invoices with given invoice numbers.
          Separate by comma to filter on multiple invoice numbers.
        example: "1337, 69420"
        in: query
        name: invoiceNos
        schema:
          type: string
      - description: "Filter entries based on the last changed timestamp property.\
          \ The accounting entry in itself cannot change, but the match state of the\
          \ sub-ledger entry might change. Using last changed filtering is one way\
          \ of retrieving new matched items and as such the payment status of invoices.\
          \ This filtering will return all entries with a last changed timestamp greater\
          \ than the timestamp provided. Timestamp not inclusive."
        example: 2021-09-25 08:03:00.1234567 -00:00
        in: query
        name: lastChangedDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: "Filter on transactions with balances greater than amount. This\
          \ will only provide entries with matches. If, for instance, this filter\
          \ is set true and combined with voucherType filter on incoming invoices,\
          \ this can be one way of retrieving payments on invoices. NOTE: We use absolute\
          \ values, so for manual journal entries where balance and amount is positive,\
          \ we get transactions with amount less than balance."
        example: true
        in: query
        name: onlyBalancesGreaterThanAmount
        schema:
          type: boolean
      - description: Sets whether or not to return only entries that the current integration
          created. Can be used to reduce the number of entries if only the status
          of transactions that the querying integration created are relevant to report.
        example: true
        in: query
        name: onlyCreatedByCurrentIntegration
        schema:
          type: boolean
      - description: "Filter entries on project codes. Separate by comma to filter\
          \ on multiple codes. If blank, all transactions with or without projects\
          \ codes are returned (no filter). If -1, then all transactions without project\
          \ codes are included."
        example: "10, 20, 30.1"
        in: query
        name: projectCodes
        schema:
          type: string
      - description: "Filter entries by sub-ledger number series IDs. This will return\
          \ entries for the suppliers belonging in the given sub-ledger number series.\
          \ Separate by comma to filter on multiple sub-ledger number series IDs.\
          \ If filterString is null or whitespace, query is returned as is.\""
        example: "38ecfc1a-bf51-448f-99a8-a61bc5771109, ee373540-ca8d-4562-8fb6-6fb52de47722"
        in: query
        name: subLedgerNumberSeriesIds
        schema:
          type: string
      - description: "Filter by supplier numbers. Supplier number also represent the\
          \ supplier sub-ledger account number. SearchString should be in the form\
          \ of \"20000-25999, 22500, 23000-\" where values from 20000 to 25999, 22500\
          \ and all over 23000 will be selected. If filterString is null or whitespace,\
          \ query is returned as is."
        example: "20000-25990, 22500, 23000-"
        in: query
        name: supplierNos
        schema:
          type: string
      - description: "Filter by voucher types. Separate by comma to filter multiple\
          \ voucher types. If blank, all transactions returned (no filter)."
        example: "IncomingInvoice, BankJournal"
        in: query
        name: voucherTypes
        schema:
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SupplierLedgerEntryDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets all supplier sub-ledger transactions between two dates (inclusive).\
        \ The dates represent the posted date (date of accounting effect). Multiple\
        \ filtering options. (Auth roles: SupplierLedger,SupplierLedger_Full)"
      tags:
      - SupplierSubLedgerEntries
  /SalesOrders:
    get:
      description: "Orders can be in either draft or confirmed state, but neither\
        \ are sent and posted invoices yet (they are considered outgoing invoice drafts).\r\
        \nThe returned objects are a lightweight version of an sales order, not containing\
        \ any line details.\r\nMultiple filtering options."
      parameters:
      - description: "Filter by customer numbers. Separate by comma [,] to filter\
          \ on multiple customer numbers. A range of numbers can be specified using\
          \ dash/hyphen [-]. For example \"10000-15999, 12500, 13000-\" will result\
          \ in invoice drafts from customers with numbers from and including 10000\
          \ to 15999, 12500, 13000 and all above will be returned. If null or whitespace,\
          \ the filter is not used."
        example: "10000-15999, 12500, 13000-"
        in: query
        name: customerNos
        schema:
          type: string
      - description: "Filter by department codes. Note that this selects orders with\
          \ department set in the header of the order. The order lines might specify\
          \ other departments or no department. Separate by comma [,] to filter on\
          \ multiple codes. If -1, then all orders without department codes are returned.\
          \ If null or whitespace, the filter is not used."
        example: "1, 3, 4"
        in: query
        name: departmentCodes
        schema:
          type: string
      - description: "Include sub-project(s) for the currently filtered project(s).\
          \ If projectCodes is null or whitespace, all (sub)projects are included\
          \ (regardless of this variable)."
        example: true
        in: query
        name: includeSubProject
        schema:
          type: boolean
      - description: Filter orders with last changed timestamp greater than the provided
          timestamp. Can be used as one way of getting changes in orders or getting
          new orders. Timestamp not inclusive.
        example: 2021-09-25 08:03:00.1234567 -00:00
        in: query
        name: lastChangedDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: "Filter on invoices that the current integration has created.\
          \ Can be used to reduce the number of invoices, if only the invoices that\
          \ the (currently) querying integration created are relevant."
        example: true
        in: query
        name: onlyCreatedByCurrentIntegration
        schema:
          type: boolean
      - description: Filter by order status.
        example: Draft
        in: query
        name: orderStatus
        schema:
          $ref: '#/components/schemas/OrderStatus'
      - description: "Filter by project codes. Separate by comma [,] to filter on\
          \ multiple codes. If -1, then all orders without project codes are returned.\
          \ If null or whitespace, all orders with or without project codes are returned\
          \ (filter is not used)."
        example: "10, 20, 30.1"
        in: query
        name: projectCodes
        schema:
          type: string
      - description: "Choose whether to display the properties as in Go GUI - with\
          \ inherited values, or as the actual values set on the sales order."
        example: true
        in: query
        name: showInherited
        schema:
          type: boolean
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SalesOrderDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the orders from the client. (Auth roles: SalesOrders,SalesOrders_Full)"
      tags:
      - SalesOrders
  /JournalEntryVouchers/{id}/VoucherPages/{pageId}:
    delete:
      parameters:
      - description: The identifier of the voucher.
        example: 2f228d21-8659-4c4f-8460-978ee24681a4
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: The ID of the voucher page to delete.
        example: 12003
        in: path
        name: pageId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Given when a resource was deleted successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource could not be deleted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Delete a voucher page from a journal entry voucher draft. (Auth roles:\
        \ JournalEntryVoucher_Full)"
      tags:
      - VoucherPages
    get:
      description: You can only access vouchers and voucher pages you have created
        or is an approver of.
      parameters:
      - description: The identifier of the voucher.
        example: 2f228d21-8659-4c4f-8460-978ee24681a4
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: The id of a voucher page. Page ids can be found by querying the
          voucher endpoint first.
        example: 11001
        in: path
        name: pageId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets a voucher page image by id (Auth roles: JournalEntryVoucher,\
        \ JournalEntryVoucher_Full)"
      tags:
      - VoucherPages
  /ClientAdmin/{clientId}/Users/AddPartnerUser:
    post:
      parameters:
      - in: path
        name: clientId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AddPartnerUserPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AddPartnerUserPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AddPartnerUserPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddPartnerUserPostDto'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
          description: Given when resource returned successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Add an existing partner user to a client. (Auth roles: ClientAdmin_Full)"
      tags:
      - Users
  /ContactPersons/{contactId}:
    post:
      parameters:
      - description: Id of the contact (Customer or Supplier)
        example: 12345
        in: path
        name: contactId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ContactPersonPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ContactPersonPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ContactPersonPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ContactPersonPostDto'
        description: A contact person post dto
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactPersonDto'
          description: Given when a resource was created successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Create a contact person. (Auth roles: ContactPerson_Full, Customer_Full,\
        \ Supplier_Full)"
      tags:
      - ContactPersons
  /OrganizationSettings:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationSettingDto'
          description: Given when resource returned successfully
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the organization settings on the client. (Auth roles: CommonServices,CommonServices_Full)"
      tags:
      - OrganizationSettings
  /CurrencyRates:
    get:
      description: "Get a currency exchange rate between two currencies for a given\
        \ date.\r\nCurrency rate for a future date is not available, and will return\
        \ the newest available rate.\r\nThe rates are updated daily around 1600 CET.\r\
        \nRates originate from European Central Bank [https://data.ecb.europa.eu/currency-converter]"
      parameters:
      - in: query
        name: fromCurrency
        required: true
        schema:
          type: string
      - in: query
        name: toCurrency
        required: true
        schema:
          type: string
      - in: query
        name: asOnDate
        required: true
        schema:
          format: date-time
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyRateDto'
          description: Given when resource returned successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get currency rate. (Auth roles: CommonServices,CommonServices_Full)"
      tags:
      - CurrencyRates
  /PayItems:
    get:
      description: "A pay item is used by the payroll system to identify how an individual\
        \ salary line should be treated,\r\nin order to report and post the salary\
        \ in a correct manner on the payroll issued."
      parameters:
      - description: "Filter by pay item codes. Separate by comma [,] to filter on\
          \ multiple pay items. If null or whitespace, all pay items are returned\
          \ (filter is not used)."
        example: "10, 20, 30"
        in: query
        name: codes
        schema:
          type: string
      - description: Filter by created timestamp property. This filtering will return
          all pay items with a created timestamp greater than the timestamp provided.
          Can be used when polling for new entries from Go. Timestamp not inclusive.
        example: 2021-09-25 08:03:00.1234567 -00:00
        in: query
        name: createdDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: "Filter pay items based on active status. True to only get pay\
          \ items with active status, false to only get pay items with inactive status."
        example: true
        in: query
        name: isActive
        schema:
          type: boolean
      - description: Filter by the last changed timestamp property. This filtering
          will return all pay items with a last changed timestamp greater than the
          timestamp provided. Can be used when polling for new or updated entries.
          Timestamp not inclusive.
        example: 2021-09-25 08:03:00.1234567 -00:00
        in: query
        name: lastChangedDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PayItemDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "400":
          content:
            application/json:
              example:
                detail: Fields property in resourceParameter is not formatted correct.
                title: Invalid resourceParameter
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get all pay items for the client. (Auth roles: PayItem,PayItem_Full)"
      tags:
      - PayItems
  /ContactGroups:
    get:
      parameters:
      - description: Filter by the contact group created timestamp property. This
          filtering will return all contact groups with a created timestamp greater
          than the timestamp provided. Can be used when polling for new entries from
          Go. Timestamp not inclusive.
        example: 2023-09-2 09:39:00.1234567Z
        in: query
        name: createdDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: Filter by the contact group last changed timestamp property.
          This filtering will return all contact groups with a last changed timestamp
          greater than the timestamp provided. Can be used when polling for new and/or
          changed entries from Go. Timestamp not inclusive.
        example: 2023-09-2 09:39:00.1234567Z
        in: query
        name: lastChangedDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: "Filter by contact group names. SearchString should be separated\
          \ by comma. If filterString is null or whitespace, query is returned as\
          \ is."
        example: "Customer, Employees, Suppliers"
        in: query
        name: names
        schema:
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContactGroupDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when no content is returned
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get contact groups. (Auth roles: ContactGroup,ContactGroup_Full)"
      tags:
      - ContactGroups
    post:
      description: "Contact groups can be assigned on contact entities (customers/employees/suppliers),\
        \ and are primarily used for filtering purposes (filtering of contacts)."
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ContactGroupPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ContactGroupPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ContactGroupPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ContactGroupPostDto'
        description: Name is required.
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactGroupDto'
          description: Given when resource was successfully created.
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Create a new contact group. (Auth roles: ContactGroup_Full)"
      tags:
      - ContactGroups
  /OutgoingInvoices:
    get:
      parameters:
      - description: Filter invoices with last changed timestamp in balance (remaining
          amount to be paid) greater than the provided timestamp. Can be used as a
          lightweight version of retrieving payment states of invoices. Timestamp
          not inclusive.
        example: 2021-09-25 08:03:00.1234567 -00:00
        in: query
        name: balanceLastChangedDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: "Filter by customer numbers. Separate by comma [,] to filter\
          \ on multiple customer numbers. A range of numbers can be specified using\
          \ dash/hyphen [-]. For example \"10000-11000, 12000, 13000-\" will result\
          \ in invoices from customers with numbers from and including 10000 to 11000,\
          \ 12000, 13000 and all above will be returned. If null or whitespace, the\
          \ filter is not used."
        example: "10000-11000, 12000, 13000-"
        in: query
        name: customerNos
        schema:
          type: string
      - description: "Filter by custom matching references. Separate by comma [,]\
          \ to filter on multiple custom matching references."
        example: "12345, abc123"
        in: query
        name: customMatchingReferences
        schema:
          type: string
      - description: "Filter by department codes. Note that this selects invoices\
          \ with department set in the header of the invoice. The invoice lines might\
          \ specify other departments or no department. Separate by comma [,] to filter\
          \ on multiple codes. If -1, then all invoices without department codes are\
          \ returned. If null or whitespace, the filter is not used."
        example: "1, 3, 4"
        in: query
        name: departmentCodes
        schema:
          type: string
      - description: "From date, inclusive. Get all invoices with an voucher (invoice)\
          \ date from this date (inclusive). Note that (date time) offsets (if provided)\
          \ is not taken into account, only date is used."
        example: 2021-01-01
        in: query
        name: fromDate
        schema:
          format: date
          type: string
      - description: "Include sub-project(s) for the currently filtered project(s).\
          \ If projectCodes is null or whitespace, all (sub)projects are included\
          \ (regardless of this variable)."
        example: true
        in: query
        name: includeSubProject
        schema:
          type: boolean
      - description: "Filter by invoice IDs. Separate by comma [,] to filter on multiple\
          \ invoice IDs. If null or whitespace, the filter is not used."
        example: "38ecfc1a-bf51-448f-99a8-a61bc5771109, ee373540-ca8d-4562-8fb6-6fb52de47722"
        in: query
        name: invoiceIds
        schema:
          type: string
      - description: "Filter by invoice numbers. Separate by comma [,] to filter on\
          \ multiple invoice numbers. A range of numbers can be specified using dash/hyphen\
          \ [-]. For example \"1-5, 7, 9-\" will result in invoices with numbers 1\
          \ to 5, 7, 9 and all above will be returned. If null or whitespace, the\
          \ filter is not used."
        example: "1-5, 7, 9-"
        in: query
        name: invoiceNos
        schema:
          type: string
      - description: "Filter on invoices that the current integration has created.\
          \ Can be used to return only invoices that the (currently) querying integration\
          \ has created. Note that invoices are considered created by an integration\
          \ only if they are posted with the OutgoingInvoiceVoucher endpoint, or if\
          \ the invoice was sent using the SalesOrders endpoint. If a sales order\
          \ draft was posted/sent by a user in the GUI, it will be the user that posted/sent\
          \ it that created the outgoing invoice."
        example: true
        in: query
        name: onlyCreatedByCurrentIntegration
        schema:
          type: boolean
      - description: Filter on invoices that are unpaid (ie balance != 0).
        example: true
        in: query
        name: onlyUnpaidInvoices
        schema:
          type: boolean
      - description: "Filter by project codes. Separate by comma [,] to filter on\
          \ multiple codes. If -1, then all invoices without project codes are returned.\
          \ If null or whitespace, all invoices with or without project codes are\
          \ returned (filter is not used)."
        example: "10, 20, 30.1"
        in: query
        name: projectCodes
        schema:
          type: string
      - description: "Filter invoices based on the sent timestamp. The Sent timestamp\
          \ of when the invoice was generated and sent from Go (which might differ\
          \ from the invoice date). This property is only set on the invoices generated\
          \ in Go, and blank if invoices was imported (using a file or the api). Using\
          \ this filter is one option of retrieving new invoices from Go. Timestamp\
          \ not inclusive."
        example: 2021-09-25 08:03:00.1234567 -00:00
        in: query
        name: sentDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: "To date, inclusive. Get all invoices with an voucher (invoice)\
          \ date up to this date (inclusive). Note that (date time) offsets (if provided)\
          \ is not taken into account, only date is used."
        example: 2021-01-28
        in: query
        name: toDate
        schema:
          format: date
          type: string
      - description: "Filter by voucher numbers. Separate by comma [,] to filter on\
          \ multiple voucher numbers. A range of numbers can be specified using dash/hyphen\
          \ [-]. For example \"1-5, 7, 9-\" will result in invoices with voucher numbers\
          \ from 1 to 5, 7, 9 and all above will be returned. If null or whitespace,\
          \ the filter is not used."
        example: "1-5, 7, 9-"
        in: query
        name: voucherNos
        schema:
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OutgoingInvoiceDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the sent outgoing invoices from the client.\r\nThe returned objects\
        \ are a lightweight version of an invoice, not containing any line details.\r\
        \nMultiple filtering options. (Auth roles: OutgoingInvoice,OutgoingInvoice_Full)"
      tags:
      - OutgoingInvoices
  /ClientAdmin/{clientId}/Users/{userId}:
    get:
      operationId: GetUserById
      parameters:
      - description: The id of the client.
        example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        in: path
        name: clientId
        required: true
        schema:
          format: uuid
          type: string
      - description: The id of the user.
        example: 21afcc3b-aff4-612c-15a2-f21fc1474163
        in: path
        name: userId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
          description: Given when resource returned successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets a specific user on a given client.\r\nNote: Only clients that\
        \ belong to the partner are available. (Auth roles: ClientAdmin,ClientAdmin_Full)"
      tags:
      - Users
    patch:
      parameters:
      - description: The id of the client.
        example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        in: path
        name: clientId
        required: true
        schema:
          format: uuid
          type: string
      - description: The id of the user to update.
        example: 21afcc3b-aff4-612c-15a2-f21fc1474163
        in: path
        name: userId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: add
              path: /AccessRoleId
              value: f5ee31f2-f25e-e12a-6fea-e345fe42aafa
            - from: /ToDate
              op: copy
              path: /FromDate
            - from: /ToDate
              op: move
              path: /FromDate
            - op: replace
              path: /AccessRoleId
              value: f5ee31f2-f25e-e12a-6fea-e345fe42aafa
            - op: remove
              path: /AccessRoleId
            - op: test
              path: /AccessRoleId
              value: f5ee31f2-f25e-e12a-6fea-e345fe42aafa
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: "JSON Patch structure for updating a user. See UserPatchDto schema\
          \ for all available properties. For more information on JSON patch and the\
          \ various operations allowed, check out: https://datatracker.ietf.org/doc/html/rfc6902"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
          description: Given when resource was successfully updated.
        "400":
          content:
            application/json:
              example:
                detail: Access Role id cannot be empty.
                title: Users validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Access Role id = a1aaaa2a-a4aa-aa5a-a7aa-aaa9aa44aaaa is not
                  found for the Client with id = f5ee31f2-f25e-e12a-6fea-e345fe42aafa.
                title: Users not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Change an existing user on a client with a given (user) Id. (Auth\
        \ roles: ClientAdmin_Full)"
      tags:
      - Users
  /Employees/Employments/{employmentId}/Layoffs:
    get:
      parameters:
      - description: The id of the employment.
        example: 12345
        in: path
        name: employmentId
        required: true
        schema:
          format: int64
          type: integer
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EmploymentLayoffDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "400":
          content:
            application/json:
              example:
                detail: Fields property in resourceParameter is not formatted correct.
                title: Invalid resourceParameter
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Employment with id = 12345 not found.
                title: Employment not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get layoff lines for the given employment (employment relationships)\
        \ on an employee. (Auth roles: EmploymentLayoff,EmploymentLayoff_Full)"
      tags:
      - EmploymentLayoffs
    post:
      description: "If successful, the new entity will be returned with an id which\
        \ is unique and can be used to reference the created object in relevant requests."
      parameters:
      - description: The id of the employment.
        example: 98765
        in: path
        name: employmentId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EmploymentLayoffPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/EmploymentLayoffPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/EmploymentLayoffPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EmploymentLayoffPostDto'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentLayoffDto'
          description: Given when resource was successfully created.
        "400":
          content:
            application/json:
              example:
                detail: Employment layoff object is missing.
                title: Employment validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted.
        "404":
          content:
            application/json:
              example:
                detail: Employment with id = 12345 not found.
                title: Employment not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Create a new layoff (line) on a given employment. (Auth roles: EmploymentLayoff_Full)"
      tags:
      - EmploymentLayoffs
  /LockDateSettings:
    get:
      operationId: GetLockDate
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockDateSettingsDto'
          description: Given when resource was successfully returned.
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the lock date on the client. (Auth roles: CommonServices,CommonServices_Full)"
      tags:
      - LockDateSettings
  /JournalEntryVouchers/SupplierCreditNotes/{id}/VoucherLines/{lineId}:
    delete:
      parameters:
      - description: The identifier of the supplier credit note.
        example: 2f228d21-8659-4c4f-8460-978ee24681a4
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: The identifier of the supplier voucher line.
        example: 60001
        in: path
        name: lineId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Given when a resource was deleted successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Delete a supplier voucher line from a supplier voucher. (Auth roles:\
        \ JournalEntryVoucher_Full)"
      tags:
      - SupplierCreditNotes
    patch:
      parameters:
      - description: The identifier of the supplier credit note.
        example: 2f228d21-8659-4c4f-8460-978ee24681a4
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: The identifier of the supplier voucher line.
        example: 60001
        in: path
        name: lineId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /currencyAmount
              value: "69420"
            - op: replace
              path: /supplierAccountId
              value: "20001"
            - from: creditAccountId
              op: copy
              path: /supplierAccountId
            - op: remove
              path: /departmentId
            - op: add
              path: /projectId
              value: "69"
            - op: test
              path: /locationId
              value: "69"
            - op: add
              path: /Accrual
              value:
                BalanceAccountAgricultureDepartment: null
                BalanceAccountId: 1920
                BalanceAccountNo: null
                FromDate: 2023-10-01
                IsActive: true
                ToDate: 2024-10-01
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: "JSON Patch structure for updating a supplier voucher line. See\
          \ SupplierVoucherLinePatchDto schema for all available properties. For more\
          \ information on JSON patch and the various operations allowed, check out:\
          \ https://datatracker.ietf.org/doc/html/rfc6902"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierVoucherLineDto'
          description: Given when a resource was updated successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Voucher with id = 347acc0d-ab04-4a39-99f2-1573983c4f64 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Voucher with id = 347acc0d-ab04-4a39-99f2-1573983c4f64 is
                  already posted.
                title: Object conflict
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource is in conflict
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Update a supplier voucher line on a supplier credit note. (Auth roles:\
        \ JournalEntryVoucher_Full)"
      tags:
      - SupplierCreditNotes
  /ContactDeliveryAddresses:
    get:
      description: "Gets the delivery addresses for a given contact (customer/employee/supplier\
        \ identifier).\r\nThe common use case of an delivery address is to set it\
        \ on sales orders for customers."
      parameters:
      - description: "Filter by contact IDs. Separate by comma to filter on multiple\
          \ contact IDs. If filterString is null or whitespace, query is returned\
          \ as is."
        example: "12345, 62142, 11235"
        in: query
        name: contactIds
        schema:
          type: string
      - description: "Filter by the contact delivery address' created timestamp property.\r\
          \n                This filtering will return all addresses with a created\
          \ timestamp greater than the timestamp provided.\r\n                Can\
          \ be used when polling for new entries from Go. Timestamp not inclusive."
        example: 2023-10-19T11:05:00.1234567Z
        in: query
        name: createdDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: "Filter by contact delivery address external codes.  Separate\
          \ by comma to filter on multiple external codes. If filterString is null\
          \ or whitespace, query is returned as is. Case insensitive, ie. ABC == abc."
        example: "10A, 3B, 69Z"
        in: query
        name: externalCodes
        schema:
          type: string
      - description: "Filter by the contact delivery address' last changed timestamp\
          \ property.\r\n                This filtering will return all contact delivery\
          \ addresses with a last changed timestamp greater than the timestamp provided.\r\
          \n                Can be used when polling for new and/or changed entries\
          \ from Go. Timestamp not inclusive."
        example: 2023-10-19T11:05:00.1234567Z
        in: query
        name: lastChangedDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContactDeliveryAddressDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when no content is returned
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the delivery addresses for a given contact (Auth roles: ContactDeliveryAddress,\
        \ ContactDeliveryAddress_Full, Customer, Customer_Full, Supplier, Supplier_Full,\
        \ Employee, Employee_Full)"
      tags:
      - ContactDeliveryAddresses
  /ContactPersons:
    get:
      description: "Gets the contact persons associated with a given contact (customer/supplier\
        \ identifier).\r\n            Contact persons are not available for employee\
        \ contacts"
      parameters:
      - description: "Filter by contact IDs. Separate by comma to filter on multiple\
          \ contact IDs. If filterString is null or whitespace, query is returned\
          \ as is."
        example: "12345, 62142, 11235"
        in: query
        name: contactIds
        schema:
          type: string
      - description: "Filter by the contact person created timestamp property.\r\n\
          \            This filtering will return all contact persons with a created\
          \ timestamp greater than the timestamp provided.\r\n            Can be used\
          \ when polling for new entries from Go. Timestamp not inclusive."
        example: 2023-10-19T11:05:00.1234567Z
        in: query
        name: createdDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: "Filter by contact person external codes. SearchString should\
          \ be separated by comma.\r\n            If filterString is null or whitespace,\
          \ query is returned as is."
        example: "A69, B420, C1337"
        in: query
        name: externalCodes
        schema:
          type: string
      - description: "Filter by the contact person last changed timestamp property.\r\
          \n            This filtering will return all contact persons with a last\
          \ changed timestamp greater than the timestamp provided.Can be used when\
          \ polling for new and/or changed entries from Go.\r\n            Timestamp\
          \ not inclusive."
        example: 2023-10-19T11:05:00.1234567Z
        in: query
        name: lastChangedDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContactPersonDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when no content is returned
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the contact persons associated with a given contact. (Auth roles:\
        \ ContactPerson, ContactPerson_Full, Customer, Customer_Full, Supplier, Supplier_Full)"
      tags:
      - ContactPersons
  /JournalEntryVouchers/ManualJournals/{id}/VoucherLines:
    post:
      description: "Returns the entire manual voucher with all lines, including the\
        \ new one. The newest line can be identified by its created date."
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ManualJournalEntryVoucherLinePostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ManualJournalEntryVoucherLinePostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ManualJournalEntryVoucherLinePostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ManualJournalEntryVoucherLinePostDto'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManualJournalEntryVoucherDto'
          description: Given when a resource was created successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Add a line to a manual voucher. (Auth roles: JournalEntryVoucher_Full)"
      tags:
      - ManualJournals
  /DeliveryTerms/{id}:
    delete:
      parameters:
      - description: The id of the delivery term.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Given when resource was successfully deleted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when the resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource is in use and cannot be deleted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Delete a delivery term from the client sales settings. (Auth roles:\
        \ CommonServices_Full)"
      tags:
      - DeliveryTerms
    get:
      operationId: GetDeliveryTermById
      parameters:
      - description: The id of the delivery term.
        example: 12345
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryTermDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the specific delivery term by id. (Auth roles: CommonServices,CommonServices_Full)"
      tags:
      - DeliveryTerms
    patch:
      parameters:
      - description: The id of the delivery term.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /name
              value: ReplacedName
            - op: add
              path: /IsDefault
              value: true
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: "JSON Patch structure for updating a Delivery Term.\r\n     \
          \       See DeliveryTermPatchDto schema for all available properties. For\
          \ more information on JSON patch and the various operations allowed, check\
          \ out: https://datatracker.ietf.org/doc/html/rfc6902"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryTermDto'
          description: Given when resource was successfully updated
        "400":
          content:
            application/json:
              example:
                detail: "DeliveryTermPatchDto: The target location specified by path\
                  \ segment 'name2' was not found."
                title: Delivery Terms validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request was badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Delivery Term with id = 12345 not found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when the resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Make changes to a delivery term in the client sales settings. (Auth\
        \ roles: CommonServices_Full)"
      tags:
      - DeliveryTerms
  /SalaryLines/{id}:
    delete:
      description: "Can only be done if the integration created the salary line, and\
        \ the line is not locked (isLocked must be false).\r\nWill (hard) delete the\
        \ salary line from the client."
      parameters:
      - description: The id of the salary line to delete.
        example: 12345
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Given when salary line is deleted
        "404":
          content:
            application/json:
              example:
                detail: Salary line with id = 12345 not found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Salary line with id = 12345 is in use and cannot be deleted.
                title: Salary line conflict
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource is in use and cannot be deleted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Delete a salary line with a given id. (Auth roles: SalaryLine_Full)"
      tags:
      - SalaryLines
    get:
      description: Will only return the salary line if the integration created the
        salary line.
      operationId: GetSalaryLineById
      parameters:
      - description: The id of the salary line.
        example: 12345
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalaryLineDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Salary line with id = 12345 not found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get a specific salary line by id. (Auth roles: SalaryLine,SalaryLine_Full)"
      tags:
      - SalaryLines
    patch:
      description: Only salary lines that the integration has created can be changed.
      parameters:
      - description: The id of the salary line.
        example: 12345
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: add
              path: /DepartmentId
              value: "12345"
            - from: /ToDate
              op: copy
              path: /FromDate
            - from: /ToDate
              op: move
              path: /FromDate
            - op: replace
              path: /DepartmentId
              value: "54321"
            - op: remove
              path: /DepartmentId
            - op: test
              path: /PayItemId
              value: f5ee31f2-f25e-e12a-6fea-e345fe42aafa
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: "JSON Patch structure for updating a salary line. See SalaryLinePatchDto\
          \ schema for all available properties. For more information on JSON patch\
          \ and the various operations allowed, check out: https://datatracker.ietf.org/doc/html/rfc6902"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalaryLineDto'
          description: Given when resource was successfully updated
        "400":
          content:
            application/json:
              example:
                detail: ExternalImportReference is already in use. 'ABC123' is used
                  on salary line with Id = 123456789.
                title: Salary line validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Salary line with id = 12345 not found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Change an existing salary line with a given id. (Auth roles: SalaryLine_Full)"
      tags:
      - SalaryLines
  /Employees/{employeeId}/PayrollSettings:
    get:
      description: Note that in order to use this endpoint you need to have the special
        privilege "EmployeePayrollSettings".
      operationId: GetEmployeePayrollSettings
      parameters:
      - description: The id of the employee.
        example: 12345
        in: path
        name: employeeId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePayrollSettingsDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Employee with id = 12345 not found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the payroll settings for a given employee.\r\nThese settings\
        \ will default inherit from the general payroll settings, if not overridden\
        \ on the employee. (Auth roles: EmployeePayrollSettings,EmployeePayrollSettings_Full)"
      tags:
      - EmployeeSettings
    patch:
      description: Note that in order to use this endpoint you need to have the special
        privilege "EmployeePayrollSettings".
      parameters:
      - description: The id of the employee.
        example: 12345
        in: path
        name: employeeId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: "JSON Patch structure for updating employee payroll settings.\
          \ See EmployeePayrollSettingsPatchDto schema for all available properties.\
          \ For more information on JSON patch and the various operations allowed,\
          \ check out: https://datatracker.ietf.org/doc/html/rfc6902"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePayrollSettingsDto'
          description: Given when resource was successfully updated.
        "400":
          content:
            application/json:
              example:
                detail: "EmployeePayrollSettingsPatchDto: The value 'bogus' is invalid\
                  \ for target location."
                title: Employee payroll settings validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Employee with id = 12345 not found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Change payroll settings for an employee with a given id. (Auth roles:\
        \ EmployeePayrollSettings_Full)"
      tags:
      - EmployeeSettings
  /JournalEntryVouchers/BankJournals/{id}/VoucherLines/{lineId}:
    delete:
      parameters:
      - description: The identifier of the BankJournalEntryVoucher.
        example: 2f228d21-8659-4c4f-8460-978ee24681a4
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: The identifier of the BankJournalEntryVoucherLine.
        example: 60001
        in: path
        name: lineId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Given when a resource was deleted successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Delete a BankJournalEntryVoucherLine from a BankJournalEntryVoucher.\
        \ (Auth roles: JournalEntryVoucher_Full)"
      tags:
      - BankJournals
    patch:
      parameters:
      - description: The identifier of the BankJournalEntryVoucher.
        example: 2f228d21-8659-4c4f-8460-978ee24681a4
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: The identifier of the BankJournalEntryVoucherLine.
        example: 60001
        in: path
        name: lineId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /currencyCode
              value: EUR
            - op: replace
              path: /currencyExchangeRate
              value: "11.76"
            - op: remove
              path: /departmentId
            - op: add
              path: /projectId
              value: "69"
            - op: test
              path: /locationId
              value: "69"
            - op: add
              path: /Accrual
              value:
                BalanceAccountAgricultureDepartment: null
                BalanceAccountId: 1920
                BalanceAccountNo: null
                FromDate: 2023-10-01
                IsActive: true
                ToDate: 2024-10-01
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: JSON Patch structure for updating a BankJournalEntryVoucherLine.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankJournalEntryVoucherLineDto'
          description: Given when a resource was updated successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Voucher with id = 347acc0d-ab04-4a39-99f2-1573983c4f64 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Voucher with id = 347acc0d-ab04-4a39-99f2-1573983c4f64 is
                  already posted.
                title: Object conflict
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource is in conflict
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Update a BankJournalEntryVoucherLine. (Auth roles: JournalEntryVoucher_Full)"
      tags:
      - BankJournals
  /SalesOrders/sentState:
    get:
      description: "Can be polled to confirm that the sales order was successfully\
        \ transformed to an invoice or credit note and delivered.\r\nIf delivery failed,\
        \ LastErrorMessage will have a value.\r\nNote: Imported vouchers and invoices\
        \ may not have a sent date."
      operationId: GetSentState
      parameters:
      - in: query
        name: id
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InvoiceSentStateDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when no content is returned.
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get the sent state of a sales order. (Auth roles: SalesOrders_Full)"
      tags:
      - CreateAndSendInvoice
  /Vouchers/CashJournals:
    post:
      description: "Directly post a new Cash voucher to the general ledger of the\
        \ client. Cash vouchers are typically used in\r\nrelation to payment transactions"
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CashVoucherPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/CashVoucherPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CashVoucherPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CashVoucherPostDto'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashVoucherDto'
          description: Given when resource was created successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Directly post a new Cash voucher to the general ledger. (Auth roles:\
        \ CashVoucher_Full)"
      tags:
      - CashVoucherPosting
  /JournalEntryVouchers/SupplierInvoices:
    post:
      description: Use the voucher page endpoint to add a page to the supplier invoice.
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SupplierInvoiceJournalEntryVoucherPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierInvoiceJournalEntryVoucherPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/SupplierInvoiceJournalEntryVoucherPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SupplierInvoiceJournalEntryVoucherPostDto'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierInvoiceJournalEntryVoucherDto'
          description: Given when a resource was created successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Create a supplier invoice. (Auth roles: JournalEntryVoucher_Full)"
      tags:
      - SupplierInvoices
  /Vouchers/Reverse/{id}:
    post:
      description: "Request a reversal of a given voucher. Can only be used for vouchers\
        \ the integration created using the POST\r\n/voucher endpoints. When requested,\
        \ Go will automatically create a new reversal voucher that nullify the\r\n\
        original transactions. Reversing a voucher that has an invoice number or an\
        \ external import reference, will\r\nenable the values of these properties\
        \ to be reused on a new corrected voucher."
      operationId: PostVoucherReversal
      parameters:
      - description: The unique identifier of the voucher to be reversed.
        example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "200":
          description: The voucher reverse was successfully
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Request a reversal of a given voucher. (Auth roles: YearEndVoucher_Full)"
      tags:
      - ReverseVoucherPosting
  /CustomDimensionSettings:
    get:
      description: "Gets the custom dimension settings on the client, providing the\
        \ ordinal name and active state of the dim1-dim3 from the client."
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomDimensionSettingsDto'
                type: array
          description: Given when resource returned successfully
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the custom dimensions settings from the client (Auth roles: CustomDimension,CustomDimension_Full)"
      tags:
      - CustomDimensionSettings
  /Locations/{id}:
    delete:
      parameters:
      - description: The id of the location to delete.
        example: 12345
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Given when location is deleted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource is in use and cannot be deleted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Deletes a location by ID. (Auth roles: Location_Full)"
      tags:
      - Locations
    get:
      operationId: GetLocationById
      parameters:
      - description: ""
        example: 1234
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get a location by its ID. (Auth roles: Location,Location_Full)"
      tags:
      - Locations
    patch:
      parameters:
      - description: The id of the location.
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: add
              path: /code
              value: "10"
            - from: /code
              op: copy
              path: /name
            - from: /code
              op: move
              path: /name
            - op: replace
              path: /name
              value: London
            - op: remove
              path: /code
            - op: test
              path: /isActive
              value: "true"
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: "JSON Patch structure for updating a Location. See LocationPatchDto\
          \ schema for all available properties. For more information on JSON patch\
          \ and the various operations allowed, check out: https://datatracker.ietf.org/doc/html/rfc6902"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationDto'
          description: Given when resource returned successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Make changes to a location on the client. (Auth roles: Location_Full)"
      tags:
      - Locations
  /ContactPersons/{contactId}/{id}:
    delete:
      parameters:
      - description: Id of contact (customer or supplier)
        in: path
        name: contactId
        required: true
        schema:
          format: int64
          type: integer
      - description: Id of contact person
        example: 1234
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Given when contact group is deleted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource is in use and cannot be deleted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Deletes a contact person by ID. (Auth roles: ContactPerson_Full, Customer_Full,\
        \ Supplier_Full)"
      tags:
      - ContactPersons
    get:
      operationId: GetContactPersonById
      parameters:
      - description: Id of the contact (Customer or Supplier)
        in: path
        name: contactId
        required: true
        schema:
          format: int64
          type: integer
      - description: Id of the contact person
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactPersonDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get a contact person by id. (Auth roles: ContactPerson, ContactPerson_Full,\
        \ Customer, Customer_Full, Supplier, Supplier_Full)"
      tags:
      - ContactPersons
    patch:
      parameters:
      - description: Id of the contact the ContactPerson belongs to
        in: path
        name: contactId
        required: true
        schema:
          format: int64
          type: integer
      - description: Id of the ContactPerson
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: add
              path: /phoneNumber
              value: 2222 5555
            - from: /firstname
              op: copy
              path: /lastname
            - from: /firstname
              op: move
              path: /lastname
            - op: replace
              path: /phoneNumber
              value: 2222 6666
            - op: remove
              path: /phoneNumber
            - op: test
              path: /phoneNumber
              value: 2222 6666
            - op: replace
              path: /mailAddress/addressLine1
              value: Downing street 10
            - op: add
              path: /mailAddress/city
              value: London
            - op: add
              path: /mailAddress/countryCode
              value: GB
            - op: add
              path: /mailAddress/zipCode
              value: SW1A 2AB
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: JsonPatchDocument
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactPersonDto'
          description: Given when a resource was successfully returned
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Update a contact person. (Auth roles: ContactPerson_Full, Customer_Full,\
        \ Supplier_Full)"
      tags:
      - ContactPersons
  /VoucherApproval/{voucherId}:
    post:
      parameters:
      - in: path
        name: voucherId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/VoucherApprovalPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/VoucherApprovalPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/VoucherApprovalPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/VoucherApprovalPostDto'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoucherApprovalStatusResponseDto'
          description: Given when voucher was successfully approved or rejected.
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted.
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when voucher to be approved was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Approve, reject or return a voucher update back to the client. (Auth\
        \ roles: VoucherApproval_Full)"
      tags:
      - VoucherApproval
  /CustomDimensions/{id}:
    delete:
      parameters:
      - description: The ID of the custom dimension.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Given when resource was successfully deleted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when the resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource is in use and cannot be deleted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Delete a custom dimension. (Auth roles: CustomDimension_Full)"
      tags:
      - CustomDimensions
    get:
      operationId: GetCustomDimensionById
      parameters:
      - description: The ID of a custom dimension.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDimensionDto'
          description: Given when resource returned successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets a custom dimension by id. (Auth roles: CustomDimension,CustomDimension_Full)"
      tags:
      - CustomDimensions
    patch:
      parameters:
      - description: Id of the custom dimension to be updated.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: add
              path: /code
              value: NewCode
            - op: replace
              path: /name
              value: ReplacedName
            - op: add
              path: /ordinal
              value: 2
            - op: add
              path: /isActive
              value: false
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: A JsonPatchDocument with the update information.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDimensionDto'
          description: Given when resource was successfully updated
        "400":
          content:
            application/json:
              example:
                detail: "CustomDimensionPatchDto: The target location specified by\
                  \ path segment 'customDimensionOrdinal' was not found."
                title: Custom Dimension validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request was badly formatted
        "404":
          content:
            application/json:
              example:
                detail: CustomDimension with the provided id = 12345 was not found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Change an existing custom dimension with a given id. (Auth roles:\
        \ CustomDimension_Full)"
      tags:
      - CustomDimensions
  /Onboarding/Finalize:
    post:
      description: Finalize the last step in the process of onboarding the integration
        on clients. Read our documentation page for detailed workflow descriptions.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinalizeOnboardingPostDto'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinalizeOnboardingResponseDto'
          description: OK
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "429":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
      security:
      - {}
      summary: "Finalize the last procedural step of onboarding your integration for\
        \ one or more PowerOffice Go client, using the external onboarding worklfow."
      tags:
      - Onboarding
  /ContactBankAccounts:
    get:
      description: "Queries can be done independent of the contact objects, but the\
        \ response is coupled with the contact access privileges. Multiple filtering\
        \ options.\r\n            Bank accounts set on contacts are used for payments\
        \ and information purposes."
      parameters:
      - description: "Filter by bank account numbers. Separate by comma to filter\
          \ on multiple bank accounts. If filterString is null or whitespace, query\
          \ is returned as is."
        example: "12345678901, 98765432101"
        in: query
        name: bankAccountNumbers
        schema:
          type: string
      - description: "Filter contact bank accounts by the contact id's. Separate by\
          \ comma to filter on multiple id's. If filterString is null or whitespace,\
          \ the query will lookup all the contacts the integration has access and\
          \ privileges for."
        example: "12345, 67890"
        in: query
        name: contactIds
        schema:
          type: string
      - description: "Filter by the contact bank account created timestamp property.\r\
          \n                This filtering will return all bank accounts with a created\
          \ timestamp greater than the timestamp provided.\r\n                Can\
          \ be used when polling for new entries from Go. Timestamp not inclusive."
        example: 2023-11-29T14:00:00.1234567Z
        in: query
        name: createdDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: "Filter by the contact bank account last changed timestamp property.\r\
          \n                This filtering will return all bank accounts with a last\
          \ changed timestamp greater than the timestamp provided.\r\n           \
          \     Can be used when polling for new and/or changed entries from Go. Timestamp\
          \ not inclusive."
        example: 2023-11-29T14:00:00.1234567Z
        in: query
        name: lastChangedDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContactBankAccountDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when no content is returned
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the bank accounts set on the client contacts (customer/employee/supplier).\
        \ (Auth roles: ContactBankAccount, ContactBankAccount_Full, Customer, Customer_Full,\
        \ Supplier, Supplier_Full, Employee, Employee_Full)"
      tags:
      - ContactBankAccounts
  /Supplierledger/EntriesByMatchId:
    get:
      parameters:
      - description: The match ID to filter for.
        example: 12345
        in: query
        name: matchId
        required: true
        schema:
          format: int64
          type: integer
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SupplierLedgerEntryDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: "Given when there is no content to return (response body is\
            \ empty). This could happen if matchId exist, but match is not on a supplier\
            \ sub-ledger transaction."
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets all supplier sub-ledger transactions that share a given match\
        \ ID. (Auth roles: SupplierLedger,SupplierLedger_Full)"
      tags:
      - SupplierSubLedgerEntries
  /ContactBankAccounts/{contactId}/{id}:
    delete:
      parameters:
      - description: The id of the contact
        in: path
        name: contactId
        required: true
        schema:
          format: int64
          type: integer
      - description: The id of the contact bank account
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource is in use and cannot be deleted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Delete an existing bank account on a contact (customer/employee/supplier)\
        \ with a given id. (Auth roles: ContactBankAccount, ContactBankAccount_Full,\
        \ Customer_Full, Supplier_Full, Employee_Full)"
      tags:
      - ContactBankAccounts
    get:
      operationId: GetContactBankAccountsById
      parameters:
      - description: The id of the contact
        example: 12345
        in: path
        name: contactId
        required: true
        schema:
          format: int64
          type: integer
      - description: The id of the bank account
        example: 23456
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactBankAccountDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get a contact bank account given contact id and bank account id (customer/employee/supplier).\
        \ (Auth roles: ContactBankAccount, ContactBankAccount_Full, Customer, Customer_Full,\
        \ Supplier, Supplier_Full, Employee, Employee_Full)"
      tags:
      - ContactBankAccounts
    patch:
      parameters:
      - description: ""
        in: path
        name: contactId
        required: true
        schema:
          format: int64
          type: integer
      - description: ""
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactBankAccountDto'
          description: Given when a resource was successfully updated
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Update an existing bank account on a contact (customer/employee/supplier)\
        \ with a given id. (Auth roles: ContactBankAccount, ContactBankAccount_Full,\
        \ Customer_Full, Supplier_Full, Employee_Full)"
      tags:
      - ContactBankAccounts
  /Assignments:
    get:
      description: Archived assignments are not returned by default.
      parameters:
      - description: "Filter by assignment status (draft, active or archived). Archived\
          \ assignments are not returned unless the filter with argument \"archived\"\
          \ is applied."
        example: draft
        in: query
        name: status
        schema:
          type: string
      - description: "Filter by customer sub ledger account id's. Separate by comma\
          \ [,] to filter on multiple customer id's."
        example: "12345,12357"
        in: query
        name: customerSubLedgerAccountIds
        schema:
          type: string
      - description: "Filter by the identifier of the assignment manager. Separate\
          \ by comma [,] to filter on multiple customer id's."
        example: "12345,12357"
        in: query
        name: managerSubLedgerAccountIds
        schema:
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AssignmentLightWeightDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when no content was returned
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "List the quality assignments from the client, returning lightweight\
        \ objects. (Auth roles: QualityAssignmentLight,QualityAssignmentLight_Full)"
      tags:
      - Assignments
  /JournalEntryVouchers/BankJournals/{id}:
    get:
      description: The integration only has access to journals and vouchers that it
        has created or is the current approver of.
      operationId: GetBankJournalById
      parameters:
      - description: The identifier of a BankJournalEntryVoucher.
        example: d77e1400-d1cb-44e3-853c-bf64d8953af3
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankJournalEntryVoucherDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Voucher with id = 347acc0d-ab04-4a39-99f2-1573983c4f64 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get a BankJournalEntryVoucher by id. (Auth roles: JournalEntryVoucher,JournalEntryVoucher_Full)"
      tags:
      - BankJournals
    patch:
      description: "The integration only has access to journals and vouchers that\
        \ it has created or is the current approver of.\r\n            If the voucher\
        \ is currently under approval by a different approver, the integration will\
        \ not be able to update the voucher.\r\n            BankJournalEntryVoucherLines\
        \ must be updated using a separate endpoint."
      parameters:
      - description: The identifier of a bank journal entry.
        example: d77e1400-d1cb-44e3-853c-bf64d8953af3
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: remove
              path: /departmentId
            - op: add
              path: /projectId
              value: "69"
            - op: test
              path: /locationId
              value: "69"
            - op: replace
              path: /voucherDate
              value: 2024-10-17
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: "JSON Patch structure for updating a BankJournalEntryVoucher.\
          \ See BankJournalEntryVoucherPatchDto schema for all available properties.\r\
          \n            For more information on JSON patch and the various operations\
          \ allowed, check out: https://datatracker.ietf.org/doc/html/rfc6902"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankJournalEntryVoucherDto'
          description: Given when a resource was updated successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Voucher with id = 347acc0d-ab04-4a39-99f2-1573983c4f64 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Voucher with id = 347acc0d-ab04-4a39-99f2-1573983c4f64 is
                  already posted.
                title: Object conflict
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource conflict occur
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Update BankJournalEntryVoucher header. (Auth roles: JournalEntryVoucher_Full)"
      tags:
      - BankJournals
  /Vouchers/BankJournals/{id}:
    get:
      description: "Note that when querying Bank vouchers, a response will only be\
        \ produced for vouchers the integration\r\nhave created using POST operations\
        \ with the bank voucher endpoint."
      operationId: GetBankVoucherById
      parameters:
      - description: The id of the bank voucher.
        example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankVoucherDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the specific bank voucher by id. (Auth roles: BankVoucher_Full)"
      tags:
      - BankVoucherPosting
  /PayItems/{id}:
    get:
      description: "A pay item is used by the payroll system to identify how an individual\
        \ salary line should be treated,\r\nin order to report and post the salary\
        \ in a correct manner on the payroll issued."
      operationId: GetPayItemById
      parameters:
      - description: The id of the pay item.
        example: 21d4ddf1-c8bf-4874-8879-b70468fa1032
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayItemDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets a specific pay item by id. (Auth roles: PayItem,PayItem_Full)"
      tags:
      - PayItems
  /JournalEntryVouchers/SupplierCreditNotes/{id}:
    get:
      description: "Gets the specific journal entry supplier credit note by id.\r\n\
        \            Note that when querying journal entry voucher details, a response\
        \ will only be produced for vouchers the integration have created using POST\
        \ operations with journal entry voucher endpoints."
      operationId: GetSupplierCreditNoteById
      parameters:
      - description: The identifier of a supplier credit note.
        example: d77e1400-d1cb-44e3-853c-bf64d8953af3
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierCreditNoteJournalEntryVoucherDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Voucher with id = 347acc0d-ab04-4a39-99f2-1573983c4f64 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the specific journal entry supplier credit note by id. (Auth\
        \ roles: JournalEntryVoucher,JournalEntryVoucher_Full)"
      tags:
      - SupplierCreditNotes
    patch:
      description: Change an existing journal entry supplier credit note. Changes
        cannot be made if the voucher is poster or sent to the approval workflow.
      parameters:
      - description: The identifier of the journal entry supplier credit note
        example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /currencyAmount
              value: "69420"
            - op: replace
              path: /supplierAccountId
              value: "20001"
            - from: /creditNoteNo
              op: copy
              path: /description
            - op: remove
              path: /departmentId
            - op: add
              path: /projectId
              value: "69"
            - op: test
              path: /locationId
              value: "69"
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: "JSON Patch structure for updating an Supplier Credit Note. See\
          \ SupplierCreditNoteJournalEntryVoucherPatchDto schema for all available\
          \ properties. For more information on JSON patch and the various operations\
          \ allowed, check out: https://datatracker.ietf.org/doc/html/rfc6902"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierCreditNoteJournalEntryVoucherDto'
          description: Given when resource returned successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Voucher with id = 347acc0d-ab04-4a39-99f2-1573983c4f64 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Voucher with id = 347acc0d-ab04-4a39-99f2-1573983c4f64 is
                  already posted.
                title: Object conflict
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource could not be deleted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Change an existing journal entry supplier credit note (Auth roles:\
        \ JournalEntryVoucher_Full)"
      tags:
      - SupplierCreditNotes
  /CustomDimensions:
    get:
      operationId: GetCustomDimension
      parameters:
      - description: "Filter by custom dimension codes. Search string should be in\
          \ the form of 1, ABC, 10B (codes separated by comma).\r\n              \
          \  If filter string is null or whitespace, query is returned as is. Note\
          \ that the codes are not unique across dim1-dim3,\r\n                meaning\
          \ that you might potentially get 3 objects returned if the code you filter\
          \ on are used on all custom dimensions.\r\n                Filter on the\
          \ dimension ordinal to return values for only one of the custom dimensions."
        example: "1, ABC, 10B"
        in: query
        name: codes
        schema:
          type: string
      - description: "Filter on the created date property.\r\n                This\
          \ filtering will return all custom dimensions with a created date greater\
          \ than the timestamp provided.\r\n                Can be used when polling\
          \ for new custom dimensions from Go. Blank means no filter. Date not inclusive,\
          \ and in UTC time."
        example: 2021-09-25 08:03:00
        in: query
        name: createdDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: "Filter on the custom dimension ordinal (i.e. 1=dim1, 2=dim2\
          \ or 3=dim3), returning only values within the specific custom dimension\
          \ ordinal."
        example: "1"
        in: query
        name: ordinal
        schema:
          type: string
      - description: "Filter by external import references. Search string should be\
          \ in the form of 1, ABC, 10B (codes separated by comma)."
        example: "ABC123, DEF456"
        in: query
        name: externalImportReference
        schema:
          type: string
      - description: "Filter on the last change date property.\r\n               \
          \ This filtering will return all custom dimension objects with a last changed\
          \ date greater than the timestamp provided.\r\n                Can be used\
          \ when polling for new or changed custom dimension objects from Go. Blank\
          \ means no filter. Date not inclusive, and in UTC time."
        in: query
        name: lastChangedDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomDimensionDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when no content is returned
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the custom dimensions on the client. (Auth roles: CustomDimension,CustomDimension_Full)"
      tags:
      - CustomDimensions
    post:
      description: "Name and Ordinal required.\r\nThe ordinal define whether the object\
        \ instance is created within the dim1, dim2 or dim3 set.\r\nCode must be unique\
        \ within an ordinal. If code is not provided, it will be automatically assigned\
        \ by Go.\r\nIsActive defaults to true, if not provided."
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CustomDimensionPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/CustomDimensionPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CustomDimensionPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CustomDimensionPostDto'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDimensionDto'
          description: Given when resource was created successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Creates a new custom dimension within the given ordinal. (Auth roles:\
        \ CustomDimension_Full)"
      tags:
      - CustomDimensions
  /Employees/{employeeId}/HourlyRates:
    get:
      parameters:
      - description: The id of the employee.
        example: 12345
        in: path
        name: employeeId
        required: true
        schema:
          format: int64
          type: integer
      - description: "Sets a parameter filtering the hourly rates that are active\
          \ and in effect at the time of the query (if set true). If false, the complete\
          \ collection of hourly rates will be returned, including past rates and\
          \ future sets (if any)."
        example: true
        in: query
        name: validNow
        schema:
          type: boolean
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EmployeeHourlyRateDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "400":
          content:
            application/json:
              example:
                detail: Fields property in resourceParameter is not formatted correct.
                title: Invalid resourceParameter
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Employee with id = 12345 not found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets all hourly rates registered on the employee. (Auth roles: EmployeeHourlyRates,EmployeeHourlyRates_Full)"
      tags:
      - EmployeeHourlyRates
    post:
      description: "If successful, the new entity will be returned with an id which\
        \ is unique and can be used to reference the created object in relevant requests."
      parameters:
      - description: The id of the employee.
        example: 12345
        in: path
        name: employeeId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EmployeeHourlyRatePostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeHourlyRatePostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeHourlyRatePostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EmployeeHourlyRatePostDto'
        description: A employee hourly rate post dto
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeHourlyRateDto'
          description: Given when resource was successfully created.
        "400":
          content:
            application/json:
              example:
                detail: Hourly-rates object is missing.
                title: Employee Hourly Rates validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted.
        "404":
          content:
            application/json:
              example:
                detail: Employee with id = 12345 not found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Create one new hourly rate entity. (Auth roles: EmployeeHourlyRates_Full)"
      tags:
      - EmployeeHourlyRates
  /GeneralLedgerAccounts/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Given when employee is deleted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource is in use and cannot be deleted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Deletes a General Ledger Account with a given id. (Auth roles: GeneralLedgerAccount_Full)"
      tags:
      - GeneralLedgerAccounts
    get:
      operationId: GetGeneralLedgerAccountById
      parameters:
      - description: ""
        example: 1337
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralLedgerAccountDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get a GeneralLedgerAccount by ID (Auth roles: GeneralLedgerAccount,GeneralLedgerAccount_Full)"
      tags:
      - GeneralLedgerAccounts
    patch:
      parameters:
      - description: The id of the general ledger account.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: "JSON Patch structure for updating a General Ledger Account.\
          \ See GeneralLedgerAccountPatchDto schema for all available properties.\
          \ For more information on JSON patch and the various operations allowed,\
          \ check out: https://datatracker.ietf.org/doc/html/rfc6902"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralLedgerAccountDto'
          description: Given when resource was successfully updated
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Update an existing general ledger account. (Auth roles: GeneralLedgerAccount_Full)"
      tags:
      - GeneralLedgerAccounts
  /SalesOrders/{id}/Lines/{lineId}:
    delete:
      parameters:
      - description: The id of the sales order.
        example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: The id of the sales order line to delete.
        example: 27bedb1c-ef51-128f-99a8-a61bc5771109
        in: path
        name: lineId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          description: Given when sales order is deleted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource is in use and cannot be deleted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Delete a sales order line with a given id. (Auth roles: SalesOrders_Full)"
      tags:
      - SalesOrderLines
    get:
      operationId: GetSalesOrderLineById
      parameters:
      - description: The id of the sales order.
        example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: The id of the sales order line.
        example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        in: path
        name: lineId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrderLineDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the specific sales order line by id. (Auth roles: SalesOrders,SalesOrders_Full)"
      tags:
      - SalesOrderLines
    patch:
      parameters:
      - description: The id of the sales order.
        example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: The id of the sales order line.
        example: 41dbec1a-bf51-448f-99a8-a61bc5771109
        in: path
        name: lineId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: "JSON Patch structure for updating an Sales Order line. See SalesOrderLinePatchDto\
          \ schema for all available properties. For more information on JSON patch\
          \ and the various operations allowed, check out: https://datatracker.ietf.org/doc/html/rfc6902"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrderLineDto'
          description: Given when resource was successfully updated.
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Change an existing sales order line with a given id. (Auth roles:\
        \ SalesOrders_Full)"
      tags:
      - SalesOrderLines
  /SalesOrders/{id}:
    delete:
      description: "Deletes all sales order information, including header and lines."
      parameters:
      - description: The id of the sales order to delete.
        example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          description: Given when sales order is deleted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource is in use and cannot be deleted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Delete an sales order entity with a given id. (Auth roles: SalesOrders_Full)"
      tags:
      - SalesOrders
    get:
      description: "The returned object are a lightweight version of an sales order,\
        \ not containing any line details."
      operationId: GetSalesOrderById
      parameters:
      - description: The id of the sales order.
        example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - description: "Choose whether to display the properties as in Go GUI - with\
          \ inherited values, or as the actual values set on the sales order."
        example: true
        in: query
        name: showInherited
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrderDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the specific sales order by id. (Auth roles: SalesOrders,SalesOrders_Full)"
      tags:
      - SalesOrders
    patch:
      parameters:
      - description: The id of the sales order.
        example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: "JSON Patch structure for updating an Sales Order. See SalesOrderPatchDto\
          \ schema for all available properties. For more information on JSON patch\
          \ and the various operations allowed, check out: https://datatracker.ietf.org/doc/html/rfc6902"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrderDto'
          description: Given when resource was successfully updated.
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Change an existing sales order with a given id. (Auth roles: SalesOrders_Full)"
      tags:
      - SalesOrders
  /Vouchers/BankJournals:
    post:
      description: "Directly post a new Bank voucher to the general ledger of the\
        \ client. Bank vouchers are typically used in\r\nrelation to payment transactions"
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BankVoucherPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/BankVoucherPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/BankVoucherPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BankVoucherPostDto'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankVoucherDto'
          description: Given when resource was created successfully
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Directly post a new Bank voucher to the general ledger. (Auth roles:\
        \ BankVoucher_Full)"
      tags:
      - BankVoucherPosting
  /Departments:
    get:
      operationId: GetDepartments
      parameters:
      - description: "Filter by department codes. SearchString should be in the form\
          \ of \"1, ABC, 10B\" (codes separated by comma). If filterString is null\
          \ or whitespace, query is returned as is."
        example: "10, 20"
        in: query
        name: codes
        schema:
          type: string
      - description: Find departments created after this timestamp.
        example: 2021-09-25 08:03:00.1234567 -00:00
        in: query
        name: createdDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: Find departments created by importJournal with ID.
        example: f575b4b0-55be-4b56-b01f-44b204df82c5
        in: query
        name: createdFromImportJournalId
        schema:
          format: uuid
          type: string
      - description: Filter by isActive.
        example: true
        in: query
        name: isActive
        schema:
          type: boolean
      - description: Find departments that have been changed after this timestamp.
        example: 2021-09-25 08:03:00.1234567 -00:00
        in: query
        name: lastChangedDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: Filter by department manager via their employee number.
        example: 123
        in: query
        name: managerEmployeeNo
        schema:
          format: int64
          type: integer
      - description: Filter by department name.
        example: Sales
        in: query
        name: name
        schema:
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DepartmentDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when no content is returned
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Departments can be divisions of an organization. The usages may also\
        \ be that of a dimension separating specific\r\nareas of activity for reporting\
        \ purposes. (Auth roles: Department,Department_Full)"
      tags:
      - Departments
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DepartmentPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/DepartmentPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DepartmentPostDto'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentDto'
          description: Given when resource was successfully created.
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted.
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Create a new department. (Auth roles: Department_Full)"
      tags:
      - Departments
  /Departments/{id}:
    delete:
      parameters:
      - description: Id of the department to delete.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Given when department is deleted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource is in use and cannot be deleted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Delete an existing department. (Auth roles: Department_Full)"
      tags:
      - Departments
    get:
      operationId: GetDepartmentById
      parameters:
      - description: The ID of the department.
        example: 123
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource is not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get department by ID (Auth roles: Department,Department_Full)"
      tags:
      - Departments
    patch:
      description: You must provide the ID of the department to update as part of
        the url.
      parameters:
      - description: Id of the department to update
        example: 10001
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: "JSON Patch structure for updating a Department. See DepartmentPatchDto\
          \ schema for all available properties. For more information on JSON patch\
          \ and the various operations allowed, check out: https://datatracker.ietf.org/doc/html/rfc6902"
      responses:
        "200":
          description: Given when resource was successfully updated.
        "400":
          content:
            application/json:
              example:
                detail: "DepartmentPatchDto: The target location specified by path\
                  \ segment 'manageremployeeno' was not found."
                title: Department validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted.
        "404":
          content:
            application/json:
              example:
                detail: Department with id = 12345 not found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Update an existing department. (Auth roles: Department_Full)"
      tags:
      - Departments
  /PayrollSettings:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayrollSettingsDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get payroll settings for the client. (Auth roles: PayrollSettings,PayrollSettings_Full)"
      tags:
      - PayrollSettings
  /Employees/{employeeId}/PensionSettings:
    get:
      description: Note that in order to use this endpoint you need to have the special
        privilege "EmployeePensionSettings".
      operationId: GetEmployeePensionSettings
      parameters:
      - description: The id of the employee.
        example: 12345
        in: path
        name: employeeId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePensionSettingsDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Employee with id = 12345 not found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the pension settings for a given employee.\r\nThese settings\
        \ will default inherit from the general payroll settings, if not overridden\
        \ on the employee. (Auth roles: EmployeePensionSettings,EmployeePensionSettings_Full)"
      tags:
      - EmployeeSettings
    patch:
      description: Note that in order to use this endpoint you need to have the special
        privilege "EmployeePensionSettings".
      parameters:
      - description: The id of the employee.
        example: 12345
        in: path
        name: employeeId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: "JSON Patch structure for updating employee pension settings.\
          \ See EmployeePensionSettingsPatchDto schema for all available properties.\
          \ For more information on JSON patch and the various operations allowed,\
          \ check out: https://datatracker.ietf.org/doc/html/rfc6902"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePensionSettingsDto'
          description: Given when resource was successfully updated.
        "400":
          content:
            application/json:
              example:
                detail: "EmployeePensionSettingsPatchDto: The value 'bogus' is invalid\
                  \ for target location."
                title: Employee pension settings validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Employee with id = 12345 not found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Change pension settings for an employee with a given id. (Auth roles:\
        \ EmployeePensionSettings_Full)"
      tags:
      - EmployeeSettings
  /ContactGroups/{id}:
    delete:
      parameters:
      - description: ""
        example: 1234
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Given when contact group is deleted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource is in use and cannot be deleted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Deletes a contact group by ID. (Auth roles: ContactGroup_Full)"
      tags:
      - ContactGroups
    get:
      operationId: GetContactGroupById
      parameters:
      - description: Id of contact group.
        example: 1234
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactGroupDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get a contact group by id. (Auth roles: ContactGroup,ContactGroup_Full)"
      tags:
      - ContactGroups
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /Name
              value: New Group Name
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactGroupDto'
          description: Given when resource returned successfully
        "400":
          content:
            application/json:
              example:
                detail: "ContactGroupPatchDto: The target location specified by path\
                  \ segment 'GroupName' was not found."
                title: Contact group validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Contact group with id = 12345 not found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Update a contact group. (Auth roles: ContactGroup_Full)"
      tags:
      - ContactGroups
  /AccountTransactions:
    get:
      parameters:
      - description: "From date, inclusive. Get all transactions with a posted date\
          \ from this date (inclusive). Note that (date time) offsets (if provided)\
          \ is not taken into account, only date is used."
        example: 2021-01-01
        in: query
        name: fromDate
        required: true
        schema:
          format: date
          type: string
      - description: "To date, inclusive. Get all transactions with a posted date\
          \ up to this date (inclusive). Note that (date time) offsets (if provided)\
          \ is not taken into account, only date is used."
        example: 2021-01-28
        in: query
        name: toDate
        required: true
        schema:
          format: date
          type: string
      - description: "Filter by account numbers. Separate by comma [,] to filter on\
          \ multiple account numbers. A range of numbers can be specified using dash/hyphen\
          \ [-]. For example \"1000-1999, 2500, 3000-\" will result in transactions\
          \ with account numbers from and including 1000 to 1999, 2500, 3000 and all\
          \ above will be returned. If null or whitespace, the filter is not used."
        example: "1000-1999, 2500, 3000-"
        in: query
        name: accountNos
        schema:
          type: string
      - description: "Filter by agriculture departments. Separate by comma [,] to\
          \ filter on multiple names. If null or whitespace, all transactions with\
          \ or without agriculture departments are returned (filter is not used)."
        example: Finance
        in: query
        name: agricultureDepartments
        schema:
          type: string
      - description: Filter by created timestamp. This filtering will return all transactions
          with a created timestamp greater than the timestamp provided. Can be used
          when polling for new entries from Go. Date not inclusive.
        example: 2021-09-25 08:03:00.1234567 -00:00
        in: query
        name: createdDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: "Filter by department codes. Separate by comma [,] to filter\
          \ on multiple codes. If -1, then all transactions without department codes\
          \ are returned. If null or whitespace, all transactions with or without\
          \ department codes are returned (filter is not used)."
        example: "1, 3, 4"
        in: query
        name: departmentCodes
        schema:
          type: string
      - description: "Include sub-project(s) for the currently filtered project(s).\
          \ If projectCodes is null or whitespace, all (sub)projects are included\
          \ (regardless of this variable)."
        example: true
        in: query
        name: includeSubProject
        schema:
          type: boolean
      - description: "Filter by last changed timestamp. No changes with accounting\
          \ effect can be made on a posted voucher in Go, making createdDateTimeOffsetGreaterThan\
          \ the preferred filtering in order to get new account transactions from\
          \ Go. However, simple changes like the description can be made on a posted\
          \ voucher, which will effect the last changed timestamp. This filtering\
          \ will return all transactions with a last changed timestamp greater than\
          \ the timestamp provided. Can be used when polling for new transactions\
          \ and where changes in description are needed from Go. If used, changed\
          \ transactions should replace what was previously stored in the external\
          \ system. Note again that no changes can be made that affects the accounting\
          \ as such. Date not inclusive."
        example: 2021-09-25 08:03:00.1234567 -00:00
        in: query
        name: lastChangedDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: "Filter by product codes. Separate by comma [,] to filter on\
          \ multiple codes. If -1, then all transactions without product codes are\
          \ returned. If null or whitespace, the filter is not used."
        example: "11A, 69, 420"
        in: query
        name: productCodes
        schema:
          type: string
      - description: "Filter by project codes. Separate by comma [,] to filter on\
          \ multiple codes. If -1, then all transactions without project codes are\
          \ returned. If null or whitespace, all transactions with or without project\
          \ codes are returned (filter is not used)."
        example: "10, 20, 30.1"
        in: query
        name: projectCodes
        schema:
          type: string
      - description: "Filter by vat codes. Separate by comma [,] to filter on multiple\
          \ codes. If null or whitespace, the filter is not used."
        example: "1, 3, 5"
        in: query
        name: vatCodes
        schema:
          type: string
      - description: "Filter by voucher numbers. Separate by comma [,] to filter on\
          \ multiple voucher numbers. A range of numbers can be specified using dash/hyphen\
          \ [-]. For example \"1-5, 7, 9-\" will result in transactions with voucher\
          \ numbers from and including 1 to 5, 7, 9 and all above will be returned.\
          \ If null or whitespace, the filter is not used."
        example: "1-5, 7, 9-"
        in: query
        name: voucherNos
        schema:
          type: string
      - description: "Filter by voucher types. Separate by comma [,] to filter on\
          \ multiple voucher types. If null or whitespace, the filter is not used."
        example: "OutgoingInvoice, BankJournal"
        in: query
        name: voucherTypes
        schema:
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccountTransactionDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets all account transactions between two dates (inclusive). The dates\
        \ represent the posted date (date of accounting effect). Multiple filtering\
        \ options. (Auth roles: AccountTransaction,AccountTransaction_Full)"
      tags:
      - AccountTransactions
  /Customerledger/OpenItems:
    get:
      parameters:
      - description: "Date, inclusive. Get all open entries as of this date. Note\
          \ that (date time) offsets (if provided) is not taken into account, only\
          \ date is used."
        example: 2021-01-01
        in: query
        name: date
        required: true
        schema:
          format: date
          type: string
      - description: "Filter by contact group IDs. This will return entries for the\
          \ customers belonging in the given contact groups. Separate by comma to\
          \ filter on multiple contact group IDs. If filterString is null or whitespace,\
          \ query is returned as is."
        example: "41345, 21445, 65457"
        in: query
        name: contactGroupIds
        schema:
          type: string
      - description: Filter entries based on the created timestamp property. This
          filtering will return all entries with a created timestamp greater than
          the timestamp provided. Can be used when polling for new entries from Go.
          Date not inclusive.
        example: 2021-09-25 08:03:00.1234567 -00:00
        in: query
        name: createdDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: "Filter by customer numbers. Customer number also represent the\
          \ customer sub-ledger account number. SearchString should be in the form\
          \ of \"10000-15999, 12500, 13000-\" where values from 10000 to 15999, 12500\
          \ and all over 13000 will be selected. If filterString is null or whitespace,\
          \ query is returned as is."
        example: "10000-15990, 12500, 13000-"
        in: query
        name: customerNos
        schema:
          type: string
      - description: Filter transactions on invoices with given custom matching references.
          Separate by comma to filter on multiple custom matching references.
        example: cmr101
        in: query
        name: customMatchingReferences
        schema:
          type: string
      - description: "Filter entries on department codes. Separate by comma to filter\
          \ on multiple codes. If blank, all transactions with or without department\
          \ codes are returned (no filter). If -1, then all transactions without department\
          \ codes are included."
        example: "1, 3, 4"
        in: query
        name: departmentCodes
        schema:
          type: string
      - description: "Filter by customer external numbers. SearchString should be\
          \ in the form of \"30000, 14153-19534, 150000-\" where values for 30000,\
          \ between (inclusive) 14153-19534 and all over 150000 (inclusive) will be\
          \ retrieved. If filterString is null or whitespace, query is returned as\
          \ is."
        example: "30000, 14153-19534, 150000-"
        in: query
        name: externalNos
        schema:
          type: string
      - description: "Include Sub-project(s) for specified project. If projectCodes\
          \ is null, all (sub)projects are included (regardless of this variable)."
        example: true
        in: query
        name: includeSubProject
        schema:
          type: boolean
      - description: Filter transactions for invoices with given invoice numbers.
          Separate by comma to filter on multiple invoice numbers.
        example: "1337, 69420"
        in: query
        name: invoiceNos
        schema:
          type: string
      - description: "Filter entries based on the last changed timestamp property.\
          \ The accounting entry in itself cannot change, but the match state of the\
          \ sub-ledger entry might change. Using last changed filtering is one way\
          \ of retrieving new matched items and as such the payment status of invoices.\
          \ This filtering will return all entries with a last changed timestamp greater\
          \ than the timestamp provided. Date not inclusive."
        example: 2021-09-25 08:03:00.1234567 -00:00
        in: query
        name: lastChangedDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      - description: Filter on transactions with balances less than amount. This will
          only provide entries with matches that are still open.
        example: true
        in: query
        name: onlyBalancesLessThanAmount
        schema:
          type: boolean
      - description: Sets whether or not to return only entries that the current integration
          created. Can be used to reduce the number of entries if only the status
          of transactions that the querying integration created are relevant to report.
        example: true
        in: query
        name: onlyCreatedByCurrentIntegration
        schema:
          type: boolean
      - description: "Filter entries on project codes. Separate by comma to filter\
          \ on multiple codes. If blank, all transactions with or without projects\
          \ codes are returned (no filter). If -1, then all transactions without project\
          \ codes are included."
        example: "10, 20, 30.1"
        in: query
        name: projectCodes
        schema:
          type: string
      - description: "Filter items by sub-ledger number series IDs. This will return\
          \ entries for the customers belonging in the given sub-ledger number series.\
          \ Separate by comma to filter on multiple sub-ledger number series IDs.\
          \ If filterString is null or whitespace, query is returned as is.\""
        example: "38ecfc1a-bf51-448f-99a8-a61bc5771109, ee373540-ca8d-4562-8fb6-6fb52de47722"
        in: query
        name: subLedgerNumberSeriesIds
        schema:
          type: string
      - description: "Filter by voucher types. Separate by comma to filter multiple\
          \ voucher types. If blank, all transactions returned (no filter)."
        example: "OutgoingInvoice, BankJournal"
        in: query
        name: voucherTypes
        schema:
          type: string
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomerLedgerEntryDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets all customer sub-ledger transactions that are open items at a\
        \ given date (inclusive). Multiple filtering options. (Auth roles: CustomerLedger,CustomerLedger_Full)"
      tags:
      - CustomerSubLedgerEntries
  /IncomingInvoices/{id}:
    get:
      parameters:
      - description: Id of the IncomingInvoiceListItem
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingInvoiceListItemDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get an IncomingInvoiceListItem by Id (Auth roles: IncomingInvoice,IncomingInvoice_Full)"
      tags:
      - IncomingInvoices
  /Customers/{id}:
    delete:
      description: "If the customer have links to transactions or other entities,\
        \ or if the contact is an active supplier/employee, this operation cannot\
        \ be performed."
      parameters:
      - description: The id of the customer to delete.
        example: 12345
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Given when customer is deleted
        "404":
          content:
            application/json:
              example:
                detail: Customer with id = 12345 not found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "409":
          content:
            application/json:
              example:
                detail: Customer with id = 12345 is in use and cannot be deleted.
                title: Customer conflict
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource is in use and cannot be deleted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Delete a customer entity with a given id. (Auth roles: Customer_Full)"
      tags:
      - Customers
    get:
      description: "The customer object is a contact entity, meaning the id might\
        \ be shared with a supplier and/or an employee if the contact is registered\
        \ as both a customer and supplier/employee in Go."
      operationId: GetCustomerById
      parameters:
      - description: The id of the customer.
        example: 12345
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDto'
          description: Given when resource returned successfully
        "404":
          content:
            application/json:
              example:
                detail: Customer with id = 12345 not found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Gets the specific customer by id. (Auth roles: Customer,Customer_Full)"
      tags:
      - Customers
    patch:
      parameters:
      - description: The id of the customer.
        example: 12345
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: add
              path: /phoneNumber
              value: 2222 5555
            - from: /firstname
              op: copy
              path: /lastname
            - from: /firstname
              op: move
              path: /lastname
            - op: replace
              path: /phoneNumber
              value: 2222 6666
            - op: remove
              path: /phoneNumber
            - op: test
              path: /phoneNumber
              value: 2222 6666
            - op: add
              path: /ContactGroupIds/-
              value: "1"
            - op: add
              path: /ContactGroupIds
              value:
              - 3
              - 1001
            - op: remove
              path: /ContactGroupIds/0
            - op: remove
              path: /ContactGroupIds/-
            - op: replace
              path: /ContactGroupIds/0
              value: 1002
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: "JSON Patch structure for updating a Customer. See CustomerPatchDto\
          \ schema for all available properties. For more information on JSON patch\
          \ and the various operations allowed, check out: https://datatracker.ietf.org/doc/html/rfc6902"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDto'
          description: Given when resource was successfully updated
        "400":
          content:
            application/json:
              example:
                detail: ExternalImportReference is already in use. 'ABC123' is used
                  on (contact) Id = 123456789.
                title: Customer validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Customer with id = 12345 not found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Change an existing customer with a given id. (Auth roles: Customer_Full)"
      tags:
      - Customers
  /Employees/Employments/{employmentId}/Salaries:
    get:
      parameters:
      - description: The id of the employment.
        example: 12345
        in: path
        name: employmentId
        required: true
        schema:
          format: int64
          type: integer
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EmploymentSalaryDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "400":
          content:
            application/json:
              example:
                detail: Fields property in resourceParameter is not formatted correct.
                title: Invalid resourceParameter
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "404":
          content:
            application/json:
              example:
                detail: Employment with id = 12345 not found.
                title: Employment not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get salary lines for the given employment (employment relationships)\
        \ on an employee. (Auth roles: EmploymentSalary,EmploymentSalary_Full)"
      tags:
      - EmploymentSalaries
    post:
      description: "If successful, the new entity will be returned with an id which\
        \ is unique and can be used to reference the created object in relevant requests."
      parameters:
      - description: The id of the employment.
        example: 98765
        in: path
        name: employmentId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EmploymentSalaryPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/EmploymentSalaryPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/EmploymentSalaryPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EmploymentSalaryPostDto'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentSalaryDto'
          description: Given when resource was successfully created.
        "400":
          content:
            application/json:
              example:
                detail: Employment salary object is missing.
                title: Employment validation error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted.
        "404":
          content:
            application/json:
              example:
                detail: Employment with id = 12345 not found.
                title: Employment not found error(s)
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when resource was not found
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Create a new salary (line) on a given employment. (Auth roles: EmploymentSalary_Full)"
      tags:
      - EmploymentSalaries
  /VoucherApproval:
    get:
      parameters:
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      - description: "Filter vouchers based on when it became available with timestamp\
          \ greater than the provided timestamp. Can be used as one way of getting\
          \ changes in new vouchers available sins last called.\r\nTimestamp not inclusive.\r\
          \n            \r\nVouchers sent to the integration for approval may be removed\
          \ from the list by the system, indicating they are no longer available for\
          \ approval. Utilizing the availableFromDateTimeOffset\r\nparameter allows\
          \ for retrieving new vouchers since the last call. However, it does not\
          \ provide visibility into vouchers that have been removed from the list."
        example: 2021-09-25 08:03:00.1234567 -00:00
        in: query
        name: availableFromDateTimeOffsetGreaterThan
        schema:
          format: date-time
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VoucherForApprovalDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "List the vouchers that are sent to the integration for approval. The\
        \ voucher details can be retrieved using the JournalEntryVoucher with the\
        \ corresponding voucher types. (Auth roles: VoucherApproval_Full)"
      tags:
      - VoucherApproval
  /VoucherDocumentation:
    get:
      description: Get a list of vouchers and the available filetypes.
      parameters:
      - description: Voucher identifier
        in: query
        name: id
        schema:
          format: uuid
          type: string
      - description: Voucher number
        in: query
        name: voucherNo
        schema:
          format: int64
          type: integer
      - in: query
        name: resourceParameter
        schema:
          $ref: '#/components/schemas/ResourceParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VoucherDocumentationDto'
                type: array
          description: Given when resource returned successfully
        "204":
          description: Given when there is no content to return (response body is
            empty)
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Given when request is badly formatted
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Get voucher documentation list. (Auth roles: VoucherDocumentation,VoucherDocumentation_Full)"
      tags:
      - VoucherDocumentation
    put:
      description: "The voucher must have been imported by the API to be able to insert\
        \ documentation with this service.\r\nIt is only possible to import PDF file.\
        \ The max file size is 30Mb.\r\nIt is possible to import several times. The\
        \ last import will replace the previous import.\r\nReplacements can only be\
        \ done by the same integration that imported the previous file."
      operationId: AddVoucherDocumentation
      parameters:
      - description: Identifier of the voucher the documentation should be attached
          to.
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          multipart/form-data:
            encoding:
              file:
                style: form
            schema:
              $ref: '#/components/schemas/_JournalEntryVouchers__id__VoucherPages_post_request'
        description: The PDF file you want to attach to a voucher.
      responses:
        "202":
          description: Accepted
        "204":
          description: No Content
        "400":
          content:
            application/json:
              example:
                detail: Pay item with id = 21d4ddf1-c8bf-4874-8879-b70468fa1032 not
                  found.
                title: Object(s) not found
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          description: Given when request is unauthorized (Access Token is missing
            or invalid)
        "403":
          description: Given when request is forbidden (Integration does not have
            required permission to use endpoint)
        "429":
          description: Given when request is throttled (too many requests)
        default:
          description: When request is not processed correctly a ProblemDetail object
            is returned
      summary: "Replace the documentation on a posted voucher (Auth roles: VoucherDocumentation_Full)"
      tags:
      - VoucherDocumentation
components:
  schemas:
    SendInvoiceRequestDto:
      additionalProperties: false
      description: Represents the status of a sales order.
      example:
        OverrideDueDate: 2024-09-23
        VoucherDate: 2024-08-29
        Id: 689f466d-a3f6-4c92-89d0-509d4a506919
        EmailAddress: invoice@example.com
        DeliveryType: PdfByEmail
      properties:
        DeliveryType:
          $ref: '#/components/schemas/SendInvoiceDeliveryType'
        EmailAddress:
          description: "The e-mail address used for delivery by e-mail.\r\nIf not\
            \ set in the request, the customers default invoice email address will\
            \ be used.\r\nEmail address will be used as a fallback delivery method\
            \ and should be provided when using DeliveryType Auto."
          example: invoice@example.com
          nullable: true
          type: string
        Id:
          description: The id of the sales order.
          example: 689f466d-a3f6-4c92-89d0-509d4a506919
          format: uuid
          readOnly: true
          type: string
        OverrideDueDate:
          description: "Override the due date of the invoice.\r\nIf not set, the due\
            \ date will be determined by the payment term of the sales order."
          example: 2024-09-23
          format: date
          nullable: true
          type: string
        VoucherDate:
          description: "The date the invoice voucher will get. If not provided, the\
            \ voucher date will be set to the current date.\r\nThis represents the\
            \ date of the voucher and the document date of the invoice (ie. the invoice\
            \ date)."
          example: 2024-08-29
          format: date
          nullable: true
          type: string
      type: object
    SendInvoiceDeliveryType:
      description: "The available delivery types for the send request.\r\nAuto is\
        \ set by default, if a delivery type is not provided in the request.<p>Members:</p><ul><li><i>PdfByEmail</i>\
        \ - Invoice will be delivered to the e-mail address supplied in the send request.</li><li><i>PdfPrintForDownload</i>\
        \ - The invoice will be posted and a pdf generated, but take note that no\
        \ actual delivery takes place to the end customer.\n            The integrating\
        \ party need to retrieve the pdf using the Blob endpoint, and ensure delivery\
        \ of the invoice document to the end customer.</li><li><i>Auto</i> - The system\
        \ will automatically identify whether the end customer can receive invoices\
        \ by EHF, eFaktura, AvtaleGiro (or in special cases Factoring or External\
        \ delivery), and send electronically if possible.\n            If not, the\
        \ invoice will be delivered as pdf by e-mail, to the supplied e-mail address\
        \ in the send request.</li></ul>"
      enum:
      - PdfByEmail
      - PdfPrintForDownload
      - Auto
      nullable: true
      type: string
    ProblemDetails:
      additionalProperties: {}
      example:
        Status: 0
        Type: Type
        Instance: Instance
        Title: Title
        Detail: Detail
      properties:
        Detail:
          nullable: true
          type: string
        Instance:
          nullable: true
          type: string
        Status:
          format: int32
          nullable: true
          type: integer
        Title:
          nullable: true
          type: string
        Type:
          nullable: true
          type: string
      type: object
    SendInvoiceRequestPostDto:
      additionalProperties: false
      description: Post DTO for sending an invoice.
      example:
        OverrideDueDate: 2024-09-23
        VoucherDate: 2024-08-29
        EmailAddress: invoice@example.com
        DeliveryType: PdfByEmail
      properties:
        DeliveryType:
          $ref: '#/components/schemas/SendInvoiceDeliveryType'
        EmailAddress:
          description: "The e-mail address used for delivery by e-mail.\r\nIf not\
            \ set in the request, the customers default invoice email address will\
            \ be used.\r\nEmail address will be used as a fallback delivery method\
            \ and should be provided when using DeliveryType Auto."
          example: invoice@example.com
          nullable: true
          type: string
        OverrideDueDate:
          description: "Override the due date of the invoice.\r\nIf not set, the due\
            \ date will be determined by the payment term of the sales order."
          example: 2024-09-23
          format: date
          nullable: true
          type: string
        VoucherDate:
          description: "The date the invoice voucher will get. If not provided, the\
            \ voucher date will be set to the current date.\r\nThis represents the\
            \ date of the voucher and the document date of the invoice (ie. the invoice\
            \ date)."
          example: 2024-08-29
          format: date
          nullable: true
          type: string
      type: object
    EmploymentFtePercentageDto:
      additionalProperties: false
      description: The Employment full-time equivalent (FTE) percentage DTO contains
        properties relevant to a FTE percentage (line) on an employment relationship
        object in Go.
      example:
        FromDate: 2021-01-01
        Id: 12345
        EmployeeId: 12345
        FtePercentage: 52.45
        CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        EmploymentId: 12345
        LastChangedDateTimeOffset: 2021-09-30T09:33:00.1234567Z
      properties:
        CreatedDateTimeOffset:
          description: The timestamp when the employment FTE percentage entity was
            created.
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        EmployeeId:
          description: The identifier of the employee the employment belongs to.
          example: 12345
          format: int64
          readOnly: true
          type: integer
        EmploymentId:
          description: The id of the employment (employment relationship) the FTE
            percentage line belongs to.
          example: 12345
          format: int64
          readOnly: true
          type: integer
        FromDate:
          description: The from-date for the effect of the employment full-time equivalent
            (FTE) percentage.
          example: 2021-01-01
          format: date
          nullable: true
          type: string
        FtePercentage:
          description: "The percentage of full-time equivalent (FTE) employment.\r\
            \nThe value should be between 0 and 100 (reflects as 0% or 100% in the\
            \ GUI)."
          example: 52.45
          format: double
          nullable: true
          type: number
        Id:
          description: The id of the employment FTE percentage (line).
          example: 12345
          format: int64
          readOnly: true
          type: integer
        LastChangedDateTimeOffset:
          description: The timestamp when the employment FTE percentage entity was
            last changed.
          example: 2021-09-30T09:33:00.1234567Z
          format: date-time
          readOnly: true
          type: string
      type: object
    ResourceParameters:
      additionalProperties: false
      description: Structure containing various resource-filter options
      properties:
        Fields:
          description: Define desired fields that should be returned in Json (All
            fields by default).
          example: ""
          nullable: true
          type: string
        MaxPageSize:
          description: The maximum amount of objects that can be return in a Page
            (20 000 by default).
          example: 20000
          format: int32
          readOnly: true
          type: integer
        OrderBy:
          description: "Define fields to order by, and if it should order asc (default)\
            \ or desc."
          example: ""
          nullable: true
          type: string
        PageNumber:
          description: The desired page to return.
          example: 2
          format: int32
          type: integer
        PageSize:
          description: The amount of objects to return in a Page (5000 by default).
            Not allowed to be larger than MaxPageSize.
          example: 5000
          format: int32
          type: integer
        UseDatabaseValidation:
          description: "If set to true, all relevant filter-values will be validated\
            \ against the database. NOTE: This will make the api-call much slower,\
            \ but only for the initial request, as the validation-results are cached.\
            \ Useful for debugging/support purposes."
          type: boolean
      type: object
    EmploymentFtePercentagePostDto:
      additionalProperties: false
      description: The Employment full-time equivalent (FTE) percentage post DTO contains
        all properties relevant to creating a new full-time equivalent (FTE) percentage
        (line) on an employment relationship object in Go.
      example:
        FromDate: 2021-01-01
        FtePercentage: 52.45
      properties:
        FromDate:
          description: The from-date for the effect of the employment full-time equivalent
            (FTE) percentage.
          example: 2021-01-01
          format: date
          nullable: true
          type: string
        FtePercentage:
          description: "The percentage of full-time equivalent (FTE) employment.\r\
            \nThe value should be between 0 and 100 (reflects as 0% or 100% in the\
            \ GUI)."
          example: 52.45
          format: double
          nullable: true
          type: number
      required:
      - FromDate
      - FtePercentage
      type: object
    ClientIntegrationInformationDto:
      additionalProperties: false
      description: Detailed information about the current client integration.
      example:
        InvalidPrivileges:
        - InvalidPrivileges
        - InvalidPrivileges
        ValidPrivileges:
        - ValidPrivileges
        - ValidPrivileges
        ClientName: ClientName
        ActiveClientSubscriptions:
        - ActiveClientSubscriptions
        - ActiveClientSubscriptions
        ClientId: ClientId
      properties:
        ActiveClientSubscriptions:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        ClientId:
          description: Id of the client.
          nullable: true
          readOnly: true
          type: string
        ClientName:
          description: Name of the client.
          nullable: true
          readOnly: true
          type: string
        InvalidPrivileges:
          description: All invalid privileges for the integration based on the active
            Go-subscriptions for the client.
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        ValidPrivileges:
          description: All valid privileges for the integration based on the active
            Go-subscriptions for the client.
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
      type: object
    ClientContactDto:
      additionalProperties: false
      description: "Client contact is representing a contact of the client.\r\nUsually\
        \ this is the board of directors and the general manager."
      example:
        Role: Other
        Email: mail@example.com
        FirstName: Ola
        Phone: "81549300"
        YearOfBirth: "1981"
        Id: 12345
        LastName: Nordmann
      properties:
        Email:
          description: The E-mail address registered for the contact.
          example: mail@example.com
          nullable: true
          readOnly: true
          type: string
        FirstName:
          description: The first name of the contact.
          example: Ola
          nullable: true
          readOnly: true
          type: string
        Id:
          description: The Id of the contact.
          example: 12345
          format: int64
          readOnly: true
          type: integer
        LastName:
          description: The last name of the contact.
          example: Nordmann
          nullable: true
          readOnly: true
          type: string
        Phone:
          description: The phone number registered for the contact.
          example: "81549300"
          nullable: true
          readOnly: true
          type: string
        Role:
          $ref: '#/components/schemas/ClientContactPersonRole'
        YearOfBirth:
          description: The year of birth for the contact.
          example: "1981"
          nullable: true
          readOnly: true
          type: string
      type: object
    ClientContactPersonRole:
      description: "Enum representing the different roles client contact persons can\
        \ have.<p>Members:</p><ul><li><i>Other</i> - Other role.</li><li><i>GeneralManager</i>\
        \ - General manager role. (Norwegian: Daglig leder)</li><li><i>ChairmanOfTheBoard</i>\
        \ - Chairman of the board role. (Norwegian: Styreleder)</li><li><i>BoardMember</i>\
        \ - Board member role. (Norwegian: Styremedlem)</li></ul>"
      enum:
      - Other
      - GeneralManager
      - ChairmanOfTheBoard
      - BoardMember
      nullable: true
      type: string
    InitiateOnboardingResponseDto:
      additionalProperties: false
      description: The initiate onboarding response DTO contains properties necessary
        for (continuing) the onboarding processes in external system.
      example:
        ValidUntilDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        TemporaryUrl: http://identity.poweroffice.net/ApiAuthV2?token=iQcF9czVruLZQbhXyMTt7a11IyTDwZEwU1MifUbYN5RTy4I6sfoOX3HM2u5huwc7hz7SqRTLMIKkuiktiU1bWglYJd48uVv5QIZe2lhqPSGxJBQMMn9yTGWzn6I8BqKK
      properties:
        TemporaryUrl:
          description: The temporary Url to be used in the process of user authentication
            and user authorization of onboarding the integrated application.
          example: http://identity.poweroffice.net/ApiAuthV2?token=iQcF9czVruLZQbhXyMTt7a11IyTDwZEwU1MifUbYN5RTy4I6sfoOX3HM2u5huwc7hz7SqRTLMIKkuiktiU1bWglYJd48uVv5QIZe2lhqPSGxJBQMMn9yTGWzn6I8BqKK
          format: uri
          nullable: true
          readOnly: true
          type: string
        ValidUntilDateTimeOffset:
          description: The timestamp of when the temporary Url will expire.
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
      type: object
    InitiateOnboardingPostDto:
      additionalProperties: false
      description: The initiate onboarding post DTO contains properties necessary
        for initiating the onboarding processes in GO.
      example:
        ApplicationKey: 1ed94aa6-b176-4c89-baa9-da3d240ac1e9
        ClientOrganizationNo: "980386465"
        RedirectUri: https://auth.v2.integration.io/redirect
      properties:
        ApplicationKey:
          description: "The applicationkey, representing the integrated application\
            \ that is to be onboarded on client(s).\r\nMust be set in the POST call\
            \ initiating the onboarding."
          example: 1ed94aa6-b176-4c89-baa9-da3d240ac1e9
          format: uuid
          type: string
        ClientOrganizationNo:
          description: "The organization number of the PowerOffice Go client that\
            \ are to onboard the integrated application.\r\nIf set, only this client\
            \ will be presented to the user that must authorize the integration.\r\
            \nIf not set, the user will be presented a list of all clients the user\
            \ have acccess to onboard, enabling onboarding of multiple clients in\
            \ one process."
          example: "980386465"
          nullable: true
          type: string
        RedirectUri:
          description: "The redirect uri we will route to if the user successfully\
            \ authorize onboarding on client(s).\r\nThe uri need to be whitelisted\
            \ by the api team before use, and this must be done separately for the\
            \ demo and production environments.\r\nThe system validate the domain,\
            \ sub-domain and path used, but any parameters beyond that are ignored\
            \ (and as such, any \"?to=\" variants can be used as the integrating party\
            \ see fit).\r\nThe uri can be set to localhost in test phases."
          example: https://auth.v2.integration.io/redirect
          format: uri
          nullable: true
          type: string
      type: object
    EmploymentFixedSalaryDto:
      additionalProperties: false
      description: The Employment Fixed Salary DTO contains properties relevant to
        a fixed salary (line) on an employment relationship object in Go.
      example:
        AccountId: 12345
        IsActive: true
        DeductionType: Amount
        CommuterPersonType: ForeignCommuterWithTaxCardWithoutStandardDeduction
        CarRegistrationNo: YE79309
        MaxAmount: 150
        HomeWorkKilometers: 99
        VatCodeId: 12345
        Number: 12
        MinAmount: 99
        PrivateDrivenKilometers: 99
        SupplierBankAccountId: 12345
        WorkDriveExceedsKilometerLimit: true
        EmployeeId: 12345
        IncomeYear: 2023
        PayItemId: 21d4ddf1-c8bf-4874-8879-b70468fa1032
        Cid: "9235400011927001"
        Comment: Good job!
        OppositeAccountId: 12345
        Rate: 250.99
        Amount: 99
        ProjectId: 12345
        Quantity: 12.21
        StartAmount: 99.99
        CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        TaxRule: Ordinary
        CarListPrice: 99
        IsCarPool: true
        TaxDeduction: NoTax
        FromDate: 2022-07-01
        ToDate: 2022-07-31
        UseRemittance: true
        DepartmentId: 12345
        Id: f575b4b0-55be-4b56-b01f-44b204df82c5
        CarRegistrationDate: 2022-07-01
        EmploymentId: 12345
        SupplierAccountId: 12345
        LastChangedDateTimeOffset: 2021-09-30T09:33:00.1234567Z
        MemberNo: "12345"
      properties:
        AccountId:
          description: "The identifier of the account this salary line should be posted\
            \ on.\r\nSub-ledger accounts can also be referenced in this field.\r\n\
            If not set, the account from the pay item will be used.\r\nIf set, any\
            \ account set on the pay item will be overridden for this given salary\
            \ line."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Amount:
          description: "The amount of the salary line, in the client currency.\r\n\
            The relevance of setting amount depend on the pay item set.\r\nFor a pay\
            \ item with a quantity and rate, the quantity and rate should be provided\
            \ as drivers, and the system will calculate the amount."
          example: 99
          format: double
          nullable: true
          type: number
        CarListPrice:
          description: "The list price of the car, in the client currency.\r\nRelevant\
            \ only for pay items with free car/work car processing types, where the\
            \ list price is required."
          example: 99
          format: double
          nullable: true
          type: number
        CarRegistrationDate:
          description: "The registration date of the car.\r\nRelevant to set only\
            \ for certain pay items with car/work car related processing types."
          example: 2022-07-01
          format: date
          nullable: true
          type: string
        CarRegistrationNo:
          description: "The registration number of the car.\r\nRelevant to set only\
            \ for certain pay items with car/work car related processing types."
          example: YE79309
          nullable: true
          type: string
        Cid:
          description: "The CID number (norwegian: KID), relevant if UseRemittance\
            \ and SupplierBankAccountId is set.\r\nOnly relevant to set for pay items\
            \ with the following processing types: TradeUnionDeduction and AttachmentOfEarnings."
          example: "9235400011927001"
          nullable: true
          type: string
        Comment:
          description: "A comment to the salary line.\r\nWill be shown on the employee\
            \ payslip if set."
          example: Good job!
          nullable: true
          type: string
        CommuterPersonType:
          $ref: '#/components/schemas/CommuterPersonType'
        CreatedDateTimeOffset:
          description: The timestamp when the employment fixed salary entity was created.
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        DeductionType:
          $ref: '#/components/schemas/DeductionType'
        DepartmentId:
          description: "The department identifier.\r\nRelevant to set if the salary\
            \ line should be posted with a given department dimension.\r\nIf not set,\
            \ the department will inherit the department set on the employee if/when\
            \ the salary line is included in a payroll."
          example: 12345
          format: int64
          nullable: true
          type: integer
        EmployeeId:
          description: The identifier of the employee the employment belongs to.
          example: 12345
          format: int64
          readOnly: true
          type: integer
        EmploymentId:
          description: The id of the employment (employment relationship) the fixed
            salary line belongs to.
          example: 12345
          format: int64
          readOnly: true
          type: integer
        FromDate:
          description: "The from-date.\r\nRelevant to set only for certain pay items\
            \ that have deduction processing types, and if the deduction is relevant\
            \ only for a certain time period."
          example: 2022-07-01
          format: date
          nullable: true
          type: string
        HomeWorkKilometers:
          description: "The number of kilometers driven between home and work.\r\n\
            Relevant only for pay items with the processing type FreeCarOutsideStandardRule."
          example: 99
          format: double
          nullable: true
          type: number
        Id:
          description: The id of the employment fixed salary (line).
          example: f575b4b0-55be-4b56-b01f-44b204df82c5
          format: uuid
          readOnly: true
          type: string
        IncomeYear:
          description: "The income year.\r\nRelevant only for pay items with certain\
            \ processing types, such as holiday pay."
          example: 2023
          format: int32
          nullable: true
          type: integer
        IsActive:
          description: "Value indicating whether this (fixed) salary line should be\
            \ included when creating a new payroll.\r\nIf true then this (fixed) salary\
            \ line will be included in the payroll.\r\nDefaults to true if not set."
          example: true
          nullable: true
          type: boolean
        IsCarPool:
          description: "Value indicating whether this his salary line relate to a\
            \ car-pool or not.\r\nOnly relevant to set for pay items with the processing\
            \ type FreeCarStandardRule or FreeCarOther.\r\nWith these two processing\
            \ types, either car-pool or car registration number must be set.\r\nDefaults\
            \ to false if not set."
          example: true
          nullable: true
          type: boolean
        LastChangedDateTimeOffset:
          description: The timestamp when the employment fixed salary entity was last
            changed.
          example: 2021-09-30T09:33:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        MaxAmount:
          description: "The maximum amount when calculating trade union deduction.\r\
            \nRelevant only for pay items with the processing type TradeUnionDeduction."
          example: 150
          format: double
          nullable: true
          type: number
        MemberNo:
          description: "The member number of the trade union or pension scheme.\r\n\
            Relevant only for pay items with the following processing types: TradeUnionDeduction,\
            \ PensionDeduction or PensionDeductionUnlimited."
          example: "12345"
          nullable: true
          type: string
        MinAmount:
          description: "The minimum amount when calculating trade union deduction.\r\
            \nRelevant only for pay items with the processing type TradeUnionDeduction."
          example: 99
          format: double
          nullable: true
          type: number
        Number:
          description: "The number field.\r\nOnly relevant for pay items with certain\
            \ processing types that require an input of the number of times an event\
            \ have occurred.\r\nFor example the number of journeys for a commuter,\
            \ if the processing type is CommuterWithNumberOfJourneys."
          example: 12
          format: int32
          nullable: true
          type: integer
        OppositeAccountId:
          description: "The identifier of the opposite account this salary line should\
            \ be posted on.\r\nSub-ledger accounts can also be referenced in this\
            \ field.\r\nIf not set, the opposite account from the pay item will be\
            \ used.\r\nIf set, any opposite account set on the pay item will be overridden\
            \ for this given salary line."
          example: 12345
          format: int64
          nullable: true
          type: integer
        PayItemId:
          description: The identifier of the pay item.
          example: 21d4ddf1-c8bf-4874-8879-b70468fa1032
          format: uuid
          nullable: true
          type: string
        PrivateDrivenKilometers:
          description: "The number of kilometers driven with private use.\r\nRelevant\
            \ only for pay items with the processing type FreeCarOutsideStandardRule\
            \ or WorkCarKilometers."
          example: 99
          format: double
          nullable: true
          type: number
        ProjectId:
          description: "The project identifier.\r\nRelevant to set if the salary line\
            \ should be posted with a given project dimension."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Quantity:
          description: "The quantity of the salary line.\r\nThe relevance of setting\
            \ quantity and the interpretation of unit depend on the pay item set.\r\
            \nFor a pay items defined with a quantity related processing types, the\
            \ quantity should be provided as the driver."
          example: 12.21
          format: double
          nullable: true
          type: number
        Rate:
          description: "The rate of the salary line.\r\nThe relevance of setting rate\
            \ depend on the pay item set.\r\nFor pay items defined with a variable\
            \ rate, the rate should be provided as the driver.\r\nFor pay items with\
            \ fixed rates, the rate is usually set on the pay item and will be overridden\
            \ if set on a salary line.\r\nAlso note that hourly wage rates are usually\
            \ calculated form the employment salary, and not needed to set on salary\
            \ lines as the system automatically calculates the rate on the payroll."
          example: 250.99
          format: double
          nullable: true
          type: number
        StartAmount:
          description: "The start amount of the salary line deduction, in the client\
            \ currency.\r\nRelevant only for pay items with the following deduction\
            \ processing types: DeductionWithBalance, AttachmentOfEarnings and AttachmentOfEarningsTax.\r\
            \nIf not set on a salary line with a pay item of one of these processing\
            \ types, the deduction will repeat until stopped.\r\nIf set, the deduction\
            \ will run until the start amount is fully covered."
          example: 99.99
          format: double
          nullable: true
          type: number
        SupplierAccountId:
          description: "The identifier of the supplier sub-ledger account to post\
            \ deductions.\r\nOnly relevant to set for pay items with the following\
            \ processing types: TradeUnionDeduction and AttachmentOfEarnings."
          example: 12345
          format: int64
          nullable: true
          type: integer
        SupplierBankAccountId:
          description: "The identifier of the supplier bank account.\r\nRelevant only\
            \ if UseRemittance is true, and for pay items with the following processing\
            \ types: TradeUnionDeduction and AttachmentOfEarnings."
          example: 12345
          format: int64
          nullable: true
          type: integer
        TaxDeduction:
          $ref: '#/components/schemas/TaxDeductionType'
        TaxRule:
          $ref: '#/components/schemas/TaxRuleType'
        ToDate:
          description: "The to-date.\r\nRelevant to set only for certain pay items\
            \ that have deduction processing types, and if the deduction is relevant\
            \ only for a certain time period."
          example: 2022-07-31
          format: date
          nullable: true
          type: string
        UseRemittance:
          description: "Value indicating whether to use remittance or not.\r\nOnly\
            \ relevant to set for pay items with the following processing types: TradeUnionDeduction\
            \ and AttachmentOfEarnings.\r\nDefaults to true if not set."
          example: true
          nullable: true
          type: boolean
        VatCodeId:
          description: "The VAT code identifier.\r\nRelevant to set if the salary\
            \ line is set with a pay item that have a processing type related to expense\
            \ refund subject of VAT."
          example: 12345
          format: int32
          nullable: true
          type: integer
        WorkDriveExceedsKilometerLimit:
          description: "Value indicating whether this his salary line relate to work\
            \ drive that exceeds the kilometer limit or not.\r\nRelevant only for\
            \ pay items with the processing type FreeCarStandardRule.\r\nDefault to\
            \ false if not set."
          example: true
          nullable: true
          type: boolean
      type: object
    CommuterPersonType:
      description: "Enum defining the commuter person type.<p>Members:</p><ul><li><i>ForeignCommuterWithTaxCardWithoutStandardDeduction</i>\
        \ - Foreign commuter with tax card, without standard deduction.</li><li><i>ForeignerWithResidenceInNorway</i>\
        \ - Foreign commuter with residence in Norway.</li></ul>"
      enum:
      - ForeignCommuterWithTaxCardWithoutStandardDeduction
      - ForeignerWithResidenceInNorway
      nullable: true
      type: string
    DeductionType:
      description: Enum defining the deduction type.<p>Members:</p><ul><li><i>Amount</i>
        - Deduct a fixed amount.</li><li><i>Percent</i> - Deduct a percentage of the
        start amount.</li></ul>
      enum:
      - Amount
      - Percent
      nullable: true
      type: string
    TaxDeductionType:
      description: Enum defining tax deduction type of a pay item.<p>Members:</p><ul><li><i>NoTax</i>
        - No tax deduction.</li><li><i>Percentage</i> - Tax deduction based on percentage.</li><li><i>TaxTable</i>
        - Tax deduction according to a tax table.</li></ul>
      enum:
      - NoTax
      - Percentage
      - TaxTable
      nullable: true
      type: string
    TaxRuleType:
      description: "Enum defining tax rule of an employment.<p>Members:</p><ul><li><i>Ordinary</i>\
        \ - Ordinary employment, i.e. employees working in the service of others for\
        \ pay or other remuneration.</li><li><i>Svalbard</i> - Svalbard income.</li><li><i>JanMayenAndDependencies</i>\
        \ - Jan Mayen and the Norwegian dependencies.</li><li><i>SpecialAllowanceForSeafarers</i>\
        \ - Special allowance for seafarers.</li><li><i>TaxFreeOrganisation</i> -\
        \ Tax-exempt organisation.</li></ul>"
      enum:
      - Ordinary
      - Svalbard
      - JanMayenAndDependencies
      - SpecialAllowanceForSeafarers
      - TaxFreeOrganisation
      nullable: true
      type: string
    EmploymentFixedSalaryPostDto:
      additionalProperties: false
      description: The Employment Fixed Salary post DTO contains all properties relevant
        to creating a new fixed salary (line) on an employment relationship object
        in Go.
      example:
        AccountId: 12345
        IsActive: true
        DeductionType: Amount
        CommuterPersonType: ForeignCommuterWithTaxCardWithoutStandardDeduction
        CarRegistrationNo: YE79309
        MaxAmount: 150
        HomeWorkKilometers: 99
        VatCodeId: 12345
        Number: 12
        MinAmount: 99
        PrivateDrivenKilometers: 99
        SupplierBankAccountId: 12345
        WorkDriveExceedsKilometerLimit: true
        IncomeYear: 2023
        PayItemId: 21d4ddf1-c8bf-4874-8879-b70468fa1032
        Cid: "9235400011927001"
        Comment: Good job!
        OppositeAccountId: 12345
        Rate: 250.99
        Amount: 99
        ProjectId: 12345
        Quantity: 12.21
        StartAmount: 99.99
        TaxRule: Ordinary
        CarListPrice: 99
        IsCarPool: true
        TaxDeduction: NoTax
        FromDate: 2022-07-01
        ToDate: 2022-07-31
        UseRemittance: true
        DepartmentId: 12345
        CarRegistrationDate: 2022-07-01
        SupplierAccountId: 12345
        MemberNo: "12345"
      properties:
        AccountId:
          description: "The identifier of the account this salary line should be posted\
            \ on.\r\nSub-ledger accounts can also be referenced in this field.\r\n\
            If not set, the account from the pay item will be used.\r\nIf set, any\
            \ account set on the pay item will be overridden for this given salary\
            \ line."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Amount:
          description: "The amount of the salary line, in the client currency.\r\n\
            The relevance of setting amount depend on the pay item set.\r\nFor a pay\
            \ item with a quantity and rate, the quantity and rate should be provided\
            \ as drivers, and the system will calculate the amount."
          example: 99
          format: double
          nullable: true
          type: number
        CarListPrice:
          description: "The list price of the car, in the client currency.\r\nRelevant\
            \ only for pay items with free car/work car processing types, where the\
            \ list price is required."
          example: 99
          format: double
          nullable: true
          type: number
        CarRegistrationDate:
          description: "The registration date of the car.\r\nRelevant to set only\
            \ for certain pay items with car/work car related processing types."
          example: 2022-07-01
          format: date
          nullable: true
          type: string
        CarRegistrationNo:
          description: "The registration number of the car.\r\nRelevant to set only\
            \ for certain pay items with car/work car related processing types."
          example: YE79309
          nullable: true
          type: string
        Cid:
          description: "The CID number (norwegian: KID), relevant if UseRemittance\
            \ and SupplierBankAccountId is set.\r\nOnly relevant to set for pay items\
            \ with the following processing types: TradeUnionDeduction and AttachmentOfEarnings."
          example: "9235400011927001"
          nullable: true
          type: string
        Comment:
          description: "A comment to the salary line.\r\nWill be shown on the employee\
            \ payslip if set."
          example: Good job!
          nullable: true
          type: string
        CommuterPersonType:
          $ref: '#/components/schemas/CommuterPersonType'
        DeductionType:
          $ref: '#/components/schemas/DeductionType'
        DepartmentId:
          description: "The department identifier.\r\nRelevant to set if the salary\
            \ line should be posted with a given department dimension.\r\nIf not set,\
            \ the department will inherit the department set on the employee if/when\
            \ the salary line is included in a payroll."
          example: 12345
          format: int64
          nullable: true
          type: integer
        FromDate:
          description: "The from-date.\r\nRelevant to set only for certain pay items\
            \ that have deduction processing types, and if the deduction is relevant\
            \ only for a certain time period."
          example: 2022-07-01
          format: date
          nullable: true
          type: string
        HomeWorkKilometers:
          description: "The number of kilometers driven between home and work.\r\n\
            Relevant only for pay items with the processing type FreeCarOutsideStandardRule."
          example: 99
          format: double
          nullable: true
          type: number
        IncomeYear:
          description: "The income year.\r\nRelevant only for pay items with certain\
            \ processing types, such as holiday pay."
          example: 2023
          format: int32
          nullable: true
          type: integer
        IsActive:
          description: "Value indicating whether this (fixed) salary line should be\
            \ included when creating a new payroll.\r\nIf true then this (fixed) salary\
            \ line will be included in the payroll.\r\nDefaults to true if not set."
          example: true
          nullable: true
          type: boolean
        IsCarPool:
          description: "Value indicating whether this his salary line relate to a\
            \ car-pool or not.\r\nOnly relevant to set for pay items with the processing\
            \ type FreeCarStandardRule or FreeCarOther.\r\nWith these two processing\
            \ types, either car-pool or car registration number must be set.\r\nDefaults\
            \ to false if not set."
          example: true
          nullable: true
          type: boolean
        MaxAmount:
          description: "The maximum amount when calculating trade union deduction.\r\
            \nRelevant only for pay items with the processing type TradeUnionDeduction."
          example: 150
          format: double
          nullable: true
          type: number
        MemberNo:
          description: "The member number of the trade union or pension scheme.\r\n\
            Relevant only for pay items with the following processing types: TradeUnionDeduction,\
            \ PensionDeduction or PensionDeductionUnlimited."
          example: "12345"
          nullable: true
          type: string
        MinAmount:
          description: "The minimum amount when calculating trade union deduction.\r\
            \nRelevant only for pay items with the processing type TradeUnionDeduction."
          example: 99
          format: double
          nullable: true
          type: number
        Number:
          description: "The number field.\r\nOnly relevant for pay items with certain\
            \ processing types that require an input of the number of times an event\
            \ have occurred.\r\nFor example the number of journeys for a commuter,\
            \ if the processing type is CommuterWithNumberOfJourneys."
          example: 12
          format: int32
          nullable: true
          type: integer
        OppositeAccountId:
          description: "The identifier of the opposite account this salary line should\
            \ be posted on.\r\nSub-ledger accounts can also be referenced in this\
            \ field.\r\nIf not set, the opposite account from the pay item will be\
            \ used.\r\nIf set, any opposite account set on the pay item will be overridden\
            \ for this given salary line."
          example: 12345
          format: int64
          nullable: true
          type: integer
        PayItemId:
          description: The identifier of the pay item.
          example: 21d4ddf1-c8bf-4874-8879-b70468fa1032
          format: uuid
          nullable: true
          type: string
        PrivateDrivenKilometers:
          description: "The number of kilometers driven with private use.\r\nRelevant\
            \ only for pay items with the processing type FreeCarOutsideStandardRule\
            \ or WorkCarKilometers."
          example: 99
          format: double
          nullable: true
          type: number
        ProjectId:
          description: "The project identifier.\r\nRelevant to set if the salary line\
            \ should be posted with a given project dimension."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Quantity:
          description: "The quantity of the salary line.\r\nThe relevance of setting\
            \ quantity and the interpretation of unit depend on the pay item set.\r\
            \nFor a pay items defined with a quantity related processing types, the\
            \ quantity should be provided as the driver."
          example: 12.21
          format: double
          nullable: true
          type: number
        Rate:
          description: "The rate of the salary line.\r\nThe relevance of setting rate\
            \ depend on the pay item set.\r\nFor pay items defined with a variable\
            \ rate, the rate should be provided as the driver.\r\nFor pay items with\
            \ fixed rates, the rate is usually set on the pay item and will be overridden\
            \ if set on a salary line.\r\nAlso note that hourly wage rates are usually\
            \ calculated form the employment salary, and not needed to set on salary\
            \ lines as the system automatically calculates the rate on the payroll."
          example: 250.99
          format: double
          nullable: true
          type: number
        StartAmount:
          description: "The start amount of the salary line deduction, in the client\
            \ currency.\r\nRelevant only for pay items with the following deduction\
            \ processing types: DeductionWithBalance, AttachmentOfEarnings and AttachmentOfEarningsTax.\r\
            \nIf not set on a salary line with a pay item of one of these processing\
            \ types, the deduction will repeat until stopped.\r\nIf set, the deduction\
            \ will run until the start amount is fully covered."
          example: 99.99
          format: double
          nullable: true
          type: number
        SupplierAccountId:
          description: "The identifier of the supplier sub-ledger account to post\
            \ deductions.\r\nOnly relevant to set for pay items with the following\
            \ processing types: TradeUnionDeduction and AttachmentOfEarnings."
          example: 12345
          format: int64
          nullable: true
          type: integer
        SupplierBankAccountId:
          description: "The identifier of the supplier bank account.\r\nRelevant only\
            \ if UseRemittance is true, and for pay items with the following processing\
            \ types: TradeUnionDeduction and AttachmentOfEarnings."
          example: 12345
          format: int64
          nullable: true
          type: integer
        TaxDeduction:
          $ref: '#/components/schemas/TaxDeductionType'
        TaxRule:
          $ref: '#/components/schemas/TaxRuleType'
        ToDate:
          description: "The to-date.\r\nRelevant to set only for certain pay items\
            \ that have deduction processing types, and if the deduction is relevant\
            \ only for a certain time period."
          example: 2022-07-31
          format: date
          nullable: true
          type: string
        UseRemittance:
          description: "Value indicating whether to use remittance or not.\r\nOnly\
            \ relevant to set for pay items with the following processing types: TradeUnionDeduction\
            \ and AttachmentOfEarnings.\r\nDefaults to true if not set."
          example: true
          nullable: true
          type: boolean
        VatCodeId:
          description: "The VAT code identifier.\r\nRelevant to set if the salary\
            \ line is set with a pay item that have a processing type related to expense\
            \ refund subject of VAT."
          example: 12345
          format: int32
          nullable: true
          type: integer
        WorkDriveExceedsKilometerLimit:
          description: "Value indicating whether this his salary line relate to work\
            \ drive that exceeds the kilometer limit or not.\r\nRelevant only for\
            \ pay items with the processing type FreeCarStandardRule.\r\nDefault to\
            \ false if not set."
          example: true
          nullable: true
          type: boolean
      required:
      - PayItemId
      type: object
    UserDto:
      additionalProperties: false
      description: The available properties for users in Go.
      example:
        Status: Active
        FirstName: Espen
        AccessRoleId: 09ab6bcf-4219-4149-8283-6b6a7342bfd9
        FromDate: 2024-01-01
        ToDate: 2024-01-31
        Id: ee373540-ca8d-4562-8fb6-6fb52de47722
        LastName: Askeladd
        EmailAddress: abc@test.yxz
      properties:
        AccessRoleId:
          description: "The access role id the user have on the client.\r\nNote: Administrator\
            \ Role always has id: aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"
          example: 09ab6bcf-4219-4149-8283-6b6a7342bfd9
          format: uuid
          nullable: true
          readOnly: true
          type: string
        EmailAddress:
          description: The e-mail address of the user.
          example: abc@test.yxz
          nullable: true
          readOnly: true
          type: string
        FirstName:
          description: The first name of the user.
          example: Espen
          nullable: true
          readOnly: true
          type: string
        FromDate:
          description: "From date, inclusive.\r\nThe user will have access to the\
            \ client from this date.\r\nIf null, the from date is undefined."
          example: 2024-01-01
          format: date
          nullable: true
          readOnly: true
          type: string
        Id:
          description: "The identifier of the user.\r\nThis identifier is unique and\
            \ assigned by PowerOffice Go when a new user is created.\r\nWill be empty\
            \ (null) if the user is invited and has not yet accepted. (Status = InvitePending)"
          example: ee373540-ca8d-4562-8fb6-6fb52de47722
          format: uuid
          nullable: true
          readOnly: true
          type: string
        LastName:
          description: The last name of the user.
          example: Askeladd
          nullable: true
          readOnly: true
          type: string
        Status:
          $ref: '#/components/schemas/UserStatus'
        ToDate:
          description: "To date, inclusive.\r\nThe user will have access to the client\
            \ until and including this date.\r\nAfterwards, the user is deactivated\
            \ on the client.\r\nIf null, the to date is undefined and unrestricted."
          example: 2024-01-31
          format: date
          nullable: true
          readOnly: true
          type: string
      type: object
    UserStatus:
      description: |-
        Enum defining the status of an user.<p>Members:</p><ul><li><i>Active</i> - The user have access to the client.</li><li><i>Inactive</i> - the user exist on the client but do not have access as the user have been deactivated.</li><li><i>InvitePending</i> - Invite pending, the user have been invited to the client but is not yet active.
                        This state can only be set by the system as a result of an invitation.</li></ul>
      enum:
      - Active
      - Inactive
      - InvitePending
      nullable: true
      type: string
    EmploymentLeaveDto:
      additionalProperties: false
      description: The Employment Leave DTO contains properties relevant to a leave
        (line) on an employment relationship object in Go.
      example:
        AdjustFixedWage: false
        EndedAndReported: false
        TypeOfLeave: EducationalNonStatutory
        ReportingId: POGO_123abc
        ExcludeEmployeeFromPayroll: false
        EndDate: 2021-01-10
        CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        StartDate: 2021-01-01
        LeavePercentage: 58.45
        Id: f575b4b0-55be-4b56-b01f-44b204df82c5
        EmployeeId: 12345
        EmploymentId: 12345
        LastChangedDateTimeOffset: 2021-09-30T09:33:00.1234567Z
      properties:
        AdjustFixedWage:
          description: "Value indicating whether the fixed wage should be adjusted\
            \ by the leave percentage.\r\nIf true then this leave percentage will\
            \ be used to adjust the fixed wage."
          example: false
          nullable: true
          type: boolean
        CreatedDateTimeOffset:
          description: The timestamp when the employment leave entity was created.
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        EmployeeId:
          description: The identifier of the employee the employment belongs to.
          example: 12345
          format: int64
          readOnly: true
          type: integer
        EmploymentId:
          description: The id of the employment (employment relationship) the leave
            line belongs to.
          example: 12345
          format: int64
          readOnly: true
          type: integer
        EndDate:
          description: The end date of the leave.
          example: 2021-01-10
          format: date
          nullable: true
          type: string
        EndedAndReported:
          description: "Value is set true if and when the leave is ended and the reporting\
            \ (a-melding) is done and finalized.\r\nIf true, the leave will not be\
            \ included in future reporting (a-melding)."
          example: false
          nullable: true
          type: boolean
        ExcludeEmployeeFromPayroll:
          description: Value is set true if the employee should be excluded from payroll's
            while the leave is active.
          example: false
          nullable: true
          type: boolean
        Id:
          description: The id of the employment leave (line).
          example: f575b4b0-55be-4b56-b01f-44b204df82c5
          format: uuid
          readOnly: true
          type: string
        LastChangedDateTimeOffset:
          description: The timestamp when the employment leave entity was last changed.
          example: 2021-09-30T09:33:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        LeavePercentage:
          description: "The percentage of leave of absence.\r\n100 represent fully\
            \ absent,\r\n50 represent 50% absence from the current employment."
          example: 58.45
          format: double
          nullable: true
          type: number
        ReportingId:
          description: "The id of the leave that will be reported.\r\n If not set,\
            \ Go will assign an id.\r\n Not to be confused with the Id property."
          example: POGO_123abc
          nullable: true
          type: string
        StartDate:
          description: The start date of the leave.
          example: 2021-01-01
          format: date
          nullable: true
          type: string
        TypeOfLeave:
          $ref: '#/components/schemas/LeaveType'
      type: object
    LeaveType:
      description: The type of leave.<p>Members:</p><ul><li><i>EducationalNonStatutory</i>
        - Educational leave (Non-statutory).</li><li><i>EducationalStatutory</i> -
        Educational leave (Statutory).</li><li><i>Maternity</i> - Leave with parental
        benefits.</li><li><i>Military</i> - Leave for military service.</li><li><i>OtherNonStatutory</i>
        - Other non-statutory leaves.</li><li><i>OtherStatutory</i> - Other statutory
        leaves.</li></ul>
      enum:
      - EducationalNonStatutory
      - EducationalStatutory
      - Maternity
      - Military
      - OtherNonStatutory
      - OtherStatutory
      nullable: true
      type: string
    EmploymentLeavePostDto:
      additionalProperties: false
      description: The Employment Leave post DTO contains all properties relevant
        to creating a new leave (line) on an employment relationship object in Go.
      example:
        StartDate: 2021-01-01
        AdjustFixedWage: false
        EndedAndReported: false
        LeavePercentage: 58.45
        TypeOfLeave: EducationalNonStatutory
        ReportingId: POGO_123abc
        ExcludeEmployeeFromPayroll: false
        EndDate: 2021-01-10
      properties:
        AdjustFixedWage:
          description: "Value indicating whether the fixed wage should be adjusted\
            \ by the leave percentage.\r\nIf true then this leave percentage will\
            \ be used to adjust the fixed wage."
          example: false
          nullable: true
          type: boolean
        EndDate:
          description: The end date of the leave.
          example: 2021-01-10
          format: date
          nullable: true
          type: string
        EndedAndReported:
          description: "Value is set true if and when the leave is ended and the reporting\
            \ (a-melding) is done and finalized.\r\nIf true, the leave will not be\
            \ included in future reporting (a-melding)."
          example: false
          nullable: true
          type: boolean
        ExcludeEmployeeFromPayroll:
          description: Value is set true if the employee should be excluded from payroll's
            while the leave is active.
          example: false
          nullable: true
          type: boolean
        LeavePercentage:
          description: "The percentage of leave of absence.\r\n100 represent fully\
            \ absent,\r\n50 represent 50% absence from the current employment."
          example: 58.45
          format: double
          nullable: true
          type: number
        ReportingId:
          description: "The id of the leave that will be reported.\r\n If not set,\
            \ Go will assign an id.\r\n Not to be confused with the Id property."
          example: POGO_123abc
          nullable: true
          type: string
        StartDate:
          description: The start date of the leave.
          example: 2021-01-01
          format: date
          nullable: true
          type: string
        TypeOfLeave:
          $ref: '#/components/schemas/LeaveType'
      required:
      - LeavePercentage
      - StartDate
      - TypeOfLeave
      type: object
    SupplierDto:
      additionalProperties: false
      description: The supplier DTO contains all properties relevant to a supplier-object
        in Go
      example:
        OrganizationNumber: "980386465"
        IsActive: true
        ExternalImportReference: abc123-def456
        Name: Ford Motor
        CurrencyCode: NOK
        Number: 20010
        IsPerson: false
        Payout: true
        ContactCreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        DateOfBirth: 2003-07-15
        LegalName: Ford Motor Company AS
        MailAddress:
          AddressLine2: "Att: Ola Nordmann"
          AddressLine1: Postboks 404
          ZipCode: "0161"
          City: Oslo
          Id: 12345
          CountryCode: "NO"
          ExternalCode: 123ABC
          LastChangedDateTimeOffset: 2022-07-11T12:46:59.1234567Z
        ContactGroupIds:
        - 0
        - 0
        FirstName: Henry
        SubledgerAccountId: 12345
        WebsiteUrl: www.supplierswebsite.net
        ExternalNumber: 12345
        EmailAddress: abc@test.yxz
        IsArchived: false
        PhoneNumber: "+4712345678"
        Id: 12345
        LastName: Ford
        SupplierCreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        CreatedFromImportJournalId: 21d4ddf1-c8bf-4874-8879-b70468fa1032
        LastChangedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
      properties:
        ContactCreatedDateTimeOffset:
          description: "The timestamp the contact entity was created.\r\nThis might\
            \ differ from the supplier created timestamp, if the contact was first\
            \ created as a customer/employee."
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        ContactGroupIds:
          description: "The contact group ids the current contact is part of, or sets\
            \ contact group id you want to add this contact to."
          items:
            format: int64
            type: integer
          nullable: true
          type: array
        CreatedFromImportJournalId:
          description: "The created from import journal identifier (guid).\r\nIf the\
            \ supplier was created from an import, this property will contain the\
            \ Id of the Import that created this entity."
          example: 21d4ddf1-c8bf-4874-8879-b70468fa1032
          format: uuid
          nullable: true
          readOnly: true
          type: string
        CurrencyCode:
          description: "The standard currency code for the supplier.\r\nCurrencies\
            \ active on the client can be queried using the AccountingSettings service.\r\
            \nCurrency codes follow the ISO4217 standard.\r\nDefaults to *NOK*."
          example: NOK
          nullable: true
          type: string
        DateOfBirth:
          description: "The date of birth of the supplier.\r\n Relevant only if the\
            \ supplier is a person (when isPerson is true)."
          example: 2003-07-15
          format: date
          nullable: true
          type: string
        EmailAddress:
          description: "The (general) e-mail address registered for the supplier.\r\
            \nThis field is validated for typos in POST/PATCH calls."
          example: abc@test.yxz
          nullable: true
          type: string
        ExternalImportReference:
          description: "The external import reference.\r\nThis field is not available\
            \ in the GUI, but can be used by the integrating party to reference the\
            \ external system.\r\nThe field must be unique within each class of Contacts\
            \ (unique for customers, suppliers or employees).\r\nMax length 50 characters."
          example: abc123-def456
          nullable: true
          type: string
        ExternalNumber:
          description: "The external number.\r\nThis field can be used to reference\
            \ the supplier number in the external system, if the supplier numbers\
            \ are not kept in 1:1 sync between Go and the external system.\r\nThe\
            \ field is available in the GUI with the name \"External Code\".\r\nThe\
            \ field must be unique within each class of Contacts (unique for customers,\
            \ suppliers or employees).\r\nNote that in file imports to Go (including\
            \ file imports using the ImportFile endpoint), this number has precedence\
            \ over the supplier number.\r\nI.e. when importing incoming invoices using\
            \ a file, with the supplier number 20000 set in the file, the import will\
            \ choose the supplier with ExternalNumber 20000 over the supplier with\
            \ Number 20000. This is the case for file imports only."
          example: 12345
          format: int64
          nullable: true
          type: integer
        FirstName:
          description: "The first name of the supplier.\r\n Relevant and required\
            \ if the supplier is a person (i.e. isPerson is true)"
          example: Henry
          nullable: true
          type: string
        Id:
          description: "The identifier of the contact.\r\nThis identifier is unique\
            \ and assigned by PowerOffice Go when a new entity is saved, and should\
            \ be provided when an entity should be edited (PATCH), deleted (DELETE)\
            \ or retrieved specifically (GET).\r\nThe supplier object is a contact\
            \ entity, meaning the id might be shared with a customer and/or an employee\
            \ if the contact is registered as both a supplier and customer/employee\
            \ in Go."
          example: 12345
          format: int64
          readOnly: true
          type: integer
        IsActive:
          description: "A value indicating whether this supplier instance is active.\r\
            \nThis property reflects if a contact entity that was both a customer\
            \ and a supplier, is currently active as a supplier.\r\nCan be false in\
            \ situations where the customer is still active so that the contact entity\
            \ cannot be archived, but the supplier is deactivated by a user in the\
            \ GUI."
          example: true
          nullable: true
          readOnly: true
          type: boolean
        IsArchived:
          description: "A value indicating whether this contact entity is/should be\
            \ archived (set inactive)\r\nCannot be set if the contact have ledger\
            \ balances (as either a customer or as a supplier)."
          example: false
          nullable: true
          type: boolean
        IsPerson:
          description: "A value indicating whether this supplier is a person.\r\n\
            The setting apply to the contact entity, and is used to differentiate\
            \ persons from companies.\r\nIf set true, the firstName and lastName should\
            \ be set.\r\nThe default setting is false if not provided."
          example: false
          nullable: true
          type: boolean
        LastChangedDateTimeOffset:
          description: "The timestamp of the last change of the supplier.\r\nNote\
            \ that this property do not reflect changes in sub-entities (address,\
            \ contact person etc) related to the contact."
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        LastName:
          description: "The last name of the supplier.\r\nRelevant and required if\
            \ the supplier is a person (i.e. isPerson is true)"
          example: Ford
          nullable: true
          type: string
        LegalName:
          description: "The legal name of the supplier.\r\nThe legal name is the official\
            \ registered name of the company, as opposed to the name which might be\
            \ a marketing name.\r\nRelevant only if the supplier is a company (i.e.\
            \ isPerson is false)"
          example: Ford Motor Company AS
          nullable: true
          type: string
        MailAddress:
          $ref: '#/components/schemas/ContactAddressDto'
        Name:
          description: "The name of the supplier.\r\nRelevant and required if the\
            \ supplier is a company (i.e. isPerson is false)"
          example: Ford Motor
          nullable: true
          type: string
        Number:
          description: "The supplier number.\r\nThe number will also represent the\
            \ supplier ledger account, used for supplier ledger transactions.\r\n\
            When creating new suppliers and setting the number (as opposed to letting\
            \ Go assign the next available number if left blank), the number must\
            \ be within range of the supplier ledger numberseries that exist on the\
            \ client in Go."
          example: 20010
          format: int64
          nullable: true
          type: integer
        OrganizationNumber:
          description: "The organization number of the supplier.\r\nRelevant for suppliers\
            \ that are companies (i.e. isPerson is false)."
          example: "980386465"
          nullable: true
          type: string
        Payout:
          description: "A flag indicating whether invoices or credit notes from this\
            \ supplier should be paid using remittance.\r\nDefault true, and if true\
            \ a remittance draft will be created when voucher are posted in the journal\
            \ entry."
          example: true
          nullable: true
          type: boolean
        PhoneNumber:
          description: The phone number of the supplier.
          example: "+4712345678"
          nullable: true
          type: string
        SubledgerAccountId:
          description: The identifier of subledger account associated with the supplier.
          example: 12345
          format: int64
          readOnly: true
          type: integer
        SupplierCreatedDateTimeOffset:
          description: "The timestamp the contact first became a supplier.\r\nFor\
            \ contacts being only suppliers, this property will be equal to the contactCreatedDateTimeOffset\
            \ property."
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        WebsiteUrl:
          description: The url to the suppliers website.
          example: www.supplierswebsite.net
          nullable: true
          type: string
      type: object
    ContactAddressDto:
      additionalProperties: false
      description: "The contact address DTO contains all properties relevant to an\
        \ address object in Go.\r\nAddress representing a physical location."
      example:
        AddressLine2: "Att: Ola Nordmann"
        AddressLine1: Postboks 404
        ZipCode: "0161"
        City: Oslo
        Id: 12345
        CountryCode: "NO"
        ExternalCode: 123ABC
        LastChangedDateTimeOffset: 2022-07-11T12:46:59.1234567Z
      properties:
        AddressLine1:
          description: The first (main) address line.
          example: Postboks 404
          maxLength: 200
          nullable: true
          type: string
        AddressLine2:
          description: The second address line.
          example: "Att: Ola Nordmann"
          maxLength: 200
          nullable: true
          type: string
        City:
          description: The city.
          example: Oslo
          maxLength: 100
          nullable: true
          type: string
        CountryCode:
          description: "The ISO 3166-1 alfa-2 country code (two characters).\r\nDefaults\
            \ to \"NO\" if not set."
          example: "NO"
          nullable: true
          type: string
        ExternalCode:
          description: "The external code\r\nThis field is not available in the GUI,\
            \ but can be used by the integrating party to reference the address in\
            \ the external system.\r\nThe field must be unique (for each address)."
          example: 123ABC
          maxLength: 50
          nullable: true
          type: string
        Id:
          description: "The identifier of the address.\r\nThis identifier is unique\
            \ and assigned by PowerOffice Go when a new entity is saved, and should\
            \ be provided when an entity should be edited (PATCH), deleted (DELETE)\
            \ or retrieved specifically (GET)."
          example: 12345
          format: int64
          readOnly: true
          type: integer
        LastChangedDateTimeOffset:
          description: The last changed timestamp of this address.
          example: 2022-07-11T12:46:59.1234567Z
          format: date-time
          readOnly: true
          type: string
        ZipCode:
          description: The zip code (postal code).
          example: "0161"
          maxLength: 50
          nullable: true
          type: string
      type: object
    JsonPatchDocument:
      description: Array of operations to perform
      items:
        $ref: '#/components/schemas/Operation'
      type: array
    Operation:
      example:
        op: op
        path: path
        from: from
        value: "{}"
      properties:
        op:
          type: string
        path:
          type: string
        value:
          nullable: true
          type: object
        from:
          nullable: true
          type: string
      type: object
    CustomerLedgerEntryDto:
      additionalProperties: false
      description: Customer ledger entry DTO
      example:
        IsWriteOff: true
        Dim3Id: 123456
        Dim2Id: 123456
        PaidFromBankAccount: "10"
        Dim1Code: dimcode111
        Dim1Id: 123456
        Dim2Code: dimcode222
        ExternalImportReference: 123abc
        CurrencyCode: USD
        VoucherDate: 2020-07-25
        ProjectCode: "100"
        CustomMatchingReference: 123-abc
        CustomerName: Coca-Cola AS
        DueDate: 2021-09-28
        IsCreatedByCurrentIntegration: true
        VoucherNo: 15545
        Cid: "9235400011927001"
        DepartmentCode: "110"
        Amount: 99
        LocationCode: L1337
        LocationId: 12345
        ProjectId: 123456
        InvoiceNo: "15545"
        CustomerId: 123456
        CustomerAccountNo: 10000
        CustomerExternalNo: 12345
        CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        CurrencyAmount: 8.5212
        Dim3Code: dimcode333
        PostingDate: 2021-09-28
        MatchId: 123456
        VoucherId: ee373540-ca8d-4562-8fb6-6fb52de47722
        DepartmentId: 123456
        Id: 476023749
        Balance: 502.25
        CreatedFromImportJournalId: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        LastChangedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        VoucherType: Unknown
      properties:
        Amount:
          description: "The posted amount of the entry. Amount is always presented\
            \ in the client currency.\r\nAlways present on transactions."
          example: 99
          format: double
          readOnly: true
          type: number
        Balance:
          description: "The balance of the entry (remaining amount to be paid), in\
            \ the client currency on the date (openItems) / toDate (statement).\r\n\
            If balance is less than amount, the entry will have a match with at least\
            \ one other entry with the opposite amount, and those entries will share\
            \ the same matchId."
          example: 502.25
          format: double
          readOnly: true
          type: number
        Cid:
          description: "The cid number (norwegian: KID), if present.\r\nEntries with\
            \ the opposite amounts and the same cid will be matched on the sub-ledger\
            \ account, if the client use cid and the items are not already matched\
            \ out."
          example: "9235400011927001"
          nullable: true
          readOnly: true
          type: string
        CreatedDateTimeOffset:
          description: "The created timestamp.\r\nThis is the timestamp the transaction\
            \ was created, and may differ from the timestamp of accounting effect\
            \ for the transaction (ie the property PostingDate).\r\nAlways present\
            \ on transactions."
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        CreatedFromImportJournalId:
          description: "The created from import journal identifier, if present.\r\n\
            Provided if this account transaction has been created in Go by an import."
          example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
          format: uuid
          nullable: true
          readOnly: true
          type: string
        CurrencyAmount:
          description: The currency amount. Differs from Amount if the transaction
            was posted with a currency other than the client currency.
          example: 8.5212
          format: double
          readOnly: true
          type: number
        CurrencyCode:
          description: The currency code. Currencies active on the client can be queried
            using the AccountingSettings service. Currency codes follow the ISO4217
            standard.
          example: USD
          nullable: true
          readOnly: true
          type: string
        CustomMatchingReference:
          description: "The custom matching reference set on the transaction. This\
            \ property will only have value on entries created through the API or\
            \ Import with CustomMatchingReference specified.\r\nThis property is used\
            \ for matching purposes, where entries posted with a CustomMatchingReference\
            \ will be matched immediately with existing entries in the sub-ledger\
            \ that have the same CustomMatchingReference and opposite amount (unless\
            \ existing entries are already matched out)."
          example: 123-abc
          nullable: true
          readOnly: true
          type: string
        CustomerAccountNo:
          description: "The customer account number this sub-ledger entry is posted\
            \ on.\r\nCustomerAccountNo will also represent the Customer number.\r\n\
            Customers can be queried and identified using the Customer service."
          example: 10000
          format: int64
          nullable: true
          readOnly: true
          type: integer
        CustomerExternalNo:
          description: "The external number of the customer of this sub-ledger entry.\r\
            \nAn external number set on the customer is often used to reference the\
            \ customer number in the external system, if the customer numbers are\
            \ not kept in 1:1 sync between Go and the external system.\r\nThe field\
            \ is available in the GUI with the name External Code.\r\nCustomers can\
            \ be queried and identified using the Customer service."
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        CustomerId:
          description: "The id of the customer of this sub-ledger entry.\r\nCustomers\
            \ can be queried and identified using the Customer service."
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        CustomerName:
          description: "The name of the customer of this sub-ledger entry.\r\nCustomers\
            \ can be queried and identified using the Customer service."
          example: Coca-Cola AS
          nullable: true
          readOnly: true
          type: string
        DepartmentCode:
          description: "The department code. Available if the transaction was posted\
            \ with department.\r\nDepartments can be queried and identified using\
            \ the Department service."
          example: "110"
          nullable: true
          readOnly: true
          type: string
        DepartmentId:
          description: "The department id. Available if the transaction was posted\
            \ with department.\r\nDepartments can be queried and identified using\
            \ the Department service."
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        Dim1Code:
          description: "The code of the dimension 1 associated with the entry.\r\n\
            Dimension 1-3 are customizable dimensions that can be defined and queried\
            \ using the CustomDimension- and CustomDimensionValue-services."
          example: dimcode111
          nullable: true
          readOnly: true
          type: string
        Dim1Id:
          description: The id of the dimension 1 associated with the account transaction.
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        Dim2Code:
          description: "The code of the dimension 2 associated with the account transaction.\r\
            \nDimension 1-3 are customizable dimensions that can be defined and queried\
            \ using the CustomDimension- and CustomDimensionValue-services."
          example: dimcode222
          nullable: true
          readOnly: true
          type: string
        Dim2Id:
          description: The id of the dimension 2 associated with the account transaction.
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        Dim3Code:
          description: "The code of the dimension 3 associated with the account transaction.\r\
            \nDimension 1-3 are customizable dimensions that can be defined and queried\
            \ using the CustomDimension- and CustomDimensionValue-services."
          example: dimcode333
          nullable: true
          readOnly: true
          type: string
        Dim3Id:
          description: The id of the dimension 3 associated with the account transaction.
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        DueDate:
          description: The due date of the entry. Relevant only for voucher types
            OutgoingInvoice and OutgoingCreditNote. The date represent when the amount
            is due to be paid by the customer.
          example: 2021-09-28
          format: date
          nullable: true
          type: string
        ExternalImportReference:
          description: "The ExternalImportReference, if set.\r\nThis property can\
            \ be set by integrations posting vouchers in Go, in order to reference\
            \ the external system and ensure a duplicate check when posting the voucher\
            \ to Go (only one instance of the reference can exist).\r\nCan be used\
            \ to correlate/duplicate check transaction."
          example: 123abc
          nullable: true
          readOnly: true
          type: string
        Id:
          description: "A value that uniquely identifies this (ledger) entry. The\
            \ Id is assigned by Go when the transactions is posted in Go.\r\nAlways\
            \ present on transactions."
          example: 476023749
          format: int64
          readOnly: true
          type: integer
        InvoiceNo:
          description: "The invoice number, if the entry is an entry with the voucher\
            \ type OutgoingInvoice or OutgoingCreditNote."
          example: "15545"
          nullable: true
          readOnly: true
          type: string
        IsCreatedByCurrentIntegration:
          description: "A value indicating whether this ledger entry is created by\
            \ the integration currently communicating with the API.\r\nWill be true\
            \ for all entries that are created by the same integration user (same\
            \ Application Key) as the integration currently authorized.\r\nCan be\
            \ used in filtering if only the current integration's entries are relevant\
            \ to report (in simplified queries of payment status of invoices, for\
            \ instance)."
          example: true
          nullable: true
          readOnly: true
          type: boolean
        IsWriteOff:
          description: "A value indicating whether this entry was created by the write\
            \ off functionality in Go.\r\nSuch entries are not payments, but an accounting\
            \ routine writing off an open item."
          example: true
          nullable: true
          readOnly: true
          type: boolean
        LastChangedDateTimeOffset:
          description: "The timestamp of the last change of this entry.\r\nThe accounting\
            \ entry in itself cannot change, but the match state of the sub-ledger\
            \ entry might change.\r\nUsing last changed filtering is one way of retrieving\
            \ new matched items and as such the payment status of invoices."
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        LocationCode:
          description: "The code of the location dimension associated with the entry,\
            \ if set."
          example: L1337
          nullable: true
          readOnly: true
          type: string
        LocationId:
          description: "The id of the location dimension associated with the entry,\
            \ if location code is set."
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        MatchId:
          description: "The match identifier on the entry, if it is matched with one\
            \ or more other entries. All sub-ledger entries that are matched together\
            \ share the same matchId."
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        PaidFromBankAccount:
          description: "The bank account code the OCR payment was paid from.\r\nOnly\
            \ present on entries of vouchertype incomingOcrGiro."
          example: "10"
          nullable: true
          readOnly: true
          type: string
        PostingDate:
          description: "The posting date.\r\nThis is the date of effect in the accounting\
            \ system for the Amount and CurrencyAmount (also the currency conversion\
            \ date used by Go if the currency rate was not set explicit when posted).\r\
            \nAlways present on transactions."
          example: 2021-09-28
          format: date
          readOnly: true
          type: string
        ProjectCode:
          description: "The project code. Available if the transaction was posted\
            \ with project.\r\nProjects can be queried and identified using the Project\
            \ service."
          example: "100"
          nullable: true
          readOnly: true
          type: string
        ProjectId:
          description: "The project id. Available if the transaction was posted with\
            \ project.\r\nProjects can be queried and identified using the Project\
            \ service."
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        VoucherDate:
          description: "The date of the voucher.\r\nThis represents the date of the\
            \ voucher, the document date of an invoice for instance,\r\nand may differ\
            \ from the transaction dates for the voucher.\r\nAlways present on transactions."
          example: 2020-07-25
          format: date
          readOnly: true
          type: string
        VoucherId:
          description: "The voucher identifier.\r\nThe Id is assigned by Go when the\
            \ voucher is created, and is shared by all transactions within the same\
            \ voucher.\r\nAlways present on transactions."
          example: ee373540-ca8d-4562-8fb6-6fb52de47722
          format: uuid
          readOnly: true
          type: string
        VoucherNo:
          description: "The voucher number.\r\nThis is the voucher number assigned\
            \ by Go when the voucher was posted.\r\nVoucher numbers are assigned by\
            \ Go in sequence.\r\nAlways present on transactions."
          example: 15545
          format: int64
          readOnly: true
          type: integer
        VoucherType:
          $ref: '#/components/schemas/VoucherType'
      type: object
    VoucherType:
      description: |-
        Enum defining what kind of voucher the voucher is<p>Members:</p><ul><li><i>Unknown</i> - Unknown voucher type - Vouchers with a new voucher type not yet implemented in current version of the API will have this value.
                        If this value appears, a new version of the API should be available and should be implemented.</li><li><i>IncomingInvoice</i> - Incoming invoice sent from a supplier to the client.</li><li><i>IncomingCreditNote</i> - Incoming credit note sent from a supplier to the client.</li><li><i>OutgoingInvoice</i> - Outgoing invoice sent from the client to a customer.</li><li><i>OutgoingCreditNote</i> - Outgoing credit note sent from the client to a customer.</li><li><i>IncomingBankRemittance</i> - Incoming bank remittance posting completed payments done by the client through a bank integration.</li><li><i>IncomingOcrGiro</i> - Incoming OCR giro payments to the client paid with CID.</li><li><i>ManualJournal</i> - Manual journal is a generic voucher type with various accounting entries without any specific kind.</li><li><i>Expense</i> - Expense are expenses that have been paid by an Employee on behalf of the organization (Norwegian: Utlegg).</li><li><i>CashJournal</i> - Cash journal contains accounting entries generated from a cash register.</li><li><i>IncomingPayments</i> - Incoming payments (Still exists due to backwards compability, but is replaced by VoucherType BankJournal).</li><li><i>OutgoingPayments</i> - Outgoing payments(Still exists due to backwards compability, but is replaced by VoucherType BankJournal).</li><li><i>YearEndJournal</i> - Year end journal containing the various year-end accounting entries. (Norwegian: Årsavslutningsbilag)</li><li><i>BankJournal</i> - Bank journal containing transactions from the bank.</li><li><i>VatReturns</i> - VAT returns are vouchers generated when reporting VAT.</li><li><i>PayrollJournal</i> - Payroll journal are vouchers containing payroll transactions.</li><li><i>OutgoingPaymentReminder</i> - Outgoing payment reminder containing fees and interest due to late payment of an outgoing invoice.</li><li><i>OutgoingNoticeOfDebtCollection</i> - Outgoing notice of debt collection containing fees and interest due to late payment of an outgoing invoice.</li><li><i>OutgoingPaymentDemand</i> - Outgoing payment demand containing fees and interest due to late payment of an outgoing invoice.</li><li><i>OutgoingWarrantOfExecution</i> - Outgoing warrant of execution containing fees and interest due to late payment of an outgoing invoice.</li><li><i>CorrectionVoucher</i> - Correction voucher generated to correct another wrongly posted voucher.</li><li><i>ReversalVoucher</i> - A voucher to reverse a previously wrongly posted voucher.</li><li><i>DepreciationJournal</i> - Depreciation journal generated when fixed assets are depreciated.</li><li><i>TravelExpense</i> - Travel expense voucher to post a travel expense sent from an employee.</li><li><i>Settlement</i> - Settlement after delivering various goods to a buyer, especially by agriculture businesses as an alternative to OutgoingInvoice. (Norwegian: Avregning)</li><li><i>NegativeSettlement</i> - Negative settlement after delivering various goods to a buyer and the seller (this client) that is an reduction in accounts receivable. This can be either due to a correction of a previously delivered settlement, or that the supplier (this client) bought more then the goods delivered from the customer. (Norwegian: Negativ avregning)</li><li><i>SystemGeneratedDocumentationVoucher</i> - Voucher generated by system to correct for missing vouchers.</li></ul>
      enum:
      - Unknown
      - IncomingInvoice
      - IncomingCreditNote
      - OutgoingInvoice
      - OutgoingCreditNote
      - IncomingBankRemittance
      - IncomingOcrGiro
      - ManualJournal
      - Expense
      - CashJournal
      - IncomingPayments
      - OutgoingPayments
      - YearEndJournal
      - BankJournal
      - VatReturns
      - PayrollJournal
      - OutgoingPaymentReminder
      - OutgoingNoticeOfDebtCollection
      - OutgoingPaymentDemand
      - OutgoingWarrantOfExecution
      - CorrectionVoucher
      - ReversalVoucher
      - DepreciationJournal
      - TravelExpense
      - Settlement
      - NegativeSettlement
      - SystemGeneratedDocumentationVoucher
      nullable: true
      type: string
    BankApproverDto:
      additionalProperties: false
      description: Data transfer object for the bank approver.
      example:
        BankAccountId: 12345
        UserId: 09ab6bcf-4219-4149-8283-6b6a7342bfd9
        FromDate: 2024-01-01
        ToDate: 2024-01-31
        Id: 12345
        BankAccountNumber: "12345678903"
        IsActiveApprover: true
      properties:
        BankAccountId:
          description: The identifier of the client bank account.
          example: 12345
          format: int64
          readOnly: true
          type: integer
        BankAccountNumber:
          description: The client bank account number.
          example: "12345678903"
          nullable: true
          readOnly: true
          type: string
        FromDate:
          description: "From date, inclusive.\r\nThe user will have access to approval\
            \ on the account from this date."
          example: 2024-01-01
          format: date
          nullable: true
          readOnly: true
          type: string
        Id:
          description: The identifier of this bank approver (Bank Warrant).
          example: 12345
          format: int64
          readOnly: true
          type: integer
        IsActiveApprover:
          description: Indicates whether the user is an active approver for the bank
            account.
          example: true
          readOnly: true
          type: boolean
        ToDate:
          description: "To date, inclusive.\r\nThe user will have access to approval\
            \ on the account until and including this date.\r\nAfterwards, the user\
            \ is deactivated on the client."
          example: 2024-01-31
          format: date
          nullable: true
          readOnly: true
          type: string
        UserId:
          description: The identifier of the user.
          example: 09ab6bcf-4219-4149-8283-6b6a7342bfd9
          format: uuid
          readOnly: true
          type: string
      type: object
    SalesOrderCompleteDto:
      additionalProperties: false
      description: The sales order complete DTO contains all properties relevant to
        a sales order (invoice draft) in Go (this includes sales order lines).
      example:
        SalesOrderLines:
        - VatAmount: -71.14
          Accrual:
            BalanceAccountNo: 2970
            ResultAccountNo: 3901
            IsActive: true
            ResultAccountId: 123456
            BalanceAccountAgricultureDepartment: None
            ResultAccountAgricultureDepartment: null
            FromDate: 2023-01-01
            ToDate: 2023-12-31
            BalanceAccountId: 123456
          UnitOfMeasureCode: BX
          Description: Hello accounting world
          Dim3Id: 123456
          Dim2Id: 123456
          Dim1Code: dim1
          Dim1Id: 123456
          Dim2Code: dim2
          ExternalImportReference: 123abc
          ProductId: 123456
          SellersReferenceEmployeeId: 756319
          ProductUnitPrice: 200
          SalesOrderId: ee373540-ca8d-4562-8fb6-6fb52de47722
          NetAmount: 1000.33
          ProjectCode: 10A
          Allowance: 56.75
          LineType: Normal
          DepartmentCode: 1A
          ProductCode: 10A
          LocationCode: 4A
          LocationId: 123546
          ProjectId: 123456
          Quantity: 100
          SellersReferenceEmployeeNo: 1
          SortOrder: 0
          TotalAmount: 12500.33
          VatReturnSpecification: None
          VatId: 123456
          VatRate: 0.12
          Dim3Code: dim3
          UseStandardSalesAccount: true
          VatCode: "33"
          ProductUnitCost: 300
          DepartmentId: 123456
          Id: ee373540-ca8d-4562-8fb6-6fb52de47722
        - VatAmount: -71.14
          Accrual:
            BalanceAccountNo: 2970
            ResultAccountNo: 3901
            IsActive: true
            ResultAccountId: 123456
            BalanceAccountAgricultureDepartment: None
            ResultAccountAgricultureDepartment: null
            FromDate: 2023-01-01
            ToDate: 2023-12-31
            BalanceAccountId: 123456
          UnitOfMeasureCode: BX
          Description: Hello accounting world
          Dim3Id: 123456
          Dim2Id: 123456
          Dim1Code: dim1
          Dim1Id: 123456
          Dim2Code: dim2
          ExternalImportReference: 123abc
          ProductId: 123456
          SellersReferenceEmployeeId: 756319
          ProductUnitPrice: 200
          SalesOrderId: ee373540-ca8d-4562-8fb6-6fb52de47722
          NetAmount: 1000.33
          ProjectCode: 10A
          Allowance: 56.75
          LineType: Normal
          DepartmentCode: 1A
          ProductCode: 10A
          LocationCode: 4A
          LocationId: 123546
          ProjectId: 123456
          Quantity: 100
          SellersReferenceEmployeeNo: 1
          SortOrder: 0
          TotalAmount: 12500.33
          VatReturnSpecification: None
          VatId: 123456
          VatRate: 0.12
          Dim3Code: dim3
          UseStandardSalesAccount: true
          VatCode: "33"
          ProductUnitCost: 300
          DepartmentId: 123456
          Id: ee373540-ca8d-4562-8fb6-6fb52de47722
        SalesOrderStatus: Draft
        SalesPersonEmployeeNumber: 3
        Dim3Id: 123456
        Dim2Id: 123456
        Dim1Code: dim1
        Dim1Id: 123456
        Dim2Code: dim2
        ExternalImportReference: 123abc
        DeliveryDate: 2022-08-05
        SalesOrderNo: 6065
        LineCount: 3
        CustomerNo: 10010
        CurrencyCode: NOK
        DeliveryTerm: DAP
        ContractNo: 123-244A
        PurchaseOrderReference: qwerty12345
        NetAmount: 1000.33
        ImportedOrderNo: 23145
        ProjectCode: "100"
        CustomMatchingReference: 123ABC
        SalesOrderDate: 2022-08-05
        IsCreatedByCurrentIntegration: true
        DepartmentCode: 1A
        BrandingThemeId: 123456
        PaymentTermId: 123456
        SalesPersonEmployeeId: 123456
        LocationCode: "123546"
        LocationId: 123456
        ProjectId: 123456
        CurrencyExchangeRate: 6.027456183070403
        CustomerId: 123456
        PaymentTerm: 14
        TotalAmount: 12500.33
        RelatedInvoiceNo: 12345
        CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        CustomerReference: 123ABC
        CustomerReferenceContactPersonId: 1
        ContactDeliveryAddressId: 0
        Dim3Code: dim3
        BrandingThemeCode: "4"
        DepartmentId: 123456
        Id: ee373540-ca8d-4562-8fb6-6fb52de47722
        DeliveryTermId: 47001
        LastChangedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
      properties:
        BrandingThemeCode:
          description: "The code of the branding theme associated with the sales order.\r\
            \nBranding themes can be queried and identified using the Sales Settings\
            \ endpoint."
          example: "4"
          nullable: true
          readOnly: true
          type: string
        BrandingThemeId:
          description: "The id of the branding theme associated with the sales order.\r\
            \nIf null in the header, the value may inherit from any project set on\
            \ the sales order, or from the clients default branding theme.\r\nBranding\
            \ themes can be queried and identified using the Sales Settings endpoint."
          example: 123456
          format: int64
          nullable: true
          type: integer
        ContactDeliveryAddressId:
          description: "The id of the contact delivery address associated with the\
            \ sales order.\r\nContact delivery addresses can be queries and identified\
            \ using the Contact Delivery Addresses endpoint."
          format: int64
          nullable: true
          type: integer
        ContractNo:
          description: The contract number.
          example: 123-244A
          nullable: true
          type: string
        CreatedDateTimeOffset:
          description: The timestamp when the sales order was created.
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        CurrencyCode:
          description: "The standard currency code for the sales order.\r\nCurrencies\
            \ active on the client can be queried using the AccountingSettings service.\r\
            \nCurrency codes follow the ISO4217 standard.\r\nDefaults to NOK, but\
            \ may inherit the value set on the Customer entity if null."
          example: NOK
          nullable: true
          type: string
        CurrencyExchangeRate:
          description: "The normalized currency exchange rate.\r\nAlways base 1."
          format: double
          nullable: true
          type: number
        CustomMatchingReference:
          description: "The custom matching reference of the sales order.\r\nThis\
            \ property will only have value on entries created through the API or\
            \ Import with CustomMatchingReference specified.\r\nThis property is used\
            \ for matching purposes in the customer sub-ledger account, where entries\
            \ posted with a CustomMatchingReference will be matched immediately with\
            \ existing entries in the sub-ledger that have the same CustomMatchingReference\
            \ and opposite amount (unless existing entries are already matched out)."
          example: 123ABC
          nullable: true
          type: string
        CustomerId:
          description: "The id of the customer associated with the sales order.\r\n\
            Customers can be queried and identified using the Customers endpoint."
          example: 123456
          format: int64
          nullable: true
          type: integer
        CustomerNo:
          description: "The number of the customer associated with the sales order.\r\
            \nCustomers can be queried and identified using the Customers endpoint."
          example: 10010
          format: int64
          nullable: true
          readOnly: true
          type: integer
        CustomerReference:
          description: "The customer reference (ie buyers reference) of the sales\
            \ order.\r\nThis property is often used to give the receiver of the (eventual)\
            \ invoice a reference they are familiar with.\r\nIf CustomerReferenceContactPersonId\
            \ has value, the name of the customers contact person is returned on get,\r\
            \notherwise the \"Your Reference\" text used on the (eventual) invoice\
            \ will be returned."
          example: 123ABC
          nullable: true
          type: string
        CustomerReferenceContactPersonId:
          description: "The id of the customer reference contact person (ie buyers\
            \ reference) of the sales order.\r\nIf null, the value will be inherited\
            \ from the project or the customer associated with the sales order.\r\n\
            If set, the contact persons name will be set as the CustomerReference\
            \ on the sales order.\r\nContact persons can be queried and identified\
            \ using the Contact person endpoint."
          format: int64
          nullable: true
          type: integer
        DeliveryDate:
          description: "The delivery date of the sales order.\r\nWill default to the\
            \ date when the sales order is sent (converted to invoice) if not set\
            \ via import or api."
          example: 2022-08-05
          format: date
          nullable: true
          type: string
        DeliveryTerm:
          description: "The delivery term of the sales order.\r\nIf null, the value\
            \ will be inherited from project, customer or the client delivery term\
            \ settings.\r\nDelivery terms can be queried and identified using the\
            \ Delivery terms endpoint."
          example: DAP
          nullable: true
          readOnly: true
          type: string
        DeliveryTermId:
          description: "The id of the delivery term of the sales order.\r\nIf null,\
            \ the value will be inherited from project, customer or the client delivery\
            \ term settings.\r\nDelivery terms can be queried and identified using\
            \ the Delivery terms endpoint."
          example: 47001
          format: int64
          nullable: true
          type: integer
        DepartmentCode:
          description: "The code of the department associated with the sales order.\r\
            \nThis is the department set in the header of the sales order.\r\nIf null\
            \ in the header, the value may inherit from the project, customer or the\
            \ employee creating the sales order (if created using the GUI) - in that\
            \ order.\r\nThe sales order lines will inherit this value if no other\
            \ department (or no department) is specified on the line.\r\nDepartmentCode\
            \ = -1 means no department.\r\nDepartments can be queried and identified\
            \ using the Departments endpoint."
          example: 1A
          nullable: true
          readOnly: true
          type: string
        DepartmentId:
          description: "The id of the department associated with the sales order.\r\
            \nThis is the department set in the header of the sales order.\r\nIf null\
            \ in the header, the value may inherit from the project, customer or the\
            \ employee creating the sales order (if created using the GUI) - in that\
            \ order.\r\nThe sales order lines will inherit this value if no other\
            \ department (or no department) is specified on the line.\r\nDepartmentId\
            \ = -1 means no department.\r\nDepartments can be queried and identified\
            \ using the Departments endpoint."
          example: 123456
          format: int64
          nullable: true
          type: integer
        Dim1Code:
          description: "The code of the dimension 1 associated with the sales order.\r\
            \nDim1Code = -1 means no dimension 1.\r\nDimension 1-3 are customizable\
            \ dimensions that can be defined and queried using the Custom Dimensions\
            \ endpoint."
          example: dim1
          nullable: true
          readOnly: true
          type: string
        Dim1Id:
          description: "The id of the dimension 1 associated with the sales order.\r\
            \nThis is the dimension 1 set in the header of the sales order.\r\nThe\
            \ sales order lines might specify other dimension 1 values or no dimension\
            \ 1.\r\nDimension 1-3 are customizable dimensions that can be defined\
            \ and queried using the Custom Dimensions endpoint.\r\nDim1Id = -1 means\
            \ no dimension 1."
          example: 123456
          format: int64
          nullable: true
          type: integer
        Dim2Code:
          description: "The code of the dimension 2 associated with the sales order.\r\
            \nDim2Code = -1 means no dimension 2.\r\nDimension 1-3 are customizable\
            \ dimensions that can be defined and queried using the Custom Dimensions\
            \ endpoint."
          example: dim2
          nullable: true
          readOnly: true
          type: string
        Dim2Id:
          description: "The id of the dimension 2 associated with the sales order.\r\
            \nThis is the dimension 2 set in the header of the sales order.\r\nThe\
            \ sales order lines might specify other dimension 2 values or no dimension\
            \ 2.\r\nDimension 1-3 are customizable dimensions that can be defined\
            \ and queried using the Custom Dimensions endpoint.\r\nDim2Id = -1 means\
            \ no dimension 2."
          example: 123456
          format: int64
          nullable: true
          type: integer
        Dim3Code:
          description: "The code of the dimension 3 associated with the sales order.\r\
            \nDim3Code = -1 means no dimension 3.\r\nDimension 1-3 are customizable\
            \ dimensions that can be defined and queried using the Custom Dimensions\
            \ endpoint."
          example: dim3
          nullable: true
          readOnly: true
          type: string
        Dim3Id:
          description: "The id of the dimension 3 associated with the sales order.\r\
            \nThis is the dimension 3 set in the header of the sales order.\r\nThe\
            \ sales order lines might specify other dimension 3 values or no dimension\
            \ 3.\r\nDimension 1-3 are customizable dimensions that can be defined\
            \ and queried using the Custom Dimensions endpoint.\r\nDim3Id = -1 means\
            \ no dimension 3."
          example: 123456
          format: int64
          nullable: true
          type: integer
        ExternalImportReference:
          description: "The ExternalImportReference associated with the sales order.\r\
            \nThis property can be set by integrations creating sales orders, in order\
            \ to reference the external system and ensure a duplicate check (only\
            \ one instance of the reference can exist for the object type).\r\nCan\
            \ be used to correlate/duplicate check transactions."
          example: 123abc
          nullable: true
          type: string
        Id:
          description: "The identifier of the sales order.\r\nThe id is assigned by\
            \ Go when the sales order is created.\r\nThis id will persist on sent\
            \ invoices and the voucher of sent invoices, if the sales order (invoice\
            \ draft) is sent. // todo: er dette riktig?"
          example: ee373540-ca8d-4562-8fb6-6fb52de47722
          format: uuid
          readOnly: true
          type: string
        ImportedOrderNo:
          description: "The imported order number.\r\nCan only be set on sales orders\
            \ created using the api or import, and on vouchers posted directly using\
            \ the api or an import.\r\nCan be used to reference the order number in\
            \ the external system.\r\nThe imported order number is visible on the\
            \ sales order in the Go GUI."
          example: 23145
          format: int64
          nullable: true
          type: integer
        IsCreatedByCurrentIntegration:
          description: "Value indicating whether the sales order is created by the\
            \ integration currently communicating with the API.\r\nWill be true for\
            \ all entries that are created by the same integration user (same Application\
            \ Key) as the integration currently authorized.\r\nCan be used in filtering\
            \ if only the current integration's entries are relevant to report."
          example: true
          nullable: true
          readOnly: true
          type: boolean
        LastChangedDateTimeOffset:
          description: The timestamp of the last change of the sales order.
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        LineCount:
          description: The number of lines on this sales order.
          example: 3
          format: int64
          readOnly: true
          type: integer
        LocationCode:
          description: "The code of the location dimension associated with the sales\
            \ order.\r\nLocations can be queried and identified using the Locations\
            \ endpoint."
          example: "123546"
          nullable: true
          readOnly: true
          type: string
        LocationId:
          description: "The id of the location dimension associated with the sales\
            \ order.\r\nThis is the location set in the header of the sales order.\r\
            \nThe sales order lines will inherit this value if no other location (or\
            \ no location) is specified on the line.\r\nLocations can be queried and\
            \ identified using the Locations endpoint.\r\nLocationId = -1 means no\
            \ location."
          example: 123456
          format: int64
          nullable: true
          type: integer
        NetAmount:
          description: "The net amount of the order (vat exclusive).\r\nThis amount\
            \ is presented in the currency used on the order (the currency given by\
            \ the currencyCode)."
          example: 1000.33
          format: double
          readOnly: true
          type: number
        PaymentTerm:
          description: "The payment term of the sales order.\r\nThis is the default\
            \ number of days after an invoice is sent until it is due.\r\nIf null,\
            \ the value will be inherited from project, customer or the client payment\
            \ term settings.\r\nPayment terms can be queried and identified using\
            \ the Payment terms endpoint."
          example: 14
          format: int32
          nullable: true
          readOnly: true
          type: integer
        PaymentTermId:
          description: "The id of the payment term of the sales order.\r\nThis is\
            \ the default number of days after an invoice is sent until it is due.\r\
            \nIf null, the value will be inherited from project, customer or the client\
            \ payment term settings.\r\nPayment terms can be queried and identified\
            \ using the Payment terms endpoint."
          example: 123456
          format: int64
          nullable: true
          type: integer
        ProjectCode:
          description: "The code of the project associated with the sales order.\r\
            \nThis is the project set in the header of the order.\r\nThe sales order\
            \ lines will inherit this value if no other project (or no project) is\
            \ specified on the line.\r\nProjectCode = -1 means no project.\r\nProjects\
            \ can be queried and identified using the Projects endpoint."
          example: "100"
          nullable: true
          readOnly: true
          type: string
        ProjectId:
          description: "The id of the project associated with the sales order.\r\n\
            This is the project set in the header of the order.\r\nThe sales order\
            \ lines will inherit this value if no other project (or no project) is\
            \ specified on the line.\r\nProjects can be queried and identified using\
            \ the Projects endpoint.\r\nProjectId = -1 means no project."
          example: 123456
          format: int64
          nullable: true
          type: integer
        PurchaseOrderReference:
          description: "The purchase order reference on the sales order.\r\nThe property\
            \ can be used to reference purchase order places by the customer."
          example: qwerty12345
          nullable: true
          type: string
        RelatedInvoiceNo:
          description: "The related invoice number.\r\nCan only be set for sales orders\
            \ that are credit note drafts.\r\nIf set, this property will reference\
            \ the original invoice being credited."
          example: 12345
          format: int64
          nullable: true
          type: integer
        SalesOrderDate:
          description: "The sales order date.\r\nWill default to the date when the\
            \ sales order is sent (converted to invoice) if not set via import or\
            \ api."
          example: 2022-08-05
          format: date
          nullable: true
          type: string
        SalesOrderLines:
          description: The sales order lines.
          items:
            $ref: '#/components/schemas/SalesOrderLineDto'
          nullable: true
          readOnly: true
          type: array
        SalesOrderNo:
          description: "The sales order number.\r\nThis value is autogenerated by\
            \ Go."
          example: 6065
          format: int64
          nullable: true
          readOnly: true
          type: integer
        SalesOrderStatus:
          $ref: '#/components/schemas/OrderStatus'
        SalesPersonEmployeeId:
          description: "The (employee) id of the sales person associated with the\
            \ sales order.\r\nIf null, the sales person on the customer this sales\
            \ order relates to is used or the default sales person from the SalesSettings.\r\
            \nEmployees can be queried and identified using the Employees endpoint."
          example: 123456
          format: int64
          nullable: true
          type: integer
        SalesPersonEmployeeNumber:
          description: "The employee number of the sales person associated with the\
            \ sales order.\r\nIf null, the sales person on the customer this sales\
            \ order relates to is used or the default sales person from the SalesSettings.\r\
            \nEmployees can be queried and identified using the Employees endpoint."
          example: 3
          format: int64
          nullable: true
          readOnly: true
          type: integer
        TotalAmount:
          description: "The total amount of the sales order (VAT inclusive).\r\nThis\
            \ amount is presented in the currency used on the sales order (the currency\
            \ given by the currencyCode)."
          example: 12500.33
          format: double
          readOnly: true
          type: number
      type: object
    SalesOrderLineDto:
      additionalProperties: false
      description: The sales order line DTO contains all properties relevant to a
        sales order line in Go
      example:
        VatAmount: -71.14
        Accrual:
          BalanceAccountNo: 2970
          ResultAccountNo: 3901
          IsActive: true
          ResultAccountId: 123456
          BalanceAccountAgricultureDepartment: None
          ResultAccountAgricultureDepartment: null
          FromDate: 2023-01-01
          ToDate: 2023-12-31
          BalanceAccountId: 123456
        UnitOfMeasureCode: BX
        Description: Hello accounting world
        Dim3Id: 123456
        Dim2Id: 123456
        Dim1Code: dim1
        Dim1Id: 123456
        Dim2Code: dim2
        ExternalImportReference: 123abc
        ProductId: 123456
        SellersReferenceEmployeeId: 756319
        ProductUnitPrice: 200
        SalesOrderId: ee373540-ca8d-4562-8fb6-6fb52de47722
        NetAmount: 1000.33
        ProjectCode: 10A
        Allowance: 56.75
        LineType: Normal
        DepartmentCode: 1A
        ProductCode: 10A
        LocationCode: 4A
        LocationId: 123546
        ProjectId: 123456
        Quantity: 100
        SellersReferenceEmployeeNo: 1
        SortOrder: 0
        TotalAmount: 12500.33
        VatReturnSpecification: None
        VatId: 123456
        VatRate: 0.12
        Dim3Code: dim3
        UseStandardSalesAccount: true
        VatCode: "33"
        ProductUnitCost: 300
        DepartmentId: 123456
        Id: ee373540-ca8d-4562-8fb6-6fb52de47722
      properties:
        Accrual:
          $ref: '#/components/schemas/Accrual'
        Allowance:
          description: "The percent of allowance/discount or allowance charge for\
            \ this sales order line.\r\nThe value is between -1000 and 100 (reflects\
            \ as -1000% or 100% in the GUI).\r\nNegative percentage means the line\
            \ is set with allowance charge.\r\nPositive percentage means the line\
            \ is set up with discount/allowance.\r\nIf null, the allowance may inherit\
            \ the value set on the Customer entity, if the value is set on the customer."
          example: 56.75
          format: double
          nullable: true
          type: number
        DepartmentCode:
          description: "The code of the department associated with the sales order\
            \ line.\r\nWill inherit department code from sales order head if not specifically\
            \ set on the line.\r\nDepartment Code = -1 means no department."
          example: 1A
          nullable: true
          readOnly: true
          type: string
        DepartmentId:
          description: "The id of the department associated with the sales order line.\r\
            \nWill inherit department id from sales order head if not specifically\
            \ set on the line.\r\nDepartment Id = -1 means no department.\r\nDepartments\
            \ can be queried and identified using the Departments endpoint."
          example: 123456
          format: int64
          nullable: true
          type: integer
        Description:
          description: "The description for the sales order line.\r\nWhen product\
            \ is set on the line, the description will be the name of the product\
            \ if no other description is specifically set on the line.\r\nIt is usually\
            \ recommended to set a specific description in order to control the information\
            \ on the line."
          example: Hello accounting world
          nullable: true
          type: string
        Dim1Code:
          description: "The code of the dimension 1 associated with the sales order\
            \ line.\r\nDimension 1-3 are customizable dimensions that can be defined\
            \ and queried using the Custom Dimensions endpoint."
          example: dim1
          nullable: true
          readOnly: true
          type: string
        Dim1Id:
          description: "The id of the dimension 1 associated with the sales order\
            \ line.\r\nWill inherit dimension 1 id from sales order head if not specifically\
            \ set on the line.\r\nDimension 1-3 are customizable dimensions that can\
            \ be defined and queried using the Custom Dimensions endpoint.\r\nDim1Id\
            \ = -1 means no dimension 1."
          example: 123456
          format: int64
          nullable: true
          type: integer
        Dim2Code:
          description: "The code of the dimension 2 associated with the sales order\
            \ line.\r\nDimension 1-3 are customizable dimensions that can be defined\
            \ and queried using the Custom Dimensions endpoint."
          example: dim2
          nullable: true
          readOnly: true
          type: string
        Dim2Id:
          description: "The id of the dimension 2 associated with the sales order\
            \ line.\r\nWill inherit dimension 2 id from sales order head if not specifically\
            \ set on the line.\r\nDimension 1-3 are customizable dimensions that can\
            \ be defined and queried using the Custom Dimensions endpoint.\r\nDim2Id\
            \ = -1 means no dimension 2."
          example: 123456
          format: int64
          nullable: true
          type: integer
        Dim3Code:
          description: "The code of the dimension 3 associated with the sales order\
            \ line.\r\nDimension 1-3 are customizable dimensions that can be defined\
            \ and queried using the Custom Dimensions endpoint."
          example: dim3
          nullable: true
          readOnly: true
          type: string
        Dim3Id:
          description: "The id of the dimension 3 associated with the sales order\
            \ line.\r\nWill inherit dimension 3 id from sales order head if not specifically\
            \ set on the line.\r\nDimension 1-3 are customizable dimensions that can\
            \ be defined and queried using the Custom Dimensions endpoint.\r\nDim3Id\
            \ = -1 means no dimension 3."
          example: 123456
          format: int64
          nullable: true
          type: integer
        ExternalImportReference:
          description: "The external import reference for the sales order line.\r\n\
            This property can be set by integrations posting vouchers in Go or creating\
            \ sales orders (invoice drafts), in order to reference the external system's\
            \ invoice line and ensure a duplicate check (only one instance of the\
            \ reference can exist within each invoice object).\r\nCan be used to correlate/duplicate\
            \ check transaction."
          example: 123abc
          nullable: true
          type: string
        Id:
          description: "The identifier of the sales order line.\r\nThe id is assigned\
            \ by Go when the line is created.\r\nNOTE that when the sales order is\
            \ successfully converted to invoice and sent, this id will no longer be\
            \ usable since the replacing invoice object will have new ids."
          example: ee373540-ca8d-4562-8fb6-6fb52de47722
          format: uuid
          readOnly: true
          type: string
        LineType:
          $ref: '#/components/schemas/VoucherLineType'
        LocationCode:
          description: "The code of the location dimension associated with the sales\
            \ order line.\r\nLocations can be queried and identified using the Locations\
            \ endpoint."
          example: 4A
          nullable: true
          readOnly: true
          type: string
        LocationId:
          description: "The id of the location dimension associated with the sales\
            \ order line.\r\nWill inherit location id from sales order head if not\
            \ specifically set on the line.\r\nLocations can be queried and identified\
            \ using the Locations endpoint.\r\nLocationId = -1 means no location."
          example: 123546
          format: int64
          nullable: true
          type: integer
        NetAmount:
          description: "The net amount of the sales order line (vat exclusive).\r\n\
            This amount is presented in the currency used on the sales order head\
            \ (the currency given by the currencyCode).\r\nThis value will be calculated\
            \ if product is set (and the product have a sales account set or inherited),\r\
            \nand quantity and unit price is set."
          example: 1000.33
          format: double
          readOnly: true
          type: number
        ProductCode:
          description: "The code of the product associated with the sales order line.\r\
            \nProducts can be queried and identified using the Products endpoint."
          example: 10A
          nullable: true
          readOnly: true
          type: string
        ProductId:
          description: "The id of the product associated with the sales order line.\r\
            \nThe product-object in Go contain information of sales account\r\n(in\
            \ effect which sales account number is used when the order is invoiced,\
            \ and which VAT code option that can be applied).\r\nProducts can be queried\
            \ and identified using the Products endpoint."
          example: 123456
          format: int64
          nullable: true
          type: integer
        ProductUnitCost:
          description: "The cost per unit of the product associated with the sales\
            \ order line.\r\nWill inherit (on creation) the unit cost set on the product\
            \ object if not specifically set on the line."
          example: 300
          format: double
          nullable: true
          type: number
        ProductUnitPrice:
          description: "The sales price per unit of the product associated with the\
            \ sales order line.\r\nWill inherit (on creation) the sales price set\
            \ on the product object if not specifically set on the line."
          example: 200
          format: double
          nullable: true
          type: number
        ProjectCode:
          description: "The code of the project associated with the sales order line.\r\
            \nProjects can be queried and identified using the Projects endpoint."
          example: 10A
          nullable: true
          readOnly: true
          type: string
        ProjectId:
          description: "The id of the project associated with the sales order line.\r\
            \nWill inherit project id from sales order head if not specifically set\
            \ on the line.\r\nProjects can be queried and identified using the Projects\
            \ endpoint.\r\nProjectId = -1 means no project."
          example: 123456
          format: int64
          nullable: true
          type: integer
        Quantity:
          description: "The quantity for the sales order line.\r\nRequired to set\
            \ if the line contain a product code.\r\nNOTE Setting a negative quantity,\
            \ will result in the line being interpreted as a creditation of the product\
            \ quantity.\r\nIf the sum of the lines for the total sales order is negative,\
            \ the sales order is considered a credit note draft."
          example: 100
          format: double
          nullable: true
          type: number
        SalesOrderId:
          description: The identifier of the sales order the current line belongs
            to.
          example: ee373540-ca8d-4562-8fb6-6fb52de47722
          format: uuid
          nullable: true
          readOnly: true
          type: string
        SellersReferenceEmployeeId:
          description: "The id of the employee set as the seller reference for the\
            \ sales order line.\r\nWill inherit the seller reference from sales order\
            \ head if not specifically set on the line.\r\nEmployees can be queried\
            \ and identified using the Employees endpoint."
          example: 756319
          format: int64
          nullable: true
          type: integer
        SellersReferenceEmployeeNo:
          description: "The number of the employee set as the seller reference for\
            \ the sales order line.\r\nEmployees can be queried and identified using\
            \ the Employees endpoint."
          example: 1
          format: int64
          nullable: true
          readOnly: true
          type: integer
        SortOrder:
          description: "The sort order of the sales order line.\r\nSort order start\
            \ at 0.\r\nThe first line as viewed from the GUI, will have sortOrder\
            \ = 0."
          example: 0
          format: int32
          nullable: true
          type: integer
        TotalAmount:
          description: "The total amount of this sales order line (vat inclusive).\r\
            \nThis amount is presented in the currency used on the sales order head\
            \ (the currency given by the currencyCode).\r\nThis value will be calculated\
            \ if product is set (and the product have a sales account set or inherited),\r\
            \nand quantity and unit prices is set."
          example: 12500.33
          format: double
          readOnly: true
          type: number
        UnitOfMeasureCode:
          $ref: '#/components/schemas/UnitOfMeasureType'
        UseStandardSalesAccount:
          description: "Whether the standard sales account of the product set on the\
            \ sales order line is used.\r\n             \r\nIf false, the optional\
            \ sales account set on the product is used.\r\nQuery the product endpoint\
            \ to retrieve the sales account information on the product.\r\n      \
            \          \r\nIf set to null, the standard sales account will be inherited\
            \ from the customer account's VAT-free\r\nsetting. In other words, if\
            \ the VAT-free setting is enabled, the StandardSalesAccount will be set\
            \ to\r\nfalse and the optional sales account set on the product is used.\r\
            \n            \r\nThe concept of sales accounts is also explained in the\
            \ common workflow articles."
          example: true
          nullable: true
          type: boolean
        VatAmount:
          description: "The VAT amount of the sales order line.\r\nThis amount is\
            \ presented in the currency used on the sales order head (the currency\
            \ given by the currencyCode).\r\nThis value will be calculated if product\
            \ is set (and the product have a sales account with vat set or inherited),\r\
            \nand quantity and unit price is set."
          example: -71.14
          format: double
          readOnly: true
          type: number
        VatCode:
          description: "The VAT code used on the sales order line.\r\nPresent if product\
            \ is set on the sales order line.\r\nThe vat code is inherited from the\
            \ sales account used for the product set on the sales order line (either\
            \ the standard or optional sales account).\r\nStandard codes in Go is\
            \ based on the SAF-T standard."
          example: "33"
          nullable: true
          readOnly: true
          type: string
        VatId:
          description: "The id of the the VAT code used on the sales order line.\r\
            \nVat codes can be queried and identified using the VatCodes endpoint."
          example: 123456
          format: int32
          nullable: true
          readOnly: true
          type: integer
        VatRate:
          description: The VAT rate for the vat code used on the sales order line.
          example: 0.12
          format: double
          nullable: true
          readOnly: true
          type: number
        VatReturnSpecification:
          $ref: '#/components/schemas/VatReturnSpecification'
      type: object
    Accrual:
      additionalProperties: false
      description: "Accrual (Norwegian: Periodisering)"
      example:
        BalanceAccountNo: 2970
        ResultAccountNo: 3901
        IsActive: true
        ResultAccountId: 123456
        BalanceAccountAgricultureDepartment: None
        ResultAccountAgricultureDepartment: null
        FromDate: 2023-01-01
        ToDate: 2023-12-31
        BalanceAccountId: 123456
      properties:
        BalanceAccountAgricultureDepartment:
          $ref: '#/components/schemas/AgricultureDepartment'
        BalanceAccountId:
          description: "The account id of the balance account used for the accrual\
            \ balance\r\n(norwegian: balansekonto benyttet for periodiseringen)."
          example: 123456
          format: int64
          nullable: true
          type: integer
        BalanceAccountNo:
          description: "The account number of the balance account used for the accrual\
            \ balance\r\n(norwegian: balansekonto benyttet for periodiseringen)."
          example: 2970
          format: int64
          nullable: true
          type: integer
        FromDate:
          description: The start date of the accrual.
          example: 2023-01-01
          format: date
          type: string
        IsActive:
          description: Value indicating whether the accrual is active or not.
          example: true
          type: boolean
        ResultAccountAgricultureDepartment:
          $ref: '#/components/schemas/AgricultureDepartment'
        ResultAccountId:
          description: "The account id of the result account used for the posting\
            \ of the accrued revenue\r\n(norwegian: resultatkonto benyttet for periodiseringen)."
          example: 123456
          format: int64
          nullable: true
          type: integer
        ResultAccountNo:
          description: "The account number of the result account used for the posting\
            \ of the accrued revenue\r\n(norwegian: resultatkonto benyttet for periodiseringen)."
          example: 3901
          format: int64
          nullable: true
          type: integer
        ToDate:
          description: The end date of the accrual.
          example: 2023-12-31
          format: date
          type: string
      type: object
    AgricultureDepartment:
      description: "Enum representing the different agriculture departments available\
        \ for agriculture clients.<p>Members:</p><ul><li><i>None</i> - Unspecified</li><li><i>Finance</i>\
        \ - Financial (Norsk: Finans)</li><li><i>Farming</i> - Farming (Norsk: Jordbruk)</li><li><i>Forestry</i>\
        \ - Forestry (Norsk: Skogbruk)</li><li><i>FurAnimals</i> - Fur animals (Norsk:\
        \ Pelsdyr)</li><li><i>OtherIndustries</i> - Other industries (Norsk: Andre\
        \ næringer)</li><li><i>Private</i> - Private (Norsk: Privat)</li></ul>"
      enum:
      - None
      - Finance
      - Farming
      - Forestry
      - FurAnimals
      - OtherIndustries
      - Private
      nullable: true
      type: string
    VoucherLineType:
      description: |-
        Enum defining what kind of line the voucher line on a (outgoing) voucher is.<p>Members:</p><ul><li><i>Normal</i> - A normal (sales) line with a product and an account transaction</li><li><i>Text</i> - A text line, no account transaction</li><li><i>Summary</i> - A summary or subtotal line.
                        Will summarize total hours from lines with the unit of measure type hours and/or total amounts, for the lines placed above this line.
                        No account transaction</li><li><i>InvoiceFee</i> - A line with the invoice fee, if invoice fee is used on this client.
                        Will have an account transaction.</li><li><i>TotalHours</i> - A summary line of the hours.
                        Will summarize total hours from lines with the unit of measure type hours, for the lines that are placed above this line.
                        No account transaction.</li></ul>
      enum:
      - Normal
      - Text
      - Summary
      - InvoiceFee
      - TotalHours
      nullable: true
      type: string
    UnitOfMeasureType:
      description: "Enum representing various unit of measures.<p>Members:</p><ul><li><i>BX</i>\
        \ - Box (Norwegian: Eske)</li><li><i>MTR</i> - Meter (m) (Norwegian: Meter)</li><li><i>KMT</i>\
        \ - Kilometer (km) (Norwegian: Kilometer)</li><li><i>KGM</i> - Kilogram (kg)\
        \ (Norwegian: Kilogram)</li><li><i>EA</i> - Each (Norwegian: Stykke (stk))</li><li><i>LTR</i>\
        \ - Liter (L) (Norwegian: Liter)</li><li><i>HUR</i> - Hour (Norwegian: Time)</li><li><i>DAY</i>\
        \ - Day (Norwegian: Dag)</li><li><i>MTK</i> - Square meter (m^2) (Norwegian:\
        \ Kvadratmeter)</li><li><i>MTQ</i> - Cubic meter (m^3) (Norwegian: Kubikkmeter)</li><li><i>TNE</i>\
        \ - Metric ton (t) (Norwegian: Metrisk tonn)</li><li><i>MON</i> - Month (Norwegian:\
        \ Måned)</li><li><i>ANN</i> - Year (Norwegian: År)</li><li><i>QAN</i> - Quarter\
        \ of a year (Norwegian: Kvartal)</li><li><i>NL</i> - Load (Norwegian: Lass)</li><li><i>XRO</i>\
        \ - Roll (Norwegian: Rull)</li><li><i>XBA</i> - Barrel (Norwegian: Tønne)</li><li><i>XPL</i>\
        \ - Pail (Norwegian: Spann)</li><li><i>XPC</i> - Parcel (Norwegian: Kolli)</li><li><i>PR</i>\
        \ - Pair (Norwegian: Par)</li><li><i>XCI</i> - Canister (Norwegian: Boks)</li><li><i>XBG</i>\
        \ - Bag (Norwegian: Pose)</li><li><i>SET</i> - Set (Norwegian: Sett)</li><li><i>XTY</i>\
        \ - Tank (Norwegian: Tank)</li><li><i>XOF</i> - Pallet (Norwegian: Pall)</li><li><i>FTK</i>\
        \ - Square foot (ft^2) (Norwegian: Kvadratfot)</li><li><i>KWH</i> - Kilowatt\
        \ hour (kWh) (Norwegian: Kilowattime)</li><li><i>MWH</i> - Megawatt hour (mWh)\
        \ (Norwegian: Megawattime)</li><li><i>LBR</i> - Pound (lb) (Norwegian: Pund)</li><li><i>CMT</i>\
        \ - Centimeter (cm) (Norwegian: Centimeter)</li><li><i>DMT</i> - Decimeter\
        \ (dm) (Norwegian: Desimeter)</li><li><i>LM</i> - Linear meter (Norwegian:\
        \ Lineær meter)</li><li><i>XPK</i> - Package (Norwegian: Pakke (pk))</li><li><i>GRM</i>\
        \ - Gram (g) (Norwegian: Gram)</li><li><i>HGM</i> - Hectogram (hg) (Norwegian:\
        \ Hektogram)</li><li><i>XFL</i> - Flask (Norwegian: Flaske)</li><li><i>XBE</i>\
        \ - Bundle (Norwegian: Bunt)</li><li><i>E54</i> - Trip (Norwegian: Tur)</li><li><i>MMT</i>\
        \ - Millimeter (mm) (Norwegian: Millimeter)</li><li><i>DAA</i> - Decare (Norwegian:\
        \ Dekar)</li><li><i>H18</i> - Hectare (Norwegian: Hektar)</li><li><i>MLT</i>\
        \ - Milliliter (mL) (Norwegian: Milliliter)</li><li><i>HLT</i> - Hectoliter\
        \ (hL) (Norwegian: Hektoliter)</li><li><i>DLT</i> - Deciliter (dL) (Norwegian:\
        \ Desiliter)</li><li><i>AK</i> - Fathom (Norwegian: Favn)</li><li><i>XCR</i>\
        \ - Crate (Norwegian: Kasse)</li><li><i>E14</i> - Kilocalorie (kcal) (Norwegian:\
        \ Kilokalori)</li><li><i>MJ</i> - Megajoule (MJ) (Norwegian: Megajoule)</li><li><i>J57</i>\
        \ - Barrel (petroleum) (Norwegian: Fat)</li><li><i>XJG</i> - Jug (Norwegian:\
        \ Kanne)</li><li><i>XCT</i> - Carton (Norwegian: Kartong)</li><li><i>XSA</i>\
        \ - Sack (Norwegian: Sekk)</li><li><i>XTU</i> - Tube (Norwegian: Tube)</li><li><i>WEE</i>\
        \ - Week (Norwegian: Uke)</li><li><i>XCA</i> - Can (Rectangular) (Norwegian:\
        \ Boks (Rektangulær))</li><li><i>XCN</i> - Container (Norwegian: Konteiner)</li><li><i>NAR</i>\
        \ - Number of articles (Norwegian: Antall artikler)</li><li><i>M4</i> - Monetary\
        \ value (Norwegian: Pengeverdi)</li><li><i>XVQ</i> - Bulk (Norwegian: Bulk)</li><li><i>P1</i>\
        \ - Percent (%) (Norwegian: Prosent)</li><li><i>MFU</i> - Milk Forage Unit\
        \ (Norwegian: Forenhet melk (FEm))</li><li><i>KMK</i> - Square kilometer (km^2)\
        \ (Norwegian: Kvadratkilometer)</li><li><i>LM3</i> - Loose cubic meter (Norwegian:\
        \ Løskubikkmeter)</li><li><i>FOT</i> - Foot (ft) (Norwegian: Fot)</li><li><i>FM3</i>\
        \ - Solid cubic meter (Norwegian: Fastkubikkmeter)</li><li><i>E34</i> - Gigabyte</li><li><i>E35</i>\
        \ - Terabyte</li></ul>"
      enum:
      - BX
      - MTR
      - KMT
      - KGM
      - EA
      - LTR
      - HUR
      - DAY
      - MTK
      - MTQ
      - TNE
      - MON
      - ANN
      - QAN
      - NL
      - XRO
      - XBA
      - XPL
      - XPC
      - PR
      - XCI
      - XBG
      - SET
      - XTY
      - XOF
      - FTK
      - KWH
      - MWH
      - LBR
      - CMT
      - DMT
      - LM
      - XPK
      - GRM
      - HGM
      - XFL
      - XBE
      - E54
      - MMT
      - DAA
      - H18
      - MLT
      - HLT
      - DLT
      - AK
      - XCR
      - E14
      - MJ
      - J57
      - XJG
      - XCT
      - XSA
      - XTU
      - WEE
      - XCA
      - XCN
      - NAR
      - M4
      - XVQ
      - P1
      - MFU
      - KMK
      - LM3
      - FOT
      - FM3
      - E34
      - E35
      nullable: true
      type: string
    VatReturnSpecification:
      description: "Vat return specification used for giving extra vat information\
        \ about the transaction. Will be reported from 2022 in the norwegian vat return.<p>Members:</p><ul><li><i>None</i>\
        \ - None</li><li><i>Adjustment</i> - Adjustments (Norwegian: Justering)</li><li><i>LossesOnClaims</i>\
        \ - Losses on claims (Norwegian: Tap på krav)</li><li><i>ReversalOfInputValueAddedTax</i>\
        \ - Reversal of input value added tax (Norwegian: Tilbakeføring av inngående\
        \ merverdiavgift)</li><li><i>Withdrawals</i> - Withdrawals (Norwegian: Uttak)</li><li><i>AdjustmentVatCompensationRealProperty</i>\
        \ - Adjustment of value added tax (VAT) compensation for real estate (Norwegian:\
        \ Justering av merverdiavgiftskompensasjon for fast eiendom)</li><li><i>PurchasesEligibleForCompensation</i>\
        \ - Purchases eligible for compensation (Norwegian: Kjøp med kompensasjonsrett).\
        \ This specification can not be used by the API directly when creating vouchers/account\
        \ transactions, but will appear on account transactions on outgoing vat on\
        \ purchases on client's eligible for compensation.</li></ul>"
      enum:
      - None
      - Adjustment
      - LossesOnClaims
      - ReversalOfInputValueAddedTax
      - Withdrawals
      - AdjustmentVatCompensationRealProperty
      - PurchasesEligibleForCompensation
      nullable: true
      type: string
    OrderStatus:
      description: |-
        Enum defining the status of an order (outgoing invoice draft)<p>Members:</p><ul><li><i>Draft</i> - The order can be edited.</li><li><i>Confirmed</i> - The order is confirmed.
                        Used to confirm and lock the order from edit.
                        Can be unlocked by changing state to draft again.</li></ul>
      enum:
      - Draft
      - Confirmed
      nullable: true
      type: string
    SalesOrderCompletePostDto:
      additionalProperties: false
      description: The sales order complete post DTO contains only properties relevant
        to a sales order (invoice draft) in Go (this includes sales order lines) that
        can be created via POST-method in API.
      example:
        SalesOrderLines:
        - Accrual:
            BalanceAccountNo: 2970
            ResultAccountNo: 3901
            IsActive: true
            ResultAccountId: 123456
            BalanceAccountAgricultureDepartment: None
            ResultAccountAgricultureDepartment: null
            FromDate: 2023-01-01
            ToDate: 2023-12-31
            BalanceAccountId: 123456
          UnitOfMeasureCode: BX
          Description: Hello accounting world
          Dim3Id: 123456
          Dim2Id: 123456
          Dim1Code: dimcode111
          Dim1Id: 123456
          Dim2Code: dimcode222
          ExternalImportReference: 123abc
          ProductId: 123456
          SellersReferenceEmployeeId: 756319
          ProductUnitPrice: 200
          ProjectCode: 100A
          Allowance: 56.75
          LineType: Normal
          DepartmentCode: 1A
          ProductCode: 10A
          LocationCode: 4A
          LocationId: 123546
          ProjectId: 123456
          Quantity: 100
          SellersReferenceEmployeeNo: 1
          SortOrder: 0
          VatReturnSpecification: None
          Dim3Code: dimcode333
          UseStandardSalesAccount: true
          ProductUnitCost: 300
          DepartmentId: 123456
        - Accrual:
            BalanceAccountNo: 2970
            ResultAccountNo: 3901
            IsActive: true
            ResultAccountId: 123456
            BalanceAccountAgricultureDepartment: None
            ResultAccountAgricultureDepartment: null
            FromDate: 2023-01-01
            ToDate: 2023-12-31
            BalanceAccountId: 123456
          UnitOfMeasureCode: BX
          Description: Hello accounting world
          Dim3Id: 123456
          Dim2Id: 123456
          Dim1Code: dimcode111
          Dim1Id: 123456
          Dim2Code: dimcode222
          ExternalImportReference: 123abc
          ProductId: 123456
          SellersReferenceEmployeeId: 756319
          ProductUnitPrice: 200
          ProjectCode: 100A
          Allowance: 56.75
          LineType: Normal
          DepartmentCode: 1A
          ProductCode: 10A
          LocationCode: 4A
          LocationId: 123546
          ProjectId: 123456
          Quantity: 100
          SellersReferenceEmployeeNo: 1
          SortOrder: 0
          VatReturnSpecification: None
          Dim3Code: dimcode333
          UseStandardSalesAccount: true
          ProductUnitCost: 300
          DepartmentId: 123456
        SalesOrderStatus: Draft
        SalesPersonEmployeeNumber: 3
        Dim3Id: 123456
        Dim2Id: 123456
        Dim1Code: dimcode111
        Dim1Id: 123456
        Dim2Code: dimcode222
        ExternalImportReference: 123abc
        DeliveryDate: 2022-08-05
        CustomerNo: 10010
        CurrencyCode: NOK
        DeliveryTerm: DAP
        ContractNo: 123-244A
        PurchaseOrderReference: qwerty12345
        ImportedOrderNo: 23145
        ProjectCode: "100"
        CustomMatchingReference: 123ABC
        SalesOrderDate: 2022-08-05
        DepartmentCode: 1A
        BrandingThemeId: 123456
        PaymentTermId: 123456
        SalesPersonEmployeeId: 123456
        LocationCode: 4A
        LocationId: 123456
        ProjectId: 123456
        CurrencyExchangeRate: 6.027456183070403
        CustomerId: 123456
        PaymentTerm: 14
        RelatedInvoiceNo: 12345
        CustomerReference: 123ABC
        CustomerReferenceContactPersonId: 1
        ContactDeliveryAddressId: 0
        Dim3Code: dimcode333
        BrandingThemeCode: "4"
        DepartmentId: 123456
        DeliveryTermId: 47001
      properties:
        BrandingThemeCode:
          description: "The code of the branding theme associated with the sales order.\r\
            \nIf null in the header, the value may inherit from any project set on\
            \ the sales order, or from the clients default branding theme.\r\nNote\
            \ that if BrandingThemeId is set as well in the request, BrandingThemeId\
            \ takes precedence and BrandingThemeCode is ignored."
          example: "4"
          nullable: true
          type: string
        BrandingThemeId:
          description: "The id of the branding theme associated with the sales order.\r\
            \nIf null in the header, the value may inherit from any project set on\
            \ the sales order, or from the clients default branding theme.\r\nBranding\
            \ themes can be queried and identified using the Sales Settings endpoint."
          example: 123456
          format: int64
          nullable: true
          type: integer
        ContactDeliveryAddressId:
          description: "The id of the contact delivery address associated with the\
            \ sales order.\r\nContact delivery addresses can be queries and identified\
            \ using the Contact Delivery Addresses endpoint."
          format: int64
          nullable: true
          type: integer
        ContractNo:
          description: The contract number.
          example: 123-244A
          nullable: true
          type: string
        CurrencyCode:
          description: "The standard currency code for the sales order.\r\nCurrencies\
            \ active on the client can be queried using the AccountingSettings service.\r\
            \nCurrency codes follow the ISO4217 standard.\r\nDefaults to NOK, but\
            \ may inherit the value set on the Customer entity if null."
          example: NOK
          nullable: true
          type: string
        CurrencyExchangeRate:
          description: "The normalized currency exchange rate.\r\nAlways base 1."
          format: double
          nullable: true
          type: number
        CustomMatchingReference:
          description: "The custom matching reference of the sales order.\r\nThis\
            \ property will only have value on entries created through the API or\
            \ Import with CustomMatchingReference specified.\r\nThis property is used\
            \ for matching purposes in the customer sub-ledger account, where entries\
            \ posted with a CustomMatchingReference will be matched immediately with\
            \ existing entries in the sub-ledger that have the same CustomMatchingReference\
            \ and opposite amount (unless existing entries are already matched out)."
          example: 123ABC
          nullable: true
          type: string
        CustomerId:
          description: "The id of the customer associated with the sales order.\r\n\
            Customers can be queried and identified using the Customers endpoint."
          example: 123456
          format: int64
          nullable: true
          type: integer
        CustomerNo:
          description: "The customer number for the customer associated with the sales\
            \ order.\r\nNote that if CustomerId is set as well in the request, CustomerId\
            \ takes precedence and CustomerNo is ignored."
          example: 10010
          format: int64
          nullable: true
          type: integer
        CustomerReference:
          description: "The customer reference (ie buyers reference) of the sales\
            \ order.\r\nThis property is often used to give the receiver of the (eventual)\
            \ invoice a reference they are familiar with.\r\nIf CustomerReferenceContactPersonId\
            \ has value, the name of the customers contact person is returned on get,\r\
            \notherwise the \"Your Reference\" text used on the (eventual) invoice\
            \ will be returned."
          example: 123ABC
          nullable: true
          type: string
        CustomerReferenceContactPersonId:
          description: "The id of the customer reference contact person (ie buyers\
            \ reference) of the sales order.\r\nIf null, the value will be inherited\
            \ from the project or the customer associated with the sales order.\r\n\
            If set, the contact persons name will be set as the CustomerReference\
            \ on the sales order.\r\nContact persons can be queried and identified\
            \ using the Contact person endpoint."
          format: int64
          nullable: true
          type: integer
        DeliveryDate:
          description: "The delivery date of the sales order.\r\nWill default to the\
            \ date when the sales order is sent (converted to invoice) if not set\
            \ via import or api."
          example: 2022-08-05
          format: date
          nullable: true
          type: string
        DeliveryTerm:
          description: "The delivery term of the sales order.\r\nThe default set of\
            \ delivery terms provided in Go are incoterms, but any custom string can\
            \ be set.\r\nIf null, the value will be inherited from project, customer\
            \ or the client delivery term settings.\r\nNote that if DeliveryTermId\
            \ is set as well in the request, DeliveryTermId takes precedence and DeliveryTerm\
            \ is ignored."
          example: DAP
          nullable: true
          type: string
        DeliveryTermId:
          description: "The id of the delivery term of the sales order.\r\nIf null,\
            \ the value will be inherited from project, customer or the client delivery\
            \ term settings.\r\nDelivery terms can be queried and identified using\
            \ the Delivery terms endpoint."
          example: 47001
          format: int64
          nullable: true
          type: integer
        DepartmentCode:
          description: "The code of the department associated with the sales order.\r\
            \nThis is the department set in the header of the sales order.\r\nIf null\
            \ in the header, the value may inherit from the project, customer or the\
            \ employee creating the sales order (if created using the GUI) - in that\
            \ order.\r\nThe sales order lines will inherit this value if no other\
            \ department (or no department) is specified on the line.\r\nNote that\
            \ if DepartmentId is set as well in the request, DepartmentId takes precedence\
            \ and DepartmentCode is ignored.\r\nDepartmentCode = -1 means no department."
          example: 1A
          nullable: true
          type: string
        DepartmentId:
          description: "The id of the department associated with the sales order.\r\
            \nThis is the department set in the header of the sales order.\r\nIf null\
            \ in the header, the value may inherit from the project, customer or the\
            \ employee creating the sales order (if created using the GUI) - in that\
            \ order.\r\nThe sales order lines will inherit this value if no other\
            \ department (or no department) is specified on the line.\r\nDepartmentId\
            \ = -1 means no department.\r\nDepartments can be queried and identified\
            \ using the Departments endpoint."
          example: 123456
          format: int64
          nullable: true
          type: integer
        Dim1Code:
          description: "The code of the dimension 1 associated with the sales order.\r\
            \nThis is the dimension 1 set in the header of the sales order.\r\nThe\
            \ sales order lines might specify other dimension 1 values or no dimension\
            \ 1.\r\nNote that if Dim1Id is set as well in the request, Dim1Id takes\
            \ precedence and Dim1Code is ignored.\r\nDim1Code = -1 means no dimension\
            \ 1."
          example: dimcode111
          nullable: true
          type: string
        Dim1Id:
          description: "The id of the dimension 1 associated with the sales order.\r\
            \nThis is the dimension 1 set in the header of the sales order.\r\nThe\
            \ sales order lines might specify other dimension 1 values or no dimension\
            \ 1.\r\nDimension 1-3 are customizable dimensions that can be defined\
            \ and queried using the Custom Dimensions endpoint.\r\nDim1Id = -1 means\
            \ no dimension 1."
          example: 123456
          format: int64
          nullable: true
          type: integer
        Dim2Code:
          description: "The code of the dimension 2 associated with the sales order.\r\
            \nThis is the dimension 2 set in the header of the sales order.\r\nThe\
            \ sales order lines might specify other dimension 2 values or no dimension\
            \ 2.\r\nDim2Code = -1 means no dimension 2."
          example: dimcode222
          nullable: true
          type: string
        Dim2Id:
          description: "The id of the dimension 2 associated with the sales order.\r\
            \nThis is the dimension 2 set in the header of the sales order.\r\nThe\
            \ sales order lines might specify other dimension 2 values or no dimension\
            \ 2.\r\nDimension 1-3 are customizable dimensions that can be defined\
            \ and queried using the Custom Dimensions endpoint.\r\nDim2Id = -1 means\
            \ no dimension 2."
          example: 123456
          format: int64
          nullable: true
          type: integer
        Dim3Code:
          description: "The code of the dimension 3 associated with the sales order.\r\
            \nThis is the dimension 3 set in the header of the sales order.\r\nThe\
            \ sales order lines might specify other dimension 3 values or no dimension\
            \ 3.\r\nDim3Code = -1 means no dimension 3."
          example: dimcode333
          nullable: true
          type: string
        Dim3Id:
          description: "The id of the dimension 3 associated with the sales order.\r\
            \nThis is the dimension 3 set in the header of the sales order.\r\nThe\
            \ sales order lines might specify other dimension 3 values or no dimension\
            \ 3.\r\nDimension 1-3 are customizable dimensions that can be defined\
            \ and queried using the Custom Dimensions endpoint.\r\nDim3Id = -1 means\
            \ no dimension 3."
          example: 123456
          format: int64
          nullable: true
          type: integer
        ExternalImportReference:
          description: "The ExternalImportReference associated with the sales order.\r\
            \nThis property can be set by integrations creating sales orders, in order\
            \ to reference the external system and ensure a duplicate check (only\
            \ one instance of the reference can exist for the object type).\r\nCan\
            \ be used to correlate/duplicate check transactions."
          example: 123abc
          nullable: true
          type: string
        ImportedOrderNo:
          description: "The imported order number.\r\nCan only be set on sales orders\
            \ created using the api or import, and on vouchers posted directly using\
            \ the api or an import.\r\nCan be used to reference the order number in\
            \ the external system.\r\nThe imported order number is visible on the\
            \ sales order in the Go GUI."
          example: 23145
          format: int64
          nullable: true
          type: integer
        LocationCode:
          description: "The code of the location dimension associated with the sales\
            \ order.\r\nThis is the location set in the header of the sales order.\r\
            \nThe sales order lines will inherit this value if no other location (or\
            \ no location) is specified on the line.\r\nNote that if LocationId is\
            \ set as well in the request, LocationId takes precedence and LocationCode\
            \ is ignored.\r\nLocationCode = -1 means no location."
          example: 4A
          nullable: true
          type: string
        LocationId:
          description: "The id of the location dimension associated with the sales\
            \ order.\r\nThis is the location set in the header of the sales order.\r\
            \nThe sales order lines will inherit this value if no other location (or\
            \ no location) is specified on the line.\r\nLocations can be queried and\
            \ identified using the Locations endpoint.\r\nLocationId = -1 means no\
            \ location."
          example: 123456
          format: int64
          nullable: true
          type: integer
        PaymentTerm:
          description: "The payment term of the sales order.\r\nThis is the default\
            \ number of days after an invoice is sent until it is due.\r\nIf null,\
            \ the value will be inherited from project, customer or the client payment\
            \ term settings.\r\nNote that if PaymentTermId is set as well in the request,\
            \ PaymentTermId takes precedence and PaymentTerm is ignored."
          example: 14
          format: int32
          nullable: true
          type: integer
        PaymentTermId:
          description: "The id of the payment term of the sales order.\r\nThis is\
            \ the default number of days after an invoice is sent until it is due.\r\
            \nIf null, the value will be inherited from project, customer or the client\
            \ payment term settings.\r\nPayment terms can be queried and identified\
            \ using the Payment terms endpoint."
          example: 123456
          format: int64
          nullable: true
          type: integer
        ProjectCode:
          description: "The code of the project associated with the sales order.\r\
            \nThis is the project set in the header of the order.\r\nThe sales order\
            \ lines will inherit this value if no other project (or no project) is\
            \ specified on the line.\r\nNote that if ProjectId is set as well in the\
            \ request, ProjectId takes precedence and ProjectCode is ignored.\r\n\
            ProjectCode = -1 means no project."
          example: "100"
          nullable: true
          type: string
        ProjectId:
          description: "The id of the project associated with the sales order.\r\n\
            This is the project set in the header of the order.\r\nThe sales order\
            \ lines will inherit this value if no other project (or no project) is\
            \ specified on the line.\r\nProjects can be queried and identified using\
            \ the Projects endpoint.\r\nProjectId = -1 means no project."
          example: 123456
          format: int64
          nullable: true
          type: integer
        PurchaseOrderReference:
          description: "The purchase order reference on the sales order.\r\nThe property\
            \ can be used to reference purchase order places by the customer."
          example: qwerty12345
          nullable: true
          type: string
        RelatedInvoiceNo:
          description: "The related invoice number.\r\nCan only be set for sales orders\
            \ that are credit note drafts.\r\nIf set, this property will reference\
            \ the original invoice being credited."
          example: 12345
          format: int64
          nullable: true
          type: integer
        SalesOrderDate:
          description: "The sales order date.\r\nWill default to the date when the\
            \ sales order is sent (converted to invoice) if not set via import or\
            \ api."
          example: 2022-08-05
          format: date
          nullable: true
          type: string
        SalesOrderLines:
          description: The sales order lines.
          items:
            $ref: '#/components/schemas/SalesOrderLinePostDto'
          nullable: true
          type: array
        SalesOrderStatus:
          $ref: '#/components/schemas/OrderStatus'
        SalesPersonEmployeeId:
          description: "The (employee) id of the sales person associated with the\
            \ sales order.\r\nIf null, the sales person on the customer this sales\
            \ order relates to is used or the default sales person from the SalesSettings.\r\
            \nEmployees can be queried and identified using the Employees endpoint."
          example: 123456
          format: int64
          nullable: true
          type: integer
        SalesPersonEmployeeNumber:
          description: "The employee number of the sales person associated with the\
            \ sales order.\r\nIf null, the sales person on the customer this sales\
            \ order relates to is used or the default sales person from the SalesSettings.\r\
            \nNote that if SalesPersonEmployeeId is set as well in the request, SalesPersonEmployeeId\
            \ takes precedence and SalesPersonEmployeeNumber is ignored."
          example: 3
          format: int64
          nullable: true
          type: integer
      type: object
    SalesOrderLinePostDto:
      additionalProperties: false
      description: The sales order line post DTO contains only properties relevant
        to a sales order line in Go that can be created via POST-method in API.
      example:
        Accrual:
          BalanceAccountNo: 2970
          ResultAccountNo: 3901
          IsActive: true
          ResultAccountId: 123456
          BalanceAccountAgricultureDepartment: None
          ResultAccountAgricultureDepartment: null
          FromDate: 2023-01-01
          ToDate: 2023-12-31
          BalanceAccountId: 123456
        UnitOfMeasureCode: BX
        Description: Hello accounting world
        Dim3Id: 123456
        Dim2Id: 123456
        Dim1Code: dimcode111
        Dim1Id: 123456
        Dim2Code: dimcode222
        ExternalImportReference: 123abc
        ProductId: 123456
        SellersReferenceEmployeeId: 756319
        ProductUnitPrice: 200
        ProjectCode: 100A
        Allowance: 56.75
        LineType: Normal
        DepartmentCode: 1A
        ProductCode: 10A
        LocationCode: 4A
        LocationId: 123546
        ProjectId: 123456
        Quantity: 100
        SellersReferenceEmployeeNo: 1
        SortOrder: 0
        VatReturnSpecification: None
        Dim3Code: dimcode333
        UseStandardSalesAccount: true
        ProductUnitCost: 300
        DepartmentId: 123456
      properties:
        Accrual:
          $ref: '#/components/schemas/SalesOrderAccrualPostDto'
        Allowance:
          description: "The percent of allowance/discount or allowance charge for\
            \ this sales order line.\r\nThe value is between -1000 and 100 (reflects\
            \ as -1000% or 100% in the GUI).\r\nNegative percentage means the line\
            \ is set with allowance charge.\r\nPositive percentage means the line\
            \ is set up with discount/allowance.\r\nIf null, the allowance may inherit\
            \ the value set on the Customer entity, if the value is set on the customer."
          example: 56.75
          format: double
          nullable: true
          type: number
        DepartmentCode:
          description: "The code of the department associated with the sales order\
            \ line.\r\nWill inherit department code from sales order head if not specifically\
            \ set on the line.\r\nNote that if DepartmentId is set as well in the\
            \ request, DepartmentId takes precedence and DepartmentCode is ignored.\r\
            \nDepartmentCode = -1 means no department."
          example: 1A
          nullable: true
          type: string
        DepartmentId:
          description: "The id of the department associated with the sales order line.\r\
            \nWill inherit department id from sales order head if not specifically\
            \ set on the line.\r\nDepartment Id = -1 means no department.\r\nDepartments\
            \ can be queried and identified using the Departments endpoint."
          example: 123456
          format: int64
          nullable: true
          type: integer
        Description:
          description: "The description for the sales order line.\r\nWhen product\
            \ is set on the line, the description will be the name of the product\
            \ if no other description is specifically set on the line.\r\nIt is usually\
            \ recommended to set a specific description in order to control the information\
            \ on the line."
          example: Hello accounting world
          nullable: true
          type: string
        Dim1Code:
          description: "The code of the dimension 1 associated with the sales order\
            \ line.\r\nWill inherit dimension 1 code from sales order head if not\
            \ specifically set on the line.\r\nNote that if Dim1Id is set as well\
            \ in the request, Dim1Id takes precedence and Dim1Code is ignored.\r\n\
            Dim1Code = -1 means no dimension 1."
          example: dimcode111
          nullable: true
          type: string
        Dim1Id:
          description: "The id of the dimension 1 associated with the sales order\
            \ line.\r\nWill inherit dimension 1 id from sales order head if not specifically\
            \ set on the line.\r\nDimension 1-3 are customizable dimensions that can\
            \ be defined and queried using the Custom Dimensions endpoint.\r\nDim1Id\
            \ = -1 means no dimension 1."
          example: 123456
          format: int64
          nullable: true
          type: integer
        Dim2Code:
          description: "The code of the dimension 2 associated with the sales order\
            \ line.\r\nWill inherit dimension 2 code from sales order head if not\
            \ specifically set on the line.\r\nNote that if Dim2Id is set as well\
            \ in the request, Dim2Id takes precedence and Dim2Code is ignored.\r\n\
            Dim2Code = -1 means no dimension 2."
          example: dimcode222
          nullable: true
          type: string
        Dim2Id:
          description: "The id of the dimension 2 associated with the sales order\
            \ line.\r\nWill inherit dimension 2 id from sales order head if not specifically\
            \ set on the line.\r\nDimension 1-3 are customizable dimensions that can\
            \ be defined and queried using the Custom Dimensions endpoint.\r\nDim2Id\
            \ = -1 means no dimension 2."
          example: 123456
          format: int64
          nullable: true
          type: integer
        Dim3Code:
          description: "The code of the dimension 3 associated with the sales order\
            \ line.\r\nWill inherit dimension 3 code from sales order head if not\
            \ specifically set on the line.\r\nNote that if Dim3Id is set as well\
            \ in the request, Dim3Id takes precedence and Dim3Code is ignored.\r\n\
            Dim3Code = -1 means no dimension 3."
          example: dimcode333
          nullable: true
          type: string
        Dim3Id:
          description: "The id of the dimension 3 associated with the sales order\
            \ line.\r\nWill inherit dimension 3 id from sales order head if not specifically\
            \ set on the line.\r\nDimension 1-3 are customizable dimensions that can\
            \ be defined and queried using the Custom Dimensions endpoint.\r\nDim3Id\
            \ = -1 means no dimension 3."
          example: 123456
          format: int64
          nullable: true
          type: integer
        ExternalImportReference:
          description: "The external import reference for the sales order line.\r\n\
            This property can be set by integrations posting vouchers in Go or creating\
            \ sales orders (invoice drafts), in order to reference the external system's\
            \ invoice line and ensure a duplicate check (only one instance of the\
            \ reference can exist within each invoice object).\r\nCan be used to correlate/duplicate\
            \ check transaction."
          example: 123abc
          nullable: true
          type: string
        LineType:
          $ref: '#/components/schemas/VoucherLineType'
        LocationCode:
          description: "The code of the location dimension associated with the sales\
            \ order line.\r\nWill inherit location code from sales order head if not\
            \ specifically set on the line.\r\nNote that if LocationId is set as well\
            \ in the request, LocationId takes precedence and LocationCode is ignored.\r\
            \nLocationCode = -1 means no location."
          example: 4A
          nullable: true
          type: string
        LocationId:
          description: "The id of the location dimension associated with the sales\
            \ order line.\r\nWill inherit location id from sales order head if not\
            \ specifically set on the line.\r\nLocations can be queried and identified\
            \ using the Locations endpoint.\r\nLocationId = -1 means no location."
          example: 123546
          format: int64
          nullable: true
          type: integer
        ProductCode:
          description: "The code of the product associated with the sales order line.\r\
            \nThe product object in Go contain information of sales account\r\n(in\
            \ effect which sales account number is used when the order is invoiced,\
            \ and which vat code option that can be applied).\r\nPlease refer to our\
            \ workflow description for more details.\r\nNote that if ProductId is\
            \ set as well in the request, ProductId takes precedence and ProductCode\
            \ is ignored."
          example: 10A
          nullable: true
          type: string
        ProductId:
          description: "The id of the product associated with the sales order line.\r\
            \nThe product-object in Go contain information of sales account\r\n(in\
            \ effect which sales account number is used when the order is invoiced,\
            \ and which VAT code option that can be applied).\r\nProducts can be queried\
            \ and identified using the Products endpoint."
          example: 123456
          format: int64
          nullable: true
          type: integer
        ProductUnitCost:
          description: "The cost per unit of the product associated with the sales\
            \ order line.\r\nWill inherit (on creation) the unit cost set on the product\
            \ object if not specifically set on the line."
          example: 300
          format: double
          nullable: true
          type: number
        ProductUnitPrice:
          description: "The sales price per unit of the product associated with the\
            \ sales order line.\r\nWill inherit (on creation) the sales price set\
            \ on the product object if not specifically set on the line."
          example: 200
          format: double
          nullable: true
          type: number
        ProjectCode:
          description: "The code of the project associated with the sales order line.\r\
            \nWill inherit project code from sales order head if not specifically\
            \ set on the line.\r\nNote that if ProjectId is set as well in the request,\
            \ ProjectId takes precedence and ProjectCode is ignored.\r\nProjectCode\
            \ = -1 means no project."
          example: 100A
          nullable: true
          type: string
        ProjectId:
          description: "The id of the project associated with the sales order line.\r\
            \nWill inherit project id from sales order head if not specifically set\
            \ on the line.\r\nNote that if ProjectCode is set as well in the request,\
            \ ProjectId takes precedence and ProjectCode is ignored.\r\nProjectId\
            \ = -1 means no project."
          example: 123456
          format: int64
          nullable: true
          type: integer
        Quantity:
          description: "The quantity for the sales order line.\r\nRequired to set\
            \ if the line contain a product code.\r\nNOTE Setting a negative quantity,\
            \ will result in the line being interpreted as a creditation of the product\
            \ quantity.\r\nIf the sum of the lines for the total sales order is negative,\
            \ the sales order is considered a credit note draft."
          example: 100
          format: double
          nullable: true
          type: number
        SellersReferenceEmployeeId:
          description: "The id of the employee set as the seller reference for the\
            \ sales order line.\r\nWill inherit the seller reference from sales order\
            \ head if not specifically set on the line.\r\nNote that if SellersReferenceEmployeeNo\
            \ is set as well in the request, SellersReferenceEmployeeId takes precedence\
            \ and SellersReferenceEmployeeNo is ignored."
          example: 756319
          format: int64
          nullable: true
          type: integer
        SellersReferenceEmployeeNo:
          description: "The number of the employee set as the seller reference for\
            \ the sales order line.\r\nWill inherit the seller reference from sales\
            \ order head if not specifically set on the line.\r\nNote that if SellersReferenceEmployeeId\
            \ is set as well in the request, SellersReferenceEmployeeId takes precedence\
            \ and SellersReferenceEmployeeNo is ignored."
          example: 1
          format: int64
          nullable: true
          type: integer
        SortOrder:
          description: "The sort order of the sales order line.\r\nSort order start\
            \ at 0.\r\nThe first line as viewed from the GUI, will have sortOrder\
            \ = 0."
          example: 0
          format: int32
          nullable: true
          type: integer
        UnitOfMeasureCode:
          $ref: '#/components/schemas/UnitOfMeasureType'
        UseStandardSalesAccount:
          description: "Whether the standard sales account of the product set on the\
            \ sales order line is used.\r\n             \r\nIf false, the optional\
            \ sales account set on the product is used.\r\nQuery the product endpoint\
            \ to retrieve the sales account information on the product.\r\n      \
            \          \r\nIf set to null, the standard sales account will be inherited\
            \ from the customer account's VAT-free\r\nsetting. In other words, if\
            \ the VAT-free setting is enabled, the StandardSalesAccount will be set\
            \ to\r\nfalse and the optional sales account set on the product is used.\r\
            \n            \r\nThe concept of sales accounts is also explained in the\
            \ common workflow articles."
          example: true
          nullable: true
          type: boolean
        VatReturnSpecification:
          $ref: '#/components/schemas/VatReturnSpecification'
      type: object
    SalesOrderAccrualPostDto:
      additionalProperties: false
      description: "Accrual (Norwegian: Periodisering) for sales order line"
      example:
        BalanceAccountNo: 2970
        ResultAccountNo: 3901
        IsActive: true
        ResultAccountId: 123456
        BalanceAccountAgricultureDepartment: None
        ResultAccountAgricultureDepartment: null
        FromDate: 2023-01-01
        ToDate: 2023-12-31
        BalanceAccountId: 123456
      properties:
        BalanceAccountAgricultureDepartment:
          $ref: '#/components/schemas/AgricultureDepartment'
        BalanceAccountId:
          description: "The account id of the balance account used for the accrual\
            \ balance\r\n(norwegian: balansekonto benyttet for periodiseringen).\r\
            \nNote that if BalanceAccountNo is set as well in the request, BalanceAccountId\
            \ takes precedence and BalanceAccountNo is ignored."
          example: 123456
          format: int64
          nullable: true
          type: integer
        BalanceAccountNo:
          description: "The account number of the balance account used for the accrual\
            \ balance\r\n(norwegian: balansekonto benyttet for periodiseringen).\r\
            \nNote that if BalanceAccountId is set as well in the request, BalanceAccountId\
            \ takes precedence and BalanceAccountNo is ignored."
          example: 2970
          format: int64
          nullable: true
          type: integer
        FromDate:
          description: The start date of the accrual.
          example: 2023-01-01
          format: date
          type: string
        IsActive:
          description: Value indicating whether the accrual is active or not.
          example: true
          type: boolean
        ResultAccountAgricultureDepartment:
          $ref: '#/components/schemas/AgricultureDepartment'
        ResultAccountId:
          description: "The account id of the result account used for the posting\
            \ of the accrued revenue\r\n(norwegian: resultatkonto benyttet for periodiseringen).\r\
            \nNote that if ResultAccountNo is set as well in the request, ResultAccountId\
            \ takes precedence and ResultAccountNo is ignored."
          example: 123456
          format: int64
          nullable: true
          type: integer
        ResultAccountNo:
          description: "The account number of the result account used for the posting\
            \ of the accrued revenue\r\n(norwegian: resultatkonto benyttet for periodiseringen).\r\
            \nNote that if ResultAccountId is set as well in the request, ResultAccountId\
            \ takes precedence and ResultAccountNo is ignored."
          example: 3901
          format: int64
          nullable: true
          type: integer
        ToDate:
          description: The end date of the accrual.
          example: 2023-12-31
          format: date
          type: string
      type: object
    ClientBankAccountDto:
      additionalProperties: false
      description: Data transfer object for the client bank account.
      example:
        BankName: DNB
        IsPrimaryAccount: true
        GeneralLedgerAccountId: 123456
        BicSwift: DNBANOKK
        OverdraftLimit: 12500
        IsActive: false
        GeneralLedgerAccountNo: 1920
        CreatedDateTimeOffset: 2024-03-04T11:11:00.1234567Z
        AgricultureDepartment: None
        ActiveOutgoingPaymentServices: true
        CurrencyCode: NOK
        AllowOverdraft: true
        IsClientTrustAccount: false
        ActiveIncomingPaymentService: true
        Id: 12345
        CountryCode: "NO"
        BankAccountNumber: "12345678903"
        LastChangedDateTimeOffset: 2024-03-04T11:11:00.1234567Z
      properties:
        ActiveIncomingPaymentService:
          description: A value indicating whether an incoming payment service integration
            is active on this bank account (typically an OCR service).
          example: true
          nullable: true
          readOnly: true
          type: boolean
        ActiveOutgoingPaymentServices:
          description: A value indicating whether an outgoing payment service (remittance
            service) integration is active on this bank account.
          example: true
          nullable: true
          readOnly: true
          type: boolean
        AgricultureDepartment:
          $ref: '#/components/schemas/AgricultureDepartment'
        AllowOverdraft:
          description: "A value indicating whether this bank account can be overdrawn\
            \ (Norwegian: Kassekreditt)."
          example: true
          nullable: true
          type: boolean
        BankAccountNumber:
          description: The bank account number.
          example: "12345678903"
          maxLength: 50
          minLength: 1
          type: string
        BankName:
          description: The name of the bank.
          example: DNB
          maxLength: 400
          nullable: true
          type: string
        BicSwift:
          description: The BIC Swift code of the bank.
          example: DNBANOKK
          maxLength: 50
          minLength: 1
          type: string
        CountryCode:
          description: The ISO 3166-1 alfa-2 country code (two characters).
          example: "NO"
          maxLength: 2
          minLength: 2
          type: string
        CreatedDateTimeOffset:
          description: The timestamp of the created date of the client bank account.
            UTC time.
          example: 2024-03-04T11:11:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        CurrencyCode:
          description: The standard code of the currency associated with the client
            bank account.
          example: NOK
          nullable: true
          type: string
        GeneralLedgerAccountId:
          description: The identifier of the general ledger account this bank account
            is associated with.
          example: 123456
          format: int64
          type: integer
        GeneralLedgerAccountNo:
          description: The general ledger account this bank account is associated
            with.
          example: 1920
          format: int64
          readOnly: true
          type: integer
        Id:
          description: The identifier of the client bank account. This identifier
            is unique and assigned by PowerOffice Go when a new entity is saved.
          example: 12345
          format: int64
          readOnly: true
          type: integer
        IsActive:
          description: A value indicating whether this bank account is active. Inactive
            bank accounts disable the usage of that bank account in the GUI.
          example: false
          nullable: true
          type: boolean
        IsClientTrustAccount:
          description: "A value indicating whether this is a bank account containing\
            \ client trust funds (example use cases: real estate brokers, lawyers)."
          example: false
          nullable: true
          type: boolean
        IsPrimaryAccount:
          description: "A value indicating whether this is the primary account for\
            \ the clients day to day operations (Norwegian: Driftskonto)."
          example: true
          nullable: true
          readOnly: true
          type: boolean
        LastChangedDateTimeOffset:
          description: The timestamp of the last change of the client bank account.
            UTC time.
          example: 2024-03-04T11:11:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        OverdraftLimit:
          description: "The overdraft limit for the bank account, if set. Available\
            \ only for bank accounts with overdraft enabled."
          example: 12500
          format: double
          nullable: true
          type: number
      required:
      - BankAccountNumber
      - BicSwift
      - CountryCode
      type: object
    ContactDeliveryAddressDto:
      additionalProperties: false
      description: Properties of a contact delivery address.
      example:
        AddressLine2: "Att: Ola Nordmann"
        AddressLine1: Postboks 404
        ZipCode: "0161"
        IsPrimary: true
        City: Oslo
        ContactId: 12345
        Id: 12345
        CountryCode: "NO"
        CreatedDateTimeOffset: 2022-07-11T12:46:59.1234567Z
        ExternalCode: 123ABC
        LastChangedDateTimeOffset: 2022-07-11T12:46:59.1234567Z
      properties:
        AddressLine1:
          description: The first (main) address line.
          example: Postboks 404
          maxLength: 200
          nullable: true
          type: string
        AddressLine2:
          description: The second address line.
          example: "Att: Ola Nordmann"
          maxLength: 200
          nullable: true
          type: string
        City:
          description: The city.
          example: Oslo
          maxLength: 100
          nullable: true
          type: string
        ContactId:
          description: "The identifier of the contact (customer, employee or supplier)\
            \ this delivery address is assigned to.\r\nCannot be set directly, but\
            \ is set based on the contact argument in the request URL."
          example: 12345
          format: int64
          readOnly: true
          type: integer
        CountryCode:
          description: "The ISO 3166-1 alfa-2 country code (two characters).\r\nDefaults\
            \ to \"NO\" if not set."
          example: "NO"
          nullable: true
          type: string
        CreatedDateTimeOffset:
          description: The timestamp of when this address was created.
          example: 2022-07-11T12:46:59.1234567Z
          format: date-time
          readOnly: true
          type: string
        ExternalCode:
          description: "The external code\r\nThis field is not available in the GUI,\
            \ but can be used by the integrating party to reference the address in\
            \ the external system.\r\nThe field must be unique (for each address)."
          example: 123ABC
          maxLength: 50
          nullable: true
          type: string
        Id:
          description: "The identifier of the address.\r\nThis identifier is unique\
            \ and assigned by PowerOffice Go when a new entity is saved, and should\
            \ be provided when an entity should be edited (PATCH), deleted (DELETE)\
            \ or retrieved specifically (GET)."
          example: 12345
          format: int64
          readOnly: true
          type: integer
        IsPrimary:
          description: "A value indicating whether this delivery address is the primary\
            \ delivery address for this contact.\r\nSales orders created, will default\
            \ inherit the primary delivery address of the customer, if not overridden.\r\
            \nThe first delivery address created for a contact will automatically\
            \ be set as primary."
          example: true
          nullable: true
          readOnly: true
          type: boolean
        LastChangedDateTimeOffset:
          description: The last changed timestamp of this address.
          example: 2022-07-11T12:46:59.1234567Z
          format: date-time
          readOnly: true
          type: string
        ZipCode:
          description: The zip code (postal code).
          example: "0161"
          maxLength: 50
          nullable: true
          type: string
      type: object
    ContactDeliveryAddressPostDto:
      additionalProperties: false
      description: Properties for creating a contact delivery address.
      example:
        AddressLine2: "Att: Ola Nordmann"
        AddressLine1: Postboks 404
        ZipCode: "0161"
        IsPrimary: true
        City: Oslo
        CountryCode: "NO"
        ExternalCode: 123ABC
      properties:
        AddressLine1:
          description: The first (main) address line.
          example: Postboks 404
          maxLength: 200
          nullable: true
          type: string
        AddressLine2:
          description: The second address line.
          example: "Att: Ola Nordmann"
          maxLength: 200
          nullable: true
          type: string
        City:
          description: The city.
          example: Oslo
          maxLength: 100
          nullable: true
          type: string
        CountryCode:
          description: "The ISO 3166-1 alfa-2 country code (two characters).\r\nDefaults\
            \ to \"NO\" if not set."
          example: "NO"
          nullable: true
          type: string
        ExternalCode:
          description: "The external code\r\nThis field is not available in the GUI,\
            \ but can be used by the integrating party to reference the address in\
            \ the external system.\r\nThe field must be unique (for each address)."
          example: 123ABC
          maxLength: 50
          nullable: true
          type: string
        IsPrimary:
          description: "A value indicating whether this delivery address is the primary\
            \ delivery address for this contact.\r\nSales orders created, will default\
            \ inherit the primary delivery address of the customer, if not overridden.\r\
            \nThe first delivery address created for a contact will automatically\
            \ be set as primary."
          example: true
          nullable: true
          type: boolean
        ZipCode:
          description: The zip code (postal code).
          example: "0161"
          maxLength: 50
          nullable: true
          type: string
      required:
      - City
      - ZipCode
      type: object
    EmployeeDto:
      additionalProperties: false
      description: The Employee DTO contains properties relevant to an employee object
        in Go
      example:
        HiredDate: 2003-07-15
        NationalIdNumber: "30011679680"
        InternationalIdReportToAltinn: false
        ExternalImportReference: abc123-def456
        Gender: Male
        JobTitle: Top Salesman
        StartDate: 2000-01-23
        TravelExpenseBankAccountId: 123546
        Number: 2
        SalaryBankAccountId: 123546
        ManagerEmployeeNo: 10
        ExpenseBankAccountId: 123546
        ContactCreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        DateOfBirth: 2003-07-15
        DepartmentCode: 1A
        EmployeeCreatedDateTimeOffset: 2021-09-30T00:00:00Z
        MailAddress:
          AddressLine2: "Att: Ola Nordmann"
          AddressLine1: Postboks 404
          ZipCode: "0161"
          City: Oslo
          Id: 12345
          CountryCode: "NO"
          ExternalCode: 123ABC
          LastChangedDateTimeOffset: 2022-07-11T12:46:59.1234567Z
        ContactGroupIds:
        - 0
        - 0
        FirstName: Henry
        SubledgerAccountId: 12345
        InternationalIdType: PassportNumber
        LocationCode: 1B
        LocationId: 123546
        ExternalNumber: 12345
        InternationalIdNumber: AB123456
        EndDate: 2003-07-15
        EmailAddress: abc@test.yxz
        IsArchived: false
        InternationalIdCountryCode: SE
        PhoneNumber: "+4712345678"
        DepartmentId: 123456
        Id: 12345
        LastName: Ford
        CreatedFromImportJournalId: 21d4ddf1-c8bf-4874-8879-b70468fa1032
        LastChangedDateTimeOffset: 2021-09-30T15:12:11.1234567Z
        ManagerEmployeeId: 123546
      properties:
        ContactCreatedDateTimeOffset:
          description: "The timestamp the contact entity was created.\r\nThis might\
            \ differ from the employee created timestamp, if the contact was first\
            \ created as a customer/supplier."
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        ContactGroupIds:
          description: "The contact group ids the current contact is part of, or sets\
            \ contact group id you want to add this contact to."
          items:
            format: int64
            type: integer
          nullable: true
          type: array
        CreatedFromImportJournalId:
          description: "The created from import journal identifier (guid).\r\nIf the\
            \ employee was created from an import, this property will contain the\
            \ Id of the Import that created this entity."
          example: 21d4ddf1-c8bf-4874-8879-b70468fa1032
          format: uuid
          nullable: true
          readOnly: true
          type: string
        DateOfBirth:
          description: The date of birth of the employee.
          example: 2003-07-15
          format: date
          nullable: true
          type: string
        DepartmentCode:
          description: "The code of the department this employee is associated with.\r\
            \nUse the Departments endpoint to retrieve and/or create departments."
          example: 1A
          nullable: true
          readOnly: true
          type: string
        DepartmentId:
          description: "The id of the department this employee is associated with.\r\
            \nUse the Departments endpoint to retrieve and/or create departments."
          example: 123456
          format: int64
          nullable: true
          type: integer
        EmailAddress:
          description: The (general) e-mail address registered for the employee.
          example: abc@test.yxz
          nullable: true
          type: string
        EmployeeCreatedDateTimeOffset:
          description: "The timestamp the contact first became an employee.\r\nFor\
            \ contacts being only employees, this property will be equal to the contactCreatedDateTimeOffset\
            \ property."
          example: 2021-09-30T00:00:00Z
          format: date-time
          readOnly: true
          type: string
        EndDate:
          description: "The end date of the employment of this employee.\r\nNote that\
            \ this field has no relation to the employment entity that is reported\
            \ (a-melding)."
          example: 2003-07-15
          format: date
          nullable: true
          type: string
        ExpenseBankAccountId:
          description: "The identifier of the bank account used for expense payments\
            \ to the employee (norwegian: \"utlegg\")"
          example: 123546
          format: int64
          nullable: true
          readOnly: true
          type: integer
        ExternalImportReference:
          description: "The external import reference of the employee.\r\nThis field\
            \ is not available in the GUI, but can be used by the integrating party\
            \ to reference the external system.\r\nThe field must be unique within\
            \ each class of Contacts (unique for customers, suppliers or employees).\r\
            \nMax length 50 characters."
          example: abc123-def456
          nullable: true
          type: string
        ExternalNumber:
          description: "The external number of the employee.\r\nThis field can be\
            \ used to reference the employee number in the external system, if the\
            \ employee numbers are not kept in 1:1 sync between Go and the external\
            \ system.\r\nThe field is available in the GUI with the name \"External\
            \ Code\".\r\nThe field must be unique within each class of Contacts (unique\
            \ for customers, suppliers or employees).\r\nNote that in file imports\
            \ to Go (including file imports using the ImportFile endpoint), this number\
            \ has precedence over the employee number. I.e. when importing vouchers\
            \ with employee sub-ledger entries using a file, with the employee number\
            \ 1 set in the file, the import will choose the employee with ExternalNumber\
            \ 1 over the employee with Number 1. This is the case for file imports\
            \ only."
          example: 12345
          format: int64
          nullable: true
          type: integer
        FirstName:
          description: "The first name of the employee.\r\nRequired when creating\
            \ new employees (POST operations)."
          example: Henry
          nullable: true
          type: string
        Gender:
          $ref: '#/components/schemas/Gender'
        HiredDate:
          description: The date the employee was hired.
          example: 2003-07-15
          format: date
          nullable: true
          type: string
        Id:
          description: "The identifier of the contact.\r\nThis identifier is unique\
            \ and assigned by PowerOffice Go when a new entity is saved, and should\
            \ be provided when an entity should be edited (PATCH), deleted (DELETE)\
            \ or retrieved specifically (GET).\r\nThe employee object is a contact\
            \ entity, meaning the id might be shared with a customer and/or a supplier\
            \ if the contact is registered as both an employee and customer/supplier\
            \ in Go."
          example: 12345
          format: int64
          readOnly: true
          type: integer
        InternationalIdCountryCode:
          description: "The ISO 3166-1 alfa-2 country code (Two characters).\r\nRelevant\
            \ (and required) only if InternationalIdReportToAltinn is set to true."
          example: SE
          nullable: true
          type: string
        InternationalIdNumber:
          description: "The international Id number. For privacy reasons queries returns\
            \ 'hidden' if this field has a value and null if it's empty.\r\nAccess\
            \ to retrieving the value must be granted by the api team by a special\
            \ privilege (which also grant access to SSN and gender).\r\nRelevant (and\
            \ required) only if InternationalIdReportToAltinn is set to true."
          example: AB123456
          nullable: true
          type: string
        InternationalIdReportToAltinn:
          description: Value indicating whether International ID should be reported
            to Altinn (Related to tax card and payroll reporting).
          example: false
          nullable: true
          type: boolean
        InternationalIdType:
          $ref: '#/components/schemas/InternationalIdType'
        IsArchived:
          description: "Value indicating whether this contact entity is/should be\
            \ archived (set inactive).\r\nCannot be set if the contact have ledger\
            \ balances (as either an employee, a customer or as a supplier)."
          example: false
          nullable: true
          type: boolean
        JobTitle:
          description: The job title of the employee.
          example: Top Salesman
          nullable: true
          type: string
        LastChangedDateTimeOffset:
          description: "The timestamp of the last change of the employee.\r\nNote\
            \ that this property do not reflect changes in sub-entities (address,\
            \ employment relationship settings etc.) related to the contact."
          example: 2021-09-30T15:12:11.1234567Z
          format: date-time
          readOnly: true
          type: string
        LastName:
          description: "The last name of the employee.\r\nRequired when creating new\
            \ employees (POST operations)."
          example: Ford
          nullable: true
          type: string
        LocationCode:
          description: "The code of the location this employee is associated with.\r\
            \nUse the Locations endpoint to retrieve and/or create locations."
          example: 1B
          nullable: true
          readOnly: true
          type: string
        LocationId:
          description: "The id of the location this employee is associated with.\r\
            \nUse the Locations endpoint to retrieve and/or create locations."
          example: 123546
          format: int64
          nullable: true
          type: integer
        MailAddress:
          $ref: '#/components/schemas/ContactAddressDto'
        ManagerEmployeeId:
          description: The employee id of the manager of the employee.
          example: 123546
          format: int64
          nullable: true
          type: integer
        ManagerEmployeeNo:
          description: The employee number of the manager of the employee.
          example: 10
          format: int64
          nullable: true
          readOnly: true
          type: integer
        NationalIdNumber:
          description: "The (Norwegian) national identity number (also called Social\
            \ Security Number) or D-number.\r\nFor privacy reasons queries returns\
            \ 'hidden' if this field has a value and null if empty.\r\nAccess to retrieving\
            \ the value must be granted by the api team by a special privilege (which\
            \ also grant access to InternationalId and gender).\r\nNote that the number\
            \ is validated for the correct syntax when set."
          example: "30011679680"
          nullable: true
          type: string
        Number:
          description: "The number of the employee.\r\nThe number will also represent\
            \ the employee ledger account, used for employee ledger transactions.\r\
            \nWhen creating new employees and setting the number (as opposed to letting\
            \ Go assign the next available number if left blank), the number must\
            \ be within range of the employee legder numberseries that exist on the\
            \ client in Go."
          example: 2
          format: int64
          nullable: true
          type: integer
        PhoneNumber:
          description: The phone number of the employee.
          example: "+4712345678"
          nullable: true
          type: string
        SalaryBankAccountId:
          description: The identifier of the bank account used for salary payments
          example: 123546
          format: int64
          nullable: true
          readOnly: true
          type: integer
        StartDate:
          description: "The start date of the employment of this employee.\r\nNote\
            \ that this field has no relation to the employment entity that is reported\
            \ (a-melding)."
          format: date
          nullable: true
          type: string
        SubledgerAccountId:
          description: The identifier of the subledger account associated with the
            employee.
          example: 12345
          format: int64
          readOnly: true
          type: integer
        TravelExpenseBankAccountId:
          description: "The identifier of the bank account used for travel expense\
            \ payments to the employee (norwegian: \"reiseregninger\")"
          example: 123546
          format: int64
          nullable: true
          readOnly: true
          type: integer
      type: object
    Gender:
      description: Available genders for contacts in Go<p>Members:</p><ul><li><i>Male</i>
        - Male gender</li><li><i>Female</i> - Female gender</li><li><i>Hidden</i>
        - Gender is hidden due to access limitation</li></ul>
      enum:
      - Male
      - Female
      - Hidden
      nullable: true
      type: string
    InternationalIdType:
      description: Specified the type of international ID<p>Members:</p><ul><li><i>PassportNumber</i>
        - Passport number</li><li><i>NationalIdentityNumber</i> - National identity
        number (Social Security Number)</li><li><i>TaxIdentificationNumber</i> - Tax
        identification number</li><li><i>ValueAddedTaxIdentificationNumber</i> - Value
        added tax identification number</li></ul>
      enum:
      - PassportNumber
      - NationalIdentityNumber
      - TaxIdentificationNumber
      - ValueAddedTaxIdentificationNumber
      nullable: true
      type: string
    VatSettingsDto:
      additionalProperties: false
      description: The Vat Settings DTO contains all properties relevant to VAT settings
        in
      example:
        VatPeriod: null
        IsVatRegistered: true
        VatAlternativeGrouping: Department
        ReportAlternativeVatReturn: true
        UseVatCompensation: false
        VatReturnType: null
        VatNumber: "980386465"
        RoundingAccountId: 123456
        ReportVatReturnManually: false
        AlternativeVatPeriod: Weekly
        AlternativeVatReturnType: GeneralIndustry
        RoundingAccountAgricultureDepartment: None
        AlternativeVatReturnFromYear: 2024
        RoundingAccountNo: 8160
      properties:
        AlternativeVatPeriod:
          $ref: '#/components/schemas/VatPeriodType'
        AlternativeVatReturnFromYear:
          description: The year the client wants to start reporting additional vat
            returns. Relevant only if ReportAlternativeVatReturn is true.
          example: 2024
          format: int32
          nullable: true
          readOnly: true
          type: integer
        AlternativeVatReturnType:
          $ref: '#/components/schemas/VatReturnType'
        IsVatRegistered:
          description: "Information on whether this this client is registered for\
            \ Value Added Tax (VAT, norwegian: mva-registrert). If false, vat is not\
            \ applied to outgoing invoices."
          example: true
          nullable: true
          readOnly: true
          type: boolean
        ReportAlternativeVatReturn:
          description: Information on whether this client report additional vat return
            for some departments.
          nullable: true
          readOnly: true
          type: boolean
        ReportVatReturnManually:
          description: "Information on whether this client report vat returns manually.\
            \ True if the client are obliged to submit more than one type of vat return,\
            \ are jointly registered or shall deliver vat return for vat compensation\
            \ or reverse tax liability."
          example: false
          nullable: true
          readOnly: true
          type: boolean
        RoundingAccountAgricultureDepartment:
          $ref: '#/components/schemas/AgricultureDepartment'
        RoundingAccountId:
          description: The identifier of the rounding account number.
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        RoundingAccountNo:
          description: "The account used if rounding need to be posted when the principal\
            \ vat report is sent.\r\nWhen sending vat reports, the system vat accounts\
            \ are emptied, but the account balances might have decimal precision and\
            \ the vat reports do not.\r\nIf so, the rounding difference is posted\
            \ to the rounding account."
          example: 8160
          format: int64
          nullable: true
          readOnly: true
          type: integer
        UseVatCompensation:
          description: "Information on whether this client are entitled to and uses\
            \ vat compensation. If true, vat codes with first letter notation K can\
            \ be used when relevant for the client."
          example: false
          nullable: true
          readOnly: true
          type: boolean
        VatAlternativeGrouping:
          $ref: '#/components/schemas/VatAlternativeGrouping'
        VatNumber:
          description: "The vat number of the client. The vat number will equal the\
            \ organization number for norwegian clients, but will relevant in vat\
            \ terms only if the property isVatRegistered is true."
          example: "980386465"
          nullable: true
          readOnly: true
          type: string
        VatPeriod:
          $ref: '#/components/schemas/VatPeriodType'
        VatReturnType:
          $ref: '#/components/schemas/VatReturnType'
      type: object
    VatPeriodType:
      description: Enum defining the Value Added Tax (VAT) period on this client.
        The VAT period states how often VAT is reported to the government from this
        client.<p>Members:</p><ul><li><i>Weekly</i> - Every week</li><li><i>HalfMonthly</i>
        - Half-Monthly</li><li><i>Monthly</i> - Every month</li><li><i>BiMonthly</i>
        - Every two months</li><li><i>Yearly</i> - Once a year</li><li><i>HalfYearly</i>
        - Twice a year</li><li><i>Quarterly</i> - Four times a year</li></ul>
      enum:
      - Weekly
      - HalfMonthly
      - Monthly
      - BiMonthly
      - Yearly
      - HalfYearly
      - Quarterly
      nullable: true
      type: string
    VatReturnType:
      description: "The type of VAT returns the client should deliver for it's principal\
        \ activity.<p>Members:</p><ul><li><i>GeneralIndustry</i> - General Industry\
        \ (Norwegian: Alminnelig næring)</li><li><i>PrimaryIndustry</i> - Primary\
        \ Industry (Norwegian: Primærnmæring)</li><li><i>VatCompensation</i> - Vat\
        \ Compensation (Norwegian: Merverdiavgiftskompensasjon)ø</li><li><i>ReverseVatLiability</i>\
        \ - Reverse VAT Liability (Norwegian: Omvendt avgiftsplikt)</li><li><i>NoReporting</i>\
        \ - No reporting (Norwegian: Ingen rapportering)</li></ul>"
      enum:
      - GeneralIndustry
      - PrimaryIndustry
      - VatCompensation
      - ReverseVatLiability
      - NoReporting
      nullable: true
      type: string
    VatAlternativeGrouping:
      description: "What the alternative vat return reporting is grouped by, if the\
        \ client use alternative vat reporting.<p>Members:</p><ul><li><i>Department</i>\
        \ - Group the alternative vat reporting by departments</li><li><i>AgricultureDepartment</i>\
        \ - Group the alternative vat reporting by agriculture departments</li></ul>"
      enum:
      - Department
      - AgricultureDepartment
      nullable: true
      type: string
    ProductDto:
      additionalProperties: false
      description: DTO for Product read operations.
      example:
        UnitOfMeasureCode: BX
        Description: Bottomless box of mysteries
        StandardSalesAccountId: 123456
        StockOnHandLastChangedDatetimeOffset: 2023-07-03T11:02:00.1234567Z
        StandardSalesAccount: 3000
        Name: Big blue box
        Gtin: "00012345678905"
        StockAvailable: 10
        ProductGroupId: 123456
        OptionalSalesAccountId: 123456
        StockOnHand: 12
        IsStockItem: true
        ProductType: Product
        OptionalSalesAccount: 3100
        Code: BA-12
        CreatedDateTimeOffset: 2023-07-03T10:53:00.1234567Z
        ProductGroupCode: PG123
        IsArchived: true
        UnitCost: 200.57
        UnitPrice: 100.5
        StandardSalesAccountAgricultureDepartment: null
        OptionalSalesAccountAgricultureDepartment: None
        Id: 1610
        CreatedFromImportJournalId: f575b4b0-55be-4b56-b01f-44b204df82c5
        LastChangedDateTimeOffset: 2023-07-03T11:02:00.1234567Z
      properties:
        Code:
          description: The code of the product.
          example: BA-12
          maxLength: 100
          nullable: true
          type: string
        CreatedDateTimeOffset:
          description: The timestamp the product was created.
          example: 2023-07-03T10:53:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        CreatedFromImportJournalId:
          description: "The created from import journal identifier (guid).\r\nIf the\
            \ product was created from an import, this property will contain the Id\
            \ of the Import that created this entity."
          example: f575b4b0-55be-4b56-b01f-44b204df82c5
          format: uuid
          nullable: true
          readOnly: true
          type: string
        Description:
          description: The description of the product.
          example: Bottomless box of mysteries
          nullable: true
          type: string
        Gtin:
          description: The GTIN (Global trade item number) of the product.
          example: "00012345678905"
          nullable: true
          type: string
        Id:
          description: The unique identifier of the product.
          example: 1610
          format: int64
          readOnly: true
          type: integer
        IsArchived:
          description: "Value indicating whether the product is archived (set inactive).\r\
            \nDefault is false.\r\nArchived products will be unavailable for usage\
            \ in the GUI."
          example: true
          nullable: true
          type: boolean
        IsStockItem:
          description: "Value indicating whether the product stock on hand can be\
            \ registered.\r\nIf false, the stock on hand cannot be set and the stock\
            \ fields will not be visible in the GUI."
          example: true
          nullable: true
          type: boolean
        LastChangedDateTimeOffset:
          description: "Timestamp of the last change of the product.\r\nChanges in\
            \ total stock does not affect the product's last changed property.\r\n\
            Use the total stock last changed property if needed."
          example: 2023-07-03T11:02:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        Name:
          description: The name of the product.
          example: Big blue box
          maxLength: 400
          nullable: true
          type: string
        OptionalSalesAccount:
          description: "The number of the optional sales account of the product.\r\
            \nThe optional sales account is the account the sale will be posted to,\
            \ if the product is included on a sales order line that is invoiced, and\
            \ that sales order line is set to trigger the use of the optional sales\
            \ account.\r\nIf null, the product will inherit the optional sales account\
            \ from the product group or the general sales settings on the client (in\
            \ that order).\r\nThe concept of sales accounts is also explained in the\
            \ common workflow articles."
          example: 3100
          format: int64
          nullable: true
          readOnly: true
          type: integer
        OptionalSalesAccountAgricultureDepartment:
          $ref: '#/components/schemas/AgricultureDepartment'
        OptionalSalesAccountId:
          description: "The id of the optional sales account of the product.\r\nThe\
            \ optional sales account is the account the sale will be posted to, if\
            \ the product is included on a sales order line that is invoiced, and\
            \ that sales order line is set to trigger the use of the optional sales\
            \ account.\r\nIf null, the product will inherit the optional sales account\
            \ from the product group or the general sales settings on the client (in\
            \ that order).\r\nThe concept of sales accounts is also explained in the\
            \ common workflow articles."
          example: 123456
          format: int64
          nullable: true
          type: integer
        ProductGroupCode:
          description: "The code of the product group this product belong to.\r\n\
            If not provided, the product will be placed in the default product group."
          example: PG123
          nullable: true
          readOnly: true
          type: string
        ProductGroupId:
          description: "The id of the product group this product belong to.\r\nIf\
            \ not provided, the product will be placed in the default product group."
          example: 123456
          format: int64
          nullable: true
          type: integer
        ProductType:
          $ref: '#/components/schemas/ProductType'
        StandardSalesAccount:
          description: "The code of the standard sales account of the product.\r\n\
            The standard sales account is the default account the sale will be posted\
            \ to if the product is included on a sales order line that is invoiced.\r\
            \nIf null, the product will inherit the standard sales account from the\
            \ product group or the general sales settings on the client (in that order).\r\
            \nThe concept of sales accounts is also explained in the common workflow\
            \ articles."
          example: 3000
          format: int64
          nullable: true
          readOnly: true
          type: integer
        StandardSalesAccountAgricultureDepartment:
          $ref: '#/components/schemas/AgricultureDepartment'
        StandardSalesAccountId:
          description: "The id of the standard sales account of the product.\r\nThe\
            \ standard sales account is the default account the sale will be posted\
            \ to if the product is included on a sales order line that is invoiced.\r\
            \nIf null, the product will inherit the standard sales account from the\
            \ product group or the general sales settings on the client (in that order).\r\
            \nThe concept of sales accounts is also explained in the common workflow\
            \ articles."
          example: 123456
          format: int64
          nullable: true
          type: integer
        StockAvailable:
          description: "The number of products available for sale.\r\nDiffer from\
            \ the stock on hand if confirmed sales orders exists, thus reserving a\
            \ portion of the stock."
          example: 10
          format: double
          nullable: true
          readOnly: true
          type: number
        StockOnHand:
          description: "The number of products in stock.\r\nMight differ from the\
            \ available stock if confirmed sales orders exists, thus reserving a portion\
            \ of the stock."
          example: 12
          format: double
          nullable: true
          type: number
        StockOnHandLastChangedDatetimeOffset:
          description: "The timestamp of the last change of the product stock on hand.\r\
            \nIf relevant, the detailed changes can be retrieved using the product\
            \ stock entry endpoint."
          example: 2023-07-03T11:02:00.1234567Z
          format: date-time
          nullable: true
          readOnly: true
          type: string
        UnitCost:
          description: "The cost per unit of the product.\r\nIf null, the product\
            \ will inherit the unit cost from the product group."
          example: 200.57
          format: double
          nullable: true
          type: number
        UnitOfMeasureCode:
          $ref: '#/components/schemas/UnitOfMeasureType'
        UnitPrice:
          description: "The sales price per unit of the product.\r\nIf null, the product\
            \ will inherit the unit price from the product group."
          example: 100.5
          format: double
          nullable: true
          type: number
      type: object
    ProductType:
      description: "Enum representing product types.<p>Members:</p><ul><li><i>Product</i>\
        \ - Ordinary physical product unit. The default when a product is created.</li><li><i>Service</i>\
        \ - The product represent a service provided, instead of a physical unit.</li></ul>"
      enum:
      - Product
      - Service
      nullable: true
      type: string
    CustomerDto:
      additionalProperties: false
      description: The customer DTO contains all properties relevant to a customer-object
        in Go
      example:
        OrganizationNumber: "980386465"
        NationalIdNumber: "30011679680"
        InvoiceBrandingThemeCode: "4"
        ReminderDeliveryType: PdfByEmail
        IsVatFree: false
        DoNotAddLatePaymentFees: true
        TransferToDebtCollectionAgency: true
        DoNotAddLatePaymentInterest: true
        InvoiceBrandingThemeId: 123456
        Name: Ford Motor
        CurrencyCode: NOK
        CustomerCreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        DateOfBirth: 2003-07-15
        LegalName: Ford Motor Company AS
        ContactGroupIds:
        - 0
        - 0
        SalesPersonEmployeeId: 123456
        WebsiteUrl: www.customerswebsite.net
        ExternalNumber: 12345
        EmailAddress: abc@test.yxz
        UseInvoiceFee: true
        Id: 12345
        LastName: Ford
        DeliveryTermId: 123456
        CreatedFromImportJournalId: 21d4ddf1-c8bf-4874-8879-b70468fa1032
        DoNotAutomatePaymentNotifications: true
        SalesPersonEmployeeNumber: 3
        SendPaymentReminders: true
        IsActive: true
        ExternalImportReference: abc123-def456
        InvoiceDeliveryType: PdfByEmail
        DeliveryTerm: DAP
        InvoiceEmailAddressCC: abc@test.yxz;def@fest.yxz
        Number: 10010
        IsPerson: false
        Allowance: 56.75
        PaymentReminderEmailAddress: abc@test.yxz
        InvoiceEmailAddress: abc@test.yxz
        ContactCreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        DepartmentCode: 1A
        PaymentTermId: 123456
        MailAddress:
          AddressLine2: "Att: Ola Nordmann"
          AddressLine1: Postboks 404
          ZipCode: "0161"
          City: Oslo
          Id: 12345
          CountryCode: "NO"
          ExternalCode: 123ABC
          LastChangedDateTimeOffset: 2022-07-11T12:46:59.1234567Z
        FirstName: Henry
        SubledgerAccountId: 12345
        BillableRate: 250
        PaymentTerm: 14
        IsArchived: false
        NoticeOfDebtCollectionDeliveryType: PdfByEmail
        CustomerSince: 2010-07-15
        PhoneNumber: "+4712345678"
        DepartmentId: 123456
        LastChangedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
      properties:
        Allowance:
          description: "The fixed percent for allowance/discount or allowance charge\
            \ for this customer.\r\nThe value, if set, should be between -1000 and\
            \ 100 (reflects as -1000% or 100% in the GUI).\r\nNegative percentage\
            \ means the customer is set with allowance charge.\r\nPositive percentage\
            \ means the customer is set up with discount/allowance.\r\nThe percentage\
            \ set will be used as default on any invoices created in Go for that customer."
          example: 56.75
          format: double
          nullable: true
          type: number
        BillableRate:
          description: "The billable hourly rate for timetransactions registered with\
            \ billable activities with this customer.\r\nMust be positive number.\r\
            \nNote that a hierarchy exist in Go for timetracking price settings of\
            \ billable rates."
          example: 250
          format: double
          nullable: true
          type: number
        ContactCreatedDateTimeOffset:
          description: "The timestamp the contact entity was created.\r\nThis might\
            \ differ from the customer created timestamp, if the contact was first\
            \ created as a supplier/employee."
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        ContactGroupIds:
          description: "The contact group ids the current contact is part of, or sets\
            \ contact group id you want to add this contact to."
          items:
            format: int64
            type: integer
          nullable: true
          type: array
        CreatedFromImportJournalId:
          description: "The created from import journal identifier (guid).\r\nIf the\
            \ customer was created from an import, this property will contain the\
            \ Id of the Import that created this entity."
          example: 21d4ddf1-c8bf-4874-8879-b70468fa1032
          format: uuid
          nullable: true
          readOnly: true
          type: string
        CurrencyCode:
          description: "The standard currency code for the customer.\r\nCurrencies\
            \ active on the client can be queried using the AccountingSettings service.\r\
            \nCurrency codes follow the ISO4217 standard.\r\nDefaults to *NOK*."
          example: NOK
          nullable: true
          type: string
        CustomerCreatedDateTimeOffset:
          description: "The timestamp the contact first became a customer.\r\nFor\
            \ contacts being only customers, this property will be equal to the contactCreatedDateTimeOffset\
            \ property."
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        CustomerSince:
          description: "The date the customer first became a customer.\r\nThis field\
            \ is available in the GUI, and is editable at any time. Is thus not the\
            \ same as customerCreatedDateTimeOffset."
          example: 2010-07-15
          format: date
          nullable: true
          type: string
        DateOfBirth:
          description: "The date of birth of the customer.\r\nRelevant only if the\
            \ customer is a person (when isPerson is true)."
          example: 2003-07-15
          format: date
          nullable: true
          type: string
        DeliveryTerm:
          description: "The delivery term of the customer.\r\nThe delivery term set\
            \ will be the default value when an invoice draft is created in Go with\
            \ this customer.\r\nThe default set of delivery terms provided in Go are\
            \ incoterms, but any custom string can be set.\r\nIf null, the default\
            \ delivery term set on the client is used.\r\nThe delivery terms can be\
            \ created and retrieved using the delivery terms endpoint."
          example: DAP
          nullable: true
          readOnly: true
          type: string
        DeliveryTermId:
          description: "The id of delivery term of the customer.\r\nThe delivery term\
            \ set will be the default value when an invoice draft is created in Go\
            \ with this customer.\r\nIf null, the default delivery term set on the\
            \ client is used.\r\nThe delivery terms can be created and retrieved using\
            \ the delivery terms endpoint."
          example: 123456
          format: int64
          nullable: true
          type: integer
        DepartmentCode:
          description: "The code of the department this customer is associated with.\r\
            \nThe department will be the default value when an invoice draft is created\
            \ in Go with this customer.\r\nUse the Departments endpoint to retrieve\
            \ and/or create departments."
          example: 1A
          nullable: true
          readOnly: true
          type: string
        DepartmentId:
          description: "The id of the department this customer is associated with.\r\
            \nThe department will be the default value when an invoice draft is created\
            \ in Go with this customer.\r\nUse the Departments endpoint to retrieve\
            \ and/or create departments."
          example: 123456
          format: int64
          nullable: true
          type: integer
        DoNotAddLatePaymentFees:
          description: "Value indicating whether or not to add late payment fees when\
            \ sending reminders to this customer.\r\nDefaults to false.\r\nRelevant\
            \ if the client uses reminders with interest rate, and that information\
            \ is available in the SalesSettings endpoint."
          example: true
          nullable: true
          type: boolean
        DoNotAddLatePaymentInterest:
          description: "Value indicating whether or not to add late payment interest\
            \ when sending reminders to this customer.\r\nDefaults to false.\r\nRelevant\
            \ if the client uses reminders with fees, and that information is available\
            \ in the SalesSettings endpoint."
          example: true
          nullable: true
          type: boolean
        DoNotAutomatePaymentNotifications:
          description: "Value indicating whether or not this payment notifications\
            \ should be sent automatically to this customer.\r\nPayment notifications\
            \ is considered a friendly reminder (with no fee) that is sent before\
            \ any reminders with fee.\r\nDefaults to false.\r\nRelevant only if the\
            \ client uses payment notification, and that information is available\
            \ in the SalesSettings endpoint."
          example: true
          nullable: true
          type: boolean
        EmailAddress:
          description: The (general) e-mail address registered for the customer.
          example: abc@test.yxz
          nullable: true
          type: string
        ExternalImportReference:
          description: "The external import reference of the customer.\r\nThis field\
            \ is not available in the GUI, but can be used by the integrating party\
            \ to reference the external system.\r\nThe field must be unique within\
            \ each class of Contacts (unique for customers, suppliers or employees).\r\
            \nMax length 50 characters."
          example: abc123-def456
          maxLength: 50
          nullable: true
          type: string
        ExternalNumber:
          description: "The external number of the customer.\r\nThis field can be\
            \ used to reference the customer number in the external system, if the\
            \ customer numbers are not kept in 1:1 sync between Go and the external\
            \ system.\r\nThe field is available in the GUI with the name \"External\
            \ Code\".\r\nThe field must be unique within each class of Contacts (unique\
            \ for customers, suppliers or employees).\r\nNote that in file imports\
            \ to Go (including file imports using the ImportFile endpoint), this number\
            \ has precedence over the customer number. I.e. when importing outgoing\
            \ invoices using a file, with the customer number 10000 set in the file,\
            \ the import will choose the customer with ExternalNumber 10000 over the\
            \ customer with Number 10000. This is the case for file imports only."
          example: 12345
          format: int64
          nullable: true
          type: integer
        FirstName:
          description: "The first name of the customer.\r\nRelevant and required if\
            \ the customer is a person (i.e. isPerson is true)"
          example: Henry
          nullable: true
          type: string
        Id:
          description: "The identifier of the contact.\r\nThis identifier is unique\
            \ and assigned by PowerOffice Go when a new entity is saved, and should\
            \ be provided when an entity should be edited (PATCH), deleted (DELETE)\
            \ or retrieved specifically (GET).\r\nThe customer object is a contact\
            \ entity, meaning the id might be shared with a supplier and/or an employee\
            \ if the contact is registered as both a customer and supplier/employee\
            \ in Go."
          example: 12345
          format: int64
          readOnly: true
          type: integer
        InvoiceBrandingThemeCode:
          description: "The code of the branding theme used when sending invoices\
            \ to this customer.\r\nIf null, the clients default branding theme will\
            \ be used.\r\nBranding themes can be retrieved using the SalesSettings\
            \ endpoint."
          example: "4"
          nullable: true
          readOnly: true
          type: string
        InvoiceBrandingThemeId:
          description: "The id of the branding theme used when sending invoices to\
            \ this customer.\r\nIf null, the clients default branding theme will be\
            \ used.\r\nBranding themes can be retrieved using the SalesSettings endpoint."
          example: 123456
          format: int64
          nullable: true
          type: integer
        InvoiceDeliveryType:
          $ref: '#/components/schemas/InvoiceDeliveryType'
        InvoiceEmailAddress:
          description: The default e-mail address used when sending invoice with delivery
            method PdfByEmail.
          example: abc@test.yxz
          nullable: true
          type: string
        InvoiceEmailAddressCC:
          description: "The default e-mail address used as CC when sending invoice\
            \ with delivery method PdfByEmail.\r\nUp to 10 e-mail addresses can be\
            \ set, semicolon separated. Max length of the string is 2000."
          example: abc@test.yxz;def@fest.yxz
          nullable: true
          type: string
        IsActive:
          description: "Value indicating whether this customer instance is active.\r\
            \nThis property reflects if a contact entity that was both a customer\
            \ and a supplier, is currently active as a customer.\r\nCan be false in\
            \ situations where the supplier is still active so that the contact entity\
            \ cannot be archived, but the customer is deactivated by a user in the\
            \ GUI."
          example: true
          nullable: true
          readOnly: true
          type: boolean
        IsArchived:
          description: "Value indicating whether this contact entity is/should be\
            \ archived (set inactive)\r\nCannot be set if the contact have ledger\
            \ balances (as either a customer or as a supplier)."
          example: false
          nullable: true
          type: boolean
        IsPerson:
          description: "Value indicating whether this customer is a person.\r\nThe\
            \ setting apply to the contact entity, and is used to differentiate persons\
            \ from companies.\r\nIf set true, the firstName and lastName should be\
            \ set.\r\nThe default setting is false if not provided."
          example: false
          nullable: true
          type: boolean
        IsVatFree:
          description: "Value indicating whether this customer is VAT free.\r\nIf\
            \ set true, the alternative sales accounts is used when creating invoices\
            \ for this customer.\r\nThe default setting is false, if not provided."
          example: false
          nullable: true
          type: boolean
        LastChangedDateTimeOffset:
          description: "The timestamp of the last change of the customer.\r\nNote\
            \ that this property do not reflect changes in sub-entities (address,\
            \ contact person etc) related to the contact."
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        LastName:
          description: "The last name of the customer.\r\nRelevant and required if\
            \ the customer is a person (i.e. isPerson is true)"
          example: Ford
          nullable: true
          type: string
        LegalName:
          description: "The legal name of the customer.\r\nThe legal name is the official\
            \ registered name of the company, as opposed to the name which might be\
            \ a marketing name.\r\nRelevant only if the customer is a company (i.e.\
            \ isPerson is false)"
          example: Ford Motor Company AS
          nullable: true
          type: string
        MailAddress:
          $ref: '#/components/schemas/ContactAddressDto'
        Name:
          description: "The name of the customer.\r\nRelevant and required if the\
            \ customer is a company (i.e. isPerson is false)"
          example: Ford Motor
          nullable: true
          type: string
        NationalIdNumber:
          description: "The (Norwegian) national identity number (also called Social\
            \ Security Number) or D-number.\r\nFor privacy reasons queries returns\
            \ 'hidden' if this field has a value and null if empty.\r\nAccess to retrieving\
            \ the value must be granted by the api team by a special privilege (which\
            \ also grant access to InternationalId and gender).\r\nNote that the number\
            \ is validated for the correct syntax when set."
          example: "30011679680"
          nullable: true
          type: string
        NoticeOfDebtCollectionDeliveryType:
          $ref: '#/components/schemas/NoticeOfDebtCollectionDeliveryType'
        Number:
          description: "The number of the customer.\r\nThe number will also represent\
            \ the customer ledger account, used for customer ledger transactions.\r\
            \nWhen creating new customer and setting the number (as opposed to letting\
            \ Go assign the next available number if left blank), the number must\
            \ be within range of the customer legder numberseries that exist on the\
            \ client in Go."
          example: 10010
          format: int64
          nullable: true
          type: integer
        OrganizationNumber:
          description: "The organization number of the customer.\r\nRelevant for customers\
            \ that are companies (i.e. isPerson is false)."
          example: "980386465"
          nullable: true
          type: string
        PaymentReminderEmailAddress:
          description: The default e-mail address used when sending (payment) reminder
            or notice of debt collection with delivery method PdfByEmail.
          example: abc@test.yxz
          nullable: true
          type: string
        PaymentTerm:
          description: "The payment term of the customer.\r\nPayment terms define\
            \ the number of days from an invoice is sent until it is due paid.\r\n\
            If null, the default value is used on customer (inherited from the payment\
            \ terms settings).\r\nThe payment terms can be created and retrieved using\
            \ the payment terms endpoint."
          example: 14
          format: int32
          nullable: true
          readOnly: true
          type: integer
        PaymentTermId:
          description: "The ID of the payment term of the customer.\r\nPayment terms\
            \ define the number of days from an invoice is sent until it is due paid.\r\
            \nThe payment term set will be the default value used when an invoice\
            \ draft is created in Go with this customer.\r\nIf null, the default payment\
            \ term set on the client will be used on invoice draft.\r\nThe payment\
            \ terms can be created and retrieved using the payment terms endpoint."
          example: 123456
          format: int64
          nullable: true
          type: integer
        PhoneNumber:
          description: The phone number of the customer.
          example: "+4712345678"
          nullable: true
          type: string
        ReminderDeliveryType:
          $ref: '#/components/schemas/ReminderDeliveryType'
        SalesPersonEmployeeId:
          description: "The employee id of the sales person assigned this customer.\r\
            \nIf null, the default sales person is used if set in the SalesSettings.\r\
            \nEmployees can be retrieved from the Employees endpoint."
          example: 123456
          format: int64
          nullable: true
          type: integer
        SalesPersonEmployeeNumber:
          description: "The employee number of the sales person assigned this customer.\r\
            \nIf null, the default sales person is used if set in the SalesSettings.\r\
            \nEmployees can be retrieved from the Employees endpoint."
          example: 3
          format: int64
          nullable: true
          readOnly: true
          type: integer
        SendPaymentReminders:
          description: "Value indicating whether to send (payment) reminders to this\
            \ customer.\r\nDefault is true, relevant only if the client uses reminders,\
            \ and that information is available in the SalesSettings endpoint."
          example: true
          nullable: true
          type: boolean
        SubledgerAccountId:
          description: The identifier of the subledger account associated with the
            customer.
          example: 12345
          format: int64
          readOnly: true
          type: integer
        TransferToDebtCollectionAgency:
          description: "Value indicating whether invoices for this customer can be\
            \ transferred to a debt collection agency after they are due.\r\nDefault\
            \ is true, relevant only if the client have a third party debt collection\
            \ integration active."
          example: true
          nullable: true
          type: boolean
        UseInvoiceFee:
          description: "Value indicating whether invoice fee will be used when sending\
            \ invoices to this customer.\r\nDefault is true, relevant only if the\
            \ client uses invoice fee, and that information is available in the SalesSettings\
            \ endpoint."
          example: true
          nullable: true
          type: boolean
        WebsiteUrl:
          description: The url to the customers website.
          example: www.customerswebsite.net
          nullable: true
          type: string
      type: object
    InvoiceDeliveryType:
      description: |-
        Invoice delivery type specifying how an outgoing invoice should or will be delivered to a customer.<p>Members:</p><ul><li><i>PdfByEmail</i> - Invoice will be delivered as email with PDF as attachment.
                        Can only be used if the customer have an e-mail address registered (either eMailAddress or invoiceEmailAddress).</li><li><i>Print</i> - Invoice will be printed and delivered physically.
                        "Sending" the invoice in Go will generate a PDF for download and print.</li><li><i>EHF</i> - Invoice will be delivered over EHF.
                        Can only be set if the customers organizationNumber is set and the number is registered in ELMA.</li><li><i>AvtaleGiro</i> - Invoice will be delivered over AvtaleGiro.
                        Cannot be set directly (set by the customer in an external process).</li><li><i>External</i> - Invoice will be prepared for delivery over an external third party integration.
                        Can only be set if the client have such an integration active.</li><li><i>Efaktura</i> - Invoice will be delivered by Efaktura.
                        Cannot be set directly (set by the customer on an external process).</li><li><i>Factoring</i> - The invoice will be prepared for delivered over an external third party factoring integration.
                        Can only be set if the client have such an integration active.</li></ul>
      enum:
      - PdfByEmail
      - Print
      - EHF
      - AvtaleGiro
      - External
      - Efaktura
      - Factoring
      nullable: true
      type: string
    NoticeOfDebtCollectionDeliveryType:
      description: |-
        Specifies how debt collection notice (norwegian: inkassovarsel) should be delivered to a customer.<p>Members:</p><ul><li><i>PdfByEmail</i> - The notice of debt collection (PDF) will be delivered by email.
                        Can only be used if the customer have an e-mail address registered (either eMailAddress or paymentReminderEmailAddress).</li><li><i>Print</i> - The notice of debt collection (PDF) will be printed and delivered physically.
                        "Sending" the notice in Go will generate a PDF for download and print.</li></ul>
      enum:
      - PdfByEmail
      - Print
      nullable: true
      type: string
    ReminderDeliveryType:
      description: |-
        Specifies how a (payment) reminder (norwegian: purring) should be delivered to a customer.<p>Members:</p><ul><li><i>PdfByEmail</i> - The reminder (PDF) will be delivered by email.
                        Can only be used if the customer have an e-mail address registered (either eMailAddress or paymentReminderEmailAddress).</li><li><i>Print</i> - The reminder (PDF) will be printed and delivered physically.
                        "Sending" the reminder in Go will generate a PDF for download and print.</li></ul>
      enum:
      - PdfByEmail
      - Print
      nullable: true
      type: string
    CustomerPostDto:
      additionalProperties: false
      description: The customer post DTO contains only properties relevant to a customer-object
        in Go that can be altered directly via POST-method in API.
      example:
        DoNotAutomatePaymentNotifications: true
        OrganizationNumber: "980386465"
        NationalIdNumber: "30011679680"
        SalesPersonEmployeeNumber: 3
        SendPaymentReminders: true
        InvoiceBrandingThemeCode: "4"
        ReminderDeliveryType: PdfByEmail
        IsVatFree: false
        ExternalImportReference: abc123-def456
        DoNotAddLatePaymentFees: true
        InvoiceDeliveryType: PdfByEmail
        TransferToDebtCollectionAgency: true
        DoNotAddLatePaymentInterest: true
        InvoiceBrandingThemeId: 123456
        Name: Ford Motor
        CurrencyCode: NOK
        DeliveryTerm: DAP
        InvoiceEmailAddressCC: abc@test.yxz;def@fest.yxz
        Number: 10010
        IsPerson: false
        Allowance: 56.75
        PaymentReminderEmailAddress: abc@test.yxz
        InvoiceEmailAddress: abc@test.yxz
        DateOfBirth: 2003-07-15
        DepartmentCode: 1A
        LegalName: Ford Motor Company AS
        PaymentTermId: 123456
        MailAddress:
          AddressLine2: "Att: Ola Nordmann"
          AddressLine1: Postboks 404
          ZipCode: "0161"
          City: Oslo
          CountryCode: "NO"
          ExternalCode: 123ABC
        ContactGroupIds:
        - 0
        - 0
        SalesPersonEmployeeId: 123456
        FirstName: Henry
        WebsiteUrl: www.customerswebsite.net
        BillableRate: 250
        PaymentTerm: 14
        ExternalNumber: 12345
        EmailAddress: abc@test.yxz
        SubLedgerNumberSeriesId: 529c49e3-618e-40e6-a3b9-5ee82bc698f2
        UseInvoiceFee: true
        IsArchived: false
        NoticeOfDebtCollectionDeliveryType: PdfByEmail
        CustomerSince: 2010-07-15
        PhoneNumber: "+4712345678"
        DepartmentId: 123456
        LastName: Ford
        DeliveryTermId: 123456
      properties:
        Allowance:
          description: "The fixed percent for allowance/discount or allowance charge\
            \ for this customer.\r\nThe value, if set, should be between -1000 and\
            \ 100 (reflects as -1000% or 100% in the GUI).\r\nNegative percentage\
            \ means the customer is set with allowance charge.\r\nPositive percentage\
            \ means the customer is set up with discount/allowance.\r\nThe percentage\
            \ set will be used as default on any invoices created in Go for that customer."
          example: 56.75
          format: double
          nullable: true
          type: number
        BillableRate:
          description: "The billable hourly rate for timetransactions registered with\
            \ billable activities with this customer.\r\nMust be positive number.\r\
            \nNote that a hierarchy exist in Go for timetracking price settings of\
            \ billable rates."
          example: 250
          format: double
          nullable: true
          type: number
        ContactGroupIds:
          description: "The contact group ids the current contact is part of, or sets\
            \ contact group id you want to add this contact to."
          items:
            format: int64
            type: integer
          nullable: true
          type: array
        CurrencyCode:
          description: "The standard currency code for the customer.\r\nCurrencies\
            \ active on the client can be queried using the AccountingSettings service.\r\
            \nCurrency codes follow the ISO4217 standard.\r\nDefaults to *NOK*."
          example: NOK
          nullable: true
          type: string
        CustomerSince:
          description: "The date the customer first became a customer.\r\nThis field\
            \ is available in the GUI, and is editable at any time. Is thus not the\
            \ same as customerCreatedDateTimeOffset."
          example: 2010-07-15
          format: date
          nullable: true
          type: string
        DateOfBirth:
          description: "The date of birth of the customer.\r\nRelevant only if the\
            \ customer is a person (when isPerson is true)."
          example: 2003-07-15
          format: date
          nullable: true
          type: string
        DeliveryTerm:
          description: "The delivery term of the customer.\r\nThe delivery term set\
            \ will be the default value when an invoice draft is created in Go with\
            \ this customer.\r\nThe default set of delivery terms provided in Go are\
            \ incoterms, but any custom string can be set.\r\nIf null, the default\
            \ delivery term set on the client is used.\r\nNote that if DeliveryTermId\
            \ is set as well in the request, DeliveryTermId takes precedence and DeliveryTerm\
            \ is ignored."
          example: DAP
          nullable: true
          type: string
        DeliveryTermId:
          description: "The id of delivery term of the customer.\r\nThe delivery term\
            \ set will be the default value when an invoice draft is created in Go\
            \ with this customer.\r\nIf null, the default delivery term set on the\
            \ client is used.\r\nThe delivery terms can be created and retrieved using\
            \ the delivery terms endpoint."
          example: 123456
          format: int64
          nullable: true
          type: integer
        DepartmentCode:
          description: "The code of the department this customer is associated with.\r\
            \nThe department will be the default value when an invoice draft is created\
            \ in Go with this customer.\r\nThe department entity must exist in Go\
            \ in order to set the code.\r\nNote that if DepartmentId is set as well\
            \ in the request, DepartmentId takes precedence and DepartmentCode is\
            \ ignored."
          example: 1A
          nullable: true
          type: string
        DepartmentId:
          description: "The id of the department this customer is associated with.\r\
            \nThe department will be the default value when an invoice draft is created\
            \ in Go with this customer.\r\nUse the Departments endpoint to retrieve\
            \ and/or create departments."
          example: 123456
          format: int64
          nullable: true
          type: integer
        DoNotAddLatePaymentFees:
          description: "Value indicating whether or not to add late payment fees when\
            \ sending reminders to this customer.\r\nDefaults to false.\r\nRelevant\
            \ if the client uses reminders with interest rate, and that information\
            \ is available in the SalesSettings endpoint."
          example: true
          nullable: true
          type: boolean
        DoNotAddLatePaymentInterest:
          description: "Value indicating whether or not to add late payment interest\
            \ when sending reminders to this customer.\r\nDefaults to false.\r\nRelevant\
            \ if the client uses reminders with fees, and that information is available\
            \ in the SalesSettings endpoint."
          example: true
          nullable: true
          type: boolean
        DoNotAutomatePaymentNotifications:
          description: "Value indicating whether or not this payment notifications\
            \ should be sent automatically to this customer.\r\nPayment notifications\
            \ is considered a friendly reminder (with no fee) that is sent before\
            \ any reminders with fee.\r\nDefaults to false.\r\nRelevant only if the\
            \ client uses payment notification, and that information is available\
            \ in the SalesSettings endpoint."
          example: true
          nullable: true
          type: boolean
        EmailAddress:
          description: The (general) e-mail address registered for the customer.
          example: abc@test.yxz
          nullable: true
          type: string
        ExternalImportReference:
          description: "The external import reference of the customer.\r\nThis field\
            \ is not available in the GUI, but can be used by the integrating party\
            \ to reference the external system.\r\nThe field must be unique within\
            \ each class of Contacts (unique for customers, suppliers or employees).\r\
            \nMax length 50 characters."
          example: abc123-def456
          maxLength: 50
          nullable: true
          type: string
        ExternalNumber:
          description: "The external number of the customer.\r\nThis field can be\
            \ used to reference the customer number in the external system, if the\
            \ customer numbers are not kept in 1:1 sync between Go and the external\
            \ system.\r\nThe field is available in the GUI with the name \"External\
            \ Code\".\r\nThe field must be unique within each class of Contacts (unique\
            \ for customers, suppliers or employees).\r\nNote that in file imports\
            \ to Go (including file imports using the ImportFile endpoint), this number\
            \ has precedence over the customer number. I.e. when importing outgoing\
            \ invoices using a file, with the customer number 10000 set in the file,\
            \ the import will choose the customer with ExternalNumber 10000 over the\
            \ customer with Number 10000. This is the case for file imports only."
          example: 12345
          format: int64
          nullable: true
          type: integer
        FirstName:
          description: "The first name of the customer.\r\nRelevant and required if\
            \ the customer is a person (i.e. isPerson is true)"
          example: Henry
          nullable: true
          type: string
        InvoiceBrandingThemeCode:
          description: "The code of the branding theme used when sending invoices\
            \ to this customer.\r\nIf null, the clients default branding theme will\
            \ be used.\r\nNote that if InvoiceBrandingThemeId is set as well in the\
            \ request, InvoiceBrandingThemeId takes precedence and InvoiceBrandingThemeCode\
            \ is ignored."
          example: "4"
          nullable: true
          type: string
        InvoiceBrandingThemeId:
          description: "The id of the branding theme used when sending invoices to\
            \ this customer.\r\nIf null, the clients default branding theme will be\
            \ used.\r\nBranding themes can be retrieved using the SalesSettings endpoint."
          example: 123456
          format: int64
          nullable: true
          type: integer
        InvoiceDeliveryType:
          $ref: '#/components/schemas/InvoiceDeliveryType'
        InvoiceEmailAddress:
          description: The default e-mail address used when sending invoice with delivery
            method PdfByEmail.
          example: abc@test.yxz
          nullable: true
          type: string
        InvoiceEmailAddressCC:
          description: "The default e-mail address used as CC when sending invoice\
            \ with delivery method PdfByEmail.\r\nUp to 10 e-mail addresses can be\
            \ set, semicolon separated. Max length of the string is 2000."
          example: abc@test.yxz;def@fest.yxz
          nullable: true
          type: string
        IsArchived:
          description: "Value indicating whether this contact entity is/should be\
            \ archived (set inactive)\r\nCannot be set if the contact have ledger\
            \ balances (as either a customer or as a supplier)."
          example: false
          nullable: true
          type: boolean
        IsPerson:
          description: "Value indicating whether this customer is a person.\r\nThe\
            \ setting apply to the contact entity, and is used to differentiate persons\
            \ from companies.\r\nIf set true, the firstName and lastName should be\
            \ set.\r\nThe default setting is false if not provided."
          example: false
          nullable: true
          type: boolean
        IsVatFree:
          description: "Value indicating whether this customer is VAT free.\r\nIf\
            \ set true, the alternative sales accounts is used when creating invoices\
            \ for this customer.\r\nThe default setting is false, if not provided."
          example: false
          nullable: true
          type: boolean
        LastName:
          description: "The last name of the customer.\r\nRelevant and required if\
            \ the customer is a person (i.e. isPerson is true)"
          example: Ford
          nullable: true
          type: string
        LegalName:
          description: "The legal name of the customer.\r\nThe legal name is the official\
            \ registered name of the company, as opposed to the name which might be\
            \ a marketing name.\r\nRelevant only if the customer is a company (i.e.\
            \ isPerson is false)"
          example: Ford Motor Company AS
          nullable: true
          type: string
        MailAddress:
          $ref: '#/components/schemas/ContactAddressPostDto'
        Name:
          description: "The name of the customer.\r\nRelevant and required if the\
            \ customer is a company (i.e. isPerson is false)"
          example: Ford Motor
          nullable: true
          type: string
        NationalIdNumber:
          description: "The (Norwegian) national identity number (also called Social\
            \ Security Number) or D-number.\r\nFor privacy reasons queries returns\
            \ 'hidden' if this field has a value and null if empty.\r\nAccess to retrieving\
            \ the value must be granted by the api team by a special privilege (which\
            \ also grant access to InternationalId and gender).\r\nNote that the number\
            \ is validated for the correct syntax when set."
          example: "30011679680"
          nullable: true
          type: string
        NoticeOfDebtCollectionDeliveryType:
          $ref: '#/components/schemas/NoticeOfDebtCollectionDeliveryType'
        Number:
          description: "The number of the customer.\r\nThe number will also represent\
            \ the customer ledger account, used for customer ledger transactions.\r\
            \nWhen creating new customer and setting the number (as opposed to letting\
            \ Go assign the next available number if left blank), the number must\
            \ be within range of the customer legder numberseries that exist on the\
            \ client in Go."
          example: 10010
          format: int64
          nullable: true
          type: integer
        OrganizationNumber:
          description: "The organization number of the customer.\r\nRelevant for customers\
            \ that are companies (i.e. isPerson is false)."
          example: "980386465"
          nullable: true
          type: string
        PaymentReminderEmailAddress:
          description: The default e-mail address used when sending (payment) reminder
            or notice of debt collection with delivery method PdfByEmail.
          example: abc@test.yxz
          nullable: true
          type: string
        PaymentTerm:
          description: "The payment term of the customer.\r\nThis is the default number\
            \ of days after an invoice is sent until it is due.\r\nThe payment term\
            \ set will be the default value when an invoice draft is created in Go\
            \ with this customer.\r\nIf null, the default payment term set on the\
            \ client will be used.\r\nNote that if PaymentTermId is set as well in\
            \ the request, PaymentTermId takes precedence and PaymentTerm is ignored."
          example: 14
          format: int32
          nullable: true
          type: integer
        PaymentTermId:
          description: "The ID of the payment term of the customer.\r\nPayment terms\
            \ define the number of days from an invoice is sent until it is due paid.\r\
            \nThe payment term set will be the default value used when an invoice\
            \ draft is created in Go with this customer.\r\nIf null, the default payment\
            \ term set on the client will be used on invoice draft.\r\nThe payment\
            \ terms can be created and retrieved using the payment terms endpoint."
          example: 123456
          format: int64
          nullable: true
          type: integer
        PhoneNumber:
          description: The phone number of the customer.
          example: "+4712345678"
          nullable: true
          type: string
        ReminderDeliveryType:
          $ref: '#/components/schemas/ReminderDeliveryType'
        SalesPersonEmployeeId:
          description: "The employee id of the sales person assigned this customer.\r\
            \nIf null, the default sales person is used if set in the SalesSettings.\r\
            \nEmployees can be retrieved from the Employees endpoint."
          example: 123456
          format: int64
          nullable: true
          type: integer
        SalesPersonEmployeeNumber:
          description: "The employee number of the sales person assigned this customer.\r\
            \nIf null, the default sales person is used if set in the SalesSettings."
          example: 3
          format: int64
          nullable: true
          type: integer
        SendPaymentReminders:
          description: "Value indicating whether to send (payment) reminders to this\
            \ customer.\r\nDefault is true, relevant only if the client uses reminders,\
            \ and that information is available in the SalesSettings endpoint."
          example: true
          nullable: true
          type: boolean
        SubLedgerNumberSeriesId:
          description: "The Id of the sub-ledger series this customer belong in.\r\
            \nRelevant if the client have multiple customer sub-ledger series, and\
            \ if so highly relevant in POST calls if the integrating party does not\
            \ set Number but lets Go assign the next available Number.\r\nIn such\
            \ cases, Go will create the customer in the default sub-ledger series,\
            \ unless this property is set."
          example: 529c49e3-618e-40e6-a3b9-5ee82bc698f2
          format: uuid
          nullable: true
          type: string
        TransferToDebtCollectionAgency:
          description: "Value indicating whether invoices for this customer can be\
            \ transferred to a debt collection agency after they are due.\r\nDefault\
            \ is true, relevant only if the client have a third party debt collection\
            \ integration active."
          example: true
          nullable: true
          type: boolean
        UseInvoiceFee:
          description: "Value indicating whether invoice fee will be used when sending\
            \ invoices to this customer.\r\nDefault is true, relevant only if the\
            \ client uses invoice fee, and that information is available in the SalesSettings\
            \ endpoint."
          example: true
          nullable: true
          type: boolean
        WebsiteUrl:
          description: The url to the customers website.
          example: www.customerswebsite.net
          nullable: true
          type: string
      type: object
    ContactAddressPostDto:
      additionalProperties: false
      description: "The contact address post DTO contains all properties relevant\
        \ to creating a new address object in Go.\r\nAddress representing a physical\
        \ location.\r\nIncludes external code for reference in external systems."
      example:
        AddressLine2: "Att: Ola Nordmann"
        AddressLine1: Postboks 404
        ZipCode: "0161"
        City: Oslo
        CountryCode: "NO"
        ExternalCode: 123ABC
      properties:
        AddressLine1:
          description: The first (main) address line.
          example: Postboks 404
          maxLength: 200
          nullable: true
          type: string
        AddressLine2:
          description: The second address line.
          example: "Att: Ola Nordmann"
          maxLength: 200
          nullable: true
          type: string
        City:
          description: The city.
          example: Oslo
          maxLength: 100
          nullable: true
          type: string
        CountryCode:
          description: "The ISO 3166-1 alfa-2 country code (two characters).\r\nDefaults\
            \ to \"NO\" if not set."
          example: "NO"
          nullable: true
          type: string
        ExternalCode:
          description: "The external code\r\nThis field is not available in the GUI,\
            \ but can be used by the integrating party to reference the address in\
            \ the external system.\r\nThe field must be unique (for each address)."
          example: 123ABC
          maxLength: 50
          nullable: true
          type: string
        ZipCode:
          description: The zip code (postal code).
          example: "0161"
          maxLength: 50
          nullable: true
          type: string
      required:
      - City
      - ZipCode
      type: object
    EmploymentSalaryDto:
      additionalProperties: false
      description: The Employment Salary DTO contains properties relevant to a salary
        (line) on an employment relationship object in Go.
      example:
        AnnualSalary: 123.45
        FromDate: 2021-01-01
        Id: 12345
        EmployeeId: 12345
        RemunerationType: Commission
        CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        EmploymentId: 12345
        HourlyRate: 123.45
        LastChangedDateTimeOffset: 2021-09-30T09:33:00.1234567Z
      properties:
        AnnualSalary:
          description: "The annual salary of the employment salary.\r\nOnly relevant\
            \ for fixed wage salary."
          example: 123.45
          format: double
          nullable: true
          type: number
        CreatedDateTimeOffset:
          description: The timestamp when the employment salary entity was created.
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        EmployeeId:
          description: The identifier of the employee the employment belongs to.
          example: 12345
          format: int64
          readOnly: true
          type: integer
        EmploymentId:
          description: The id of the employment (employment relationship) the salary
            line belongs to.
          example: 12345
          format: int64
          readOnly: true
          type: integer
        FromDate:
          description: The from-date for the effect of the employment salary.
          example: 2021-01-01
          format: date
          nullable: true
          type: string
        HourlyRate:
          description: "The hourly rate of the employment salary.\r\nRelevant to set\
            \ for hourly wage salary and commission salary.\r\nFor fixed wage salary,\
            \ the hourly rate is automatically calculated if null, but can be overridden.\r\
            \nThe calculation is based on the full time hours per week property on\
            \ the employment general information, multiplied by 52 weeks.\r\nRelevant\
            \ for fixed wage in terms of overtime/extra hours, for instance."
          example: 123.45
          format: double
          nullable: true
          type: number
        Id:
          description: The id of the employment salary (line).
          example: 12345
          format: int64
          readOnly: true
          type: integer
        LastChangedDateTimeOffset:
          description: The timestamp when the employment salary entity was last changed.
          example: 2021-09-30T09:33:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        RemunerationType:
          $ref: '#/components/schemas/SalaryRemunerationType'
      type: object
    SalaryRemunerationType:
      description: "The remuneration-type of an employment salary.<p>Members:</p><ul><li><i>Commission</i>\
        \ - Paid on commission, by percentage.</li><li><i>FixedWage</i> - Fixed wage.</li><li><i>HourlyWage</i>\
        \ - Hourly wage.</li></ul>"
      enum:
      - Commission
      - FixedWage
      - HourlyWage
      nullable: true
      type: string
    ContactBankAccountDto:
      additionalProperties: false
      description: Properties of a contact bank account.
      example:
        BicSwift: DNBANOKK
        IsActive: true
        BankCode: FW987654321
        ContactId: 12345
        Id: 12345
        CountryCode: "NO"
        BankAccountNumber: 1234 56 78903
        CreateDateTimeOffset: 2023-11-27T14:24:00.1234567Z
        LastChangedDateTimeOffset: 2023-11-27T14:24:00.1234567Z
      properties:
        BankAccountNumber:
          description: The bank account number
          example: 1234 56 78903
          nullable: true
          type: string
        BankCode:
          description: The bank code. Only applicable and used for countries that
            does not support bicSwift.
          example: FW987654321
          nullable: true
          type: string
        BicSwift:
          description: The BIC/SWIFT code.
          example: DNBANOKK
          nullable: true
          type: string
        ContactId:
          description: The identifier of the contact (customer/employee/supplier)
            this bank account is for.
          example: 12345
          format: int64
          readOnly: true
          type: integer
        CountryCode:
          description: The ISO 3166-1 alfa-2 country code. Default is NO.
          example: "NO"
          nullable: true
          type: string
        CreateDateTimeOffset:
          description: The timestamp of the created date of the contact bank account.
            UTC time.
          example: 2023-11-27T14:24:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        Id:
          description: The identifier of the contact bank account.
          example: 12345
          format: int64
          readOnly: true
          type: integer
        IsActive:
          description: A value indicating whether this bank account is active.
          example: true
          nullable: true
          type: boolean
        LastChangedDateTimeOffset:
          description: The timestamp of the last change of the contact bank account.
            UTC time.
          example: 2023-11-27T14:24:00.1234567Z
          format: date-time
          readOnly: true
          type: string
      type: object
    ContactBankAccountPostDto:
      additionalProperties: false
      description: Properties to create a new contact bank account
      example:
        BicSwift: DNBANOKK
        IsActive: true
        BankCode: FW987654321
        CountryCode: "NO"
        BankAccountNumber: 1234 56 78903
      properties:
        BankAccountNumber:
          description: The bank account number
          example: 1234 56 78903
          nullable: true
          type: string
        BankCode:
          description: The bank code. Only applicable and used for countries that
            does not support bicSwift.
          example: FW987654321
          nullable: true
          type: string
        BicSwift:
          description: The BIC/SWIFT code.
          example: DNBANOKK
          nullable: true
          type: string
        CountryCode:
          description: The ISO 3166-1 alfa-2 country code. Default is NO.
          example: "NO"
          nullable: true
          type: string
        IsActive:
          description: A value indicating whether this bank account is active.
          example: true
          nullable: true
          type: boolean
      required:
      - BankAccountNumber
      type: object
    VoucherDocumentationType:
      description: Represents the file types of voucher documentation.<p>Members:</p><ul><li><i>Ehf</i>
        - EHF documentation type (XML).</li><li><i>Pdf</i> - PDF documentation type.</li><li><i>Images</i>
        - Image documentation type.</li><li><i>All</i> - All documentation types.</li></ul>
      enum:
      - Ehf
      - Pdf
      - Images
      - All
      nullable: true
      type: string
    EmployeeHourlyRateDto:
      additionalProperties: false
      description: The Employee Hourly Rate DTO contains properties relevant to a
        "EmployeeTimeHourlyRates" object in Go
      example:
        ValidToDate: 2022-07-15
        CostRate: 200
        ValidFromDate: 2022-07-01
        BillableRate: 250
        Id: 12345
      properties:
        BillableRate:
          description: "The billable hourly rate for timetransactions registered with\
            \ billable activities for this employee.\r\nMust be a positive number.\r\
            \nNote that a hierarchy exist in Go for timetracking price settings of\
            \ billable rates."
          example: 250
          format: double
          nullable: true
          type: number
        CostRate:
          description: "The hourly cost rate for timetransactions registered for this\
            \ employee.\r\nMust be a positive number.\r\nThis cost rate have no direct\
            \ relation to payroll settings, and is primarily used for reporting purposes\
            \ on timetracking entries."
          example: 200
          format: double
          nullable: true
          type: number
        Id:
          description: "The identifier of the employee hourly rates.\r\nThis identifier\
            \ is unique and assigned by PowerOffice Go when a new entity is saved,\
            \ and should be provided when an entity should be edited (PATCH), deleted\
            \ (DELETE) or retrieved specifically (GET)."
          example: 12345
          format: int64
          readOnly: true
          type: integer
        ValidFromDate:
          description: The date from which this rate is to be used from.
          example: 2022-07-01
          format: date
          nullable: true
          type: string
        ValidToDate:
          description: The date from which this rate is no longer in use.
          example: 2022-07-15
          format: date
          readOnly: true
          type: string
      type: object
    CurrencyDto:
      additionalProperties: false
      description: The currencies active for GUI operations.
      example:
        IsActive: true
        Notation: Notation
        Code: Code
      properties:
        Code:
          description: Currency code.
          nullable: true
          readOnly: true
          type: string
        IsActive:
          description: Value indication if this currency is active for this client.
          nullable: true
          readOnly: true
          type: boolean
        Notation:
          description: English notation of the currency name.
          nullable: true
          readOnly: true
          type: string
      type: object
    ProjectDto:
      additionalProperties: false
      description: The project DTO contains all properties relevant to a project-object
        in Go
      example:
        DenyTimeTracking: true
        Name: Project A
        StartDate: 2022-10-26
        ContractNo: 123-244A
        ProjectManagerEmployeeId: 123456
        BudgetedTotalRevenue: 1500.97
        FixedPrice: 15.42
        AllowAllEmployees: true
        BrandingThemeId: 123456
        HourlyRateMarkupDescription: Markup abc
        ExpenseMarkupFactor: 25.98
        LocationCode: "1"
        CustomerId: 123456
        BudgetedHours: 150.97
        ExternalNumber: 12345
        Code: "10"
        IsInternal: true
        BudgetedCostOfGoods: 200.97
        BudgetedOtherOperatingExpenses: 2500.97
        AttachExpenseVouchersWhenBilling: true
        BudgetedRevenueHours: 300.97
        BudgetedBillableRate: 200.97
        Id: 12345
        DeliveryTermId: 123456
        CreatedFromImportJournalId: 21d4ddf1-c8bf-4874-8879-b70468fa1032
        BudgetedPayrollExpenses: 500.97
        ParentProjectCode: "1"
        HourlyRateMarkupEnabled: true
        ExpenseMarkupEnabled: false
        IsActive: false
        ProjectManagerEmployeeNo: 2
        ContactPersonId: 12345
        PaymentTerms: 14
        CustomerNo: 10251
        DeliveryTerm: DAP
        ParentProjectId: 123456
        AllowAllActivities: true
        IsBillable: false
        PurchaseOrderNo: "1337"
        DepartmentCode: 1A
        HourlyRateMarkupFactor: 53.21
        PaymentTermId: 123456
        Progress: 12
        LocationId: 123456
        BillableRateSpecification: Activity
        ProjectBillingMethod: FixedPrice
        BillableRate: 350.67
        EndDate: 2023-01-06
        CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        ProjectStatus: Tentative
        BrandingThemeCode: "1"
        DepartmentId: 123456
        ExpenseMarkupDescription: Markup abc
        LastChangedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
      properties:
        AllowAllActivities:
          description: "Value indicating whether it's allowed to use all the available\
            \ Activity when adding TimeTrackingEntry on the project.\r\nDefault is\
            \ true.\r\nIf this is set to false, the activities allowed on the project\
            \ should be specified through the ProjectActivities method.\r\nIf the\
            \ project is a sub-project (parentProjectCode has a value), allow all\
            \ activities means that this sub-project is allowed to use all the activities\
            \ specified on the parent project."
          example: true
          nullable: true
          type: boolean
        AllowAllEmployees:
          description: "Value indicating whether all employees can add time-tracking\
            \ entries with this project.\r\nDefault is true.\r\nIf this is set to\
            \ false, the team members working on the project should be specified through\
            \ the ProjectTeamMembers method.\r\nIf the project is a sub-project (parentProjectCode\
            \ has a value), allow all employees means that this sub-project is allowed\
            \ to use all the team members specified on the parent project."
          example: true
          nullable: true
          type: boolean
        AttachExpenseVouchersWhenBilling:
          description: "Value indicating whether the original documents for expense\
            \ vouchers should bet added as attachments when billing this project.\r\
            \nDefault is false."
          example: true
          nullable: true
          type: boolean
        BillableRate:
          description: "The billable hourly rate for time-transactions registered\
            \ with billable activities for this project.\r\nMust be a positive number,\
            \ and this rate can only be set and used if the projects billing method\
            \ is Time or TimeAndExpense, and the billableRateSpecification is set\
            \ to Project.\r\nAlso note that a hierarchy exist in Go for time-tracking\
            \ price settings of billable rates."
          example: 350.67
          format: double
          nullable: true
          type: number
        BillableRateSpecification:
          $ref: '#/components/schemas/BillableRateSpecification'
        BrandingThemeCode:
          description: "The code of the branding theme default used when billing this\
            \ project.\r\nIf null, the standard branding theme (on the client) is\
            \ applied."
          example: "1"
          nullable: true
          readOnly: true
          type: string
        BrandingThemeId:
          description: "The id of the branding theme default used when billing this\
            \ project.\r\nIf null, the standard branding theme (on the client) is\
            \ applied."
          example: 123456
          format: int64
          nullable: true
          type: integer
        BudgetedBillableRate:
          description: "The budgeted average billable rate of time-tracking entries\
            \ for the project, for the standard simplified project budget."
          example: 200.97
          format: double
          nullable: true
          type: number
        BudgetedCostOfGoods:
          description: "The budgeted cost of goods on this project, for the standard\
            \ simplified project budget."
          example: 200.97
          format: double
          nullable: true
          type: number
        BudgetedHours:
          description: "The budgeted amount of work hours for the project, for the\
            \ standard simplified project budget."
          example: 150.97
          format: double
          nullable: true
          type: number
        BudgetedOtherOperatingExpenses:
          description: "The budgeted other operating expenses for this project, for\
            \ the standard simplified project budget."
          example: 2500.97
          format: double
          nullable: true
          type: number
        BudgetedPayrollExpenses:
          description: "The budgeted cost of payroll expenses for this project, for\
            \ the standard simplified project budget."
          example: 500.97
          format: double
          nullable: true
          type: number
        BudgetedRevenueHours:
          description: "The budgeted revenue form billable hour, for the standard\
            \ simplified project budget and the time-tracking section of this.\r\n\
            This field is default calculated in the GUI as budgetedHours x budgetedBillableRate,\
            \ and returned as null if not set directly or overridden."
          example: 300.97
          format: double
          nullable: true
          type: number
        BudgetedTotalRevenue:
          description: "The budgeted total revenue for the project, for the standard\
            \ simplified project budget.\r\nIf not set directly, this field will inherit\
            \ the value/calculated value of budgetedRevenueHours, and if so return\
            \ null."
          example: 1500.97
          format: double
          nullable: true
          type: number
        Code:
          description: "The code of the project.\r\nWhen creating a sub-project in\
            \ POST operations, the parentProjectCode property must be set as well\
            \ and equal to the main project code that the sub-project will be a part\
            \ of.\r\nThe response from the POST will return the notation code of main\
            \ project.code of sub-project as the code of the created sub-project."
          example: "10"
          nullable: true
          type: string
        ContactPersonId:
          description: "The id of the customer contact person for this project.\r\n\
            Can only be set if customerNo is set, and the contact person entity must\
            \ exist and be related to the customer set on the project."
          example: 12345
          format: int64
          nullable: true
          type: integer
        ContractNo:
          description: The contract number for this project.
          example: 123-244A
          nullable: true
          type: string
        CreatedDateTimeOffset:
          description: The timestamp the project entity was created.
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        CreatedFromImportJournalId:
          description: "The created from import journal identifier (guid).\r\nIf the\
            \ project was created from an import, this property will contain the Id\
            \ of the Import that created this entity."
          example: 21d4ddf1-c8bf-4874-8879-b70468fa1032
          format: uuid
          nullable: true
          readOnly: true
          type: string
        CustomerId:
          description: The id of the customer this project is related to.
          example: 123456
          format: int64
          nullable: true
          type: integer
        CustomerNo:
          description: The number of the customer this project is related to.
          example: 10251
          format: int64
          nullable: true
          readOnly: true
          type: integer
        DeliveryTerm:
          description: "The delivery term of the project.\r\nThe delivery term set\
            \ will be the default value when an invoice draft is created in Go with\
            \ this project (and the projects customer).\r\nIf null, the default delivery\
            \ term set on the client is used."
          example: DAP
          nullable: true
          readOnly: true
          type: string
        DeliveryTermId:
          description: "The id of the delivery term of the project.\r\nThe delivery\
            \ term set will be the default value when an invoice draft is created\
            \ in Go with this project (and the projects customer).\r\nIf null, the\
            \ default delivery term set on the client is used."
          example: 123456
          format: int64
          nullable: true
          type: integer
        DenyTimeTracking:
          description: "Value indicating if registration of new time tracking entries\
            \ should be denied for the project.\r\nDefault is false."
          example: true
          nullable: true
          type: boolean
        DepartmentCode:
          description: The code of the department this project is associated with.
          example: 1A
          nullable: true
          readOnly: true
          type: string
        DepartmentId:
          description: The id of the department this project is associated with.
          example: 123456
          format: int64
          nullable: true
          type: integer
        EndDate:
          description: "The end date of the project.\r\nOnly date is used, time is\
            \ ignored."
          example: 2023-01-06
          format: date
          nullable: true
          type: string
        ExpenseMarkupDescription:
          description: "The description added to the invoice line when markup of expenses\
            \ is added.\r\nRelevant only if expenseMarkupEnabled is true."
          example: Markup abc
          nullable: true
          type: string
        ExpenseMarkupEnabled:
          description: "Value indicating whether markup of expenses is used when billing\
            \ the project.\r\nThe default value will depend on the time-tracking settings\
            \ on the client, as the value will inherit from the general time-tracking\
            \ settings if not overridden."
          example: false
          nullable: true
          type: boolean
        ExpenseMarkupFactor:
          description: "The overridden markup factor used when billing expenses for\
            \ this project. This value is usually set between 0 and 100.\r\nIf using\
            \ a 50% markup of expenses, this value should be 50. Can only be set if\
            \ expenseMarkupEnabled is set true.\r\nIf not set (null) and expenseMarkupEnabled\
            \ is true, the default markup value in the time-tracking settings in Go\
            \ will be used.\r\nCannot be set negative."
          example: 25.98
          format: double
          nullable: true
          type: number
        ExternalNumber:
          description: "The external number of the project.\r\nThis field can be used\
            \ to reference the project number in the external system, if the project\
            \ codes are not kept in 1:1 sync between Go and the external system.\r\
            \nNote that this field is not available in the GUI."
          example: 12345
          format: int64
          nullable: true
          type: integer
        FixedPrice:
          description: "The fixed price set on the project.\r\nRelevant only if the\
            \ billingMethod is fixed price."
          example: 15.42
          format: double
          nullable: true
          type: number
        HourlyRateMarkupDescription:
          description: "The description added to the invoice when markup of hourly\
            \ rate is added.\r\nRelevant only if useHourlyMarkup is true."
          example: Markup abc
          nullable: true
          type: string
        HourlyRateMarkupEnabled:
          description: "Value indicating whether hourly rate markup is used on the\
            \ project.\r\nThe default value will depend on the time-tracking settings\
            \ on the client, as the value will inherit from the general time-tracking\
            \ settings if not overridden."
          example: true
          nullable: true
          type: boolean
        HourlyRateMarkupFactor:
          description: "The overridden markup factor used when billing hours on this\
            \ project.\r\nThis value is usually set between 0 and 1.\r\nIf using a\
            \ 50% increase to hourly rate by markup this value should be 0.5.\r\n\
            Can only be set if useHourlyMarkup is set true.\r\nIf not set (null) and\
            \ useHourlyMarkup is true, the default markup value in Go will be used."
          example: 53.21
          format: double
          nullable: true
          type: number
        Id:
          description: "The identifier of the project.\r\nThis identifier is unique\
            \ and assigned by PowerOffice Go when a new entity is saved, and should\
            \ be provided when an entity should be edited or deleted (PATCH or DELETE)."
          example: 12345
          format: int64
          readOnly: true
          type: integer
        IsActive:
          description: "Value indicating whether this instance is active.\r\nInactive\
            \ projects disable the usage of that projects in the GUI."
          example: false
          nullable: true
          type: boolean
        IsBillable:
          description: Value indicating whether the project is billable.
          example: false
          nullable: true
          type: boolean
        IsInternal:
          description: "Value indicating whether the project is internal.\r\nInternal\
            \ projects are usually not associated with a paying customer, and only\
            \ internal time-tracking activities can be used"
          example: true
          nullable: true
          type: boolean
        LastChangedDateTimeOffset:
          description: The timestamp of the last change of the project.
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        LocationCode:
          description: The code of the location dimension this project is associated
            with.
          example: "1"
          nullable: true
          readOnly: true
          type: string
        LocationId:
          description: The id of the location dimension this project is associated
            with.
          example: 123456
          format: int64
          nullable: true
          type: integer
        Name:
          description: The name of the project.
          example: Project A
          nullable: true
          type: string
        ParentProjectCode:
          description: "The code of the parent project.\r\nMandatory for sub projects."
          example: "1"
          nullable: true
          readOnly: true
          type: string
        ParentProjectId:
          description: "The id of the parent project.\r\nMandatory for sub projects."
          example: 123456
          format: int64
          nullable: true
          type: integer
        PaymentTermId:
          description: "The id of the payment term of the project.\r\nThis is the\
            \ default number of days after an invoice is sent until it is due.\r\n\
            The payment term set will be the default value when an invoice draft is\
            \ created in Go with this project (if customer is set an the project is\
            \ billable).\r\nIf null, the default payment term set on the customer\
            \ or on the client will be used."
          example: 123456
          format: int64
          nullable: true
          type: integer
        PaymentTerms:
          description: "The payment term of the project.\r\nThis is the default number\
            \ of days after an invoice is sent until it is due.\r\nThe payment term\
            \ set will be the default value when an invoice draft is created in Go\
            \ with this project (if customer is set an the project is billable).\r\
            \nIf null, the default payment term set on the customer or on the client\
            \ will be used."
          example: 14
          format: int32
          nullable: true
          readOnly: true
          type: integer
        Progress:
          description: "Progress in percentage. If set, value must be between 0 and\
            \ 100."
          example: 12
          format: int32
          maximum: 100
          minimum: 0
          nullable: true
          type: integer
        ProjectBillingMethod:
          $ref: '#/components/schemas/ProjectBillingMethod'
        ProjectManagerEmployeeId:
          description: The employee id of the manager of the project.
          example: 123456
          format: int64
          nullable: true
          type: integer
        ProjectManagerEmployeeNo:
          description: The (employee) code of the project manager.
          example: 2
          format: int64
          nullable: true
          readOnly: true
          type: integer
        ProjectStatus:
          $ref: '#/components/schemas/ProjectStatusType'
        PurchaseOrderNo:
          description: "The purchase order number for this project.\r\nIf set, this\
            \ purchase order number will also default appear on invoices when billing\
            \ this project."
          example: "1337"
          nullable: true
          type: string
        StartDate:
          description: The start date of the project.
          example: 2022-10-26
          format: date
          nullable: true
          type: string
      type: object
    BillableRateSpecification:
      description: Specifies how to retrieve the hourly rate when billing.<p>Members:</p><ul><li><i>Activity</i>
        - The hourly rate is retrieved from the TimeTracking.Activity.</li><li><i>Employee</i>
        - The hourly rate is retrieved from the Party.Employee.</li><li><i>Project</i>
        - The hourly rate is retrieved from the Projects.Project.</li></ul>
      enum:
      - Activity
      - Employee
      - Project
      nullable: true
      type: string
    ProjectBillingMethod:
      description: Project billing method describing how a project is billed to the
        customer.<p>Members:</p><ul><li><i>FixedPrice</i> - Fixed price</li><li><i>Time</i>
        - Only billable hours</li><li><i>TimeAndExpenses</i> - Billable hours and
        other expenses</li></ul>
      enum:
      - FixedPrice
      - Time
      - TimeAndExpenses
      nullable: true
      type: string
    ProjectStatusType:
      description: Project Status representing the status of the project.<p>Members:</p><ul><li><i>Tentative</i>
        - The project is on hold.</li><li><i>Active</i> - The project is in progress.</li><li><i>Archived</i>
        - The project is archived.</li><li><i>NotStarted</i> - The project has not
        yet started.</li><li><i>Complete</i> - The project is completed.</li></ul>
      enum:
      - Tentative
      - Active
      - Archived
      - NotStarted
      - Complete
      nullable: true
      type: string
    ProductPostDto:
      additionalProperties: false
      description: The product post DTO contains only properties relevant to a product-object
        in Go that can be altered directly via POST-method in API.
      example:
        ProductGroupId: 123456
        UnitOfMeasureCode: BX
        Description: Bottomless box of mysteries
        OptionalSalesAccountId: 123456
        StandardSalesAccountId: 123456
        StockOnHand: 12
        IsStockItem: true
        ProductType: Product
        OptionalSalesAccount: 3100
        Code: BA-12
        StandardSalesAccount: 3000
        Name: Big blue box
        ProductGroupCode: PG123
        Gtin: "00012345678905"
        IsArchived: true
        UnitCost: 200.57
        UnitPrice: 100.5
        StandardSalesAccountAgricultureDepartment: null
        OptionalSalesAccountAgricultureDepartment: None
      properties:
        Code:
          description: The code of the product.
          example: BA-12
          maxLength: 100
          nullable: true
          type: string
        Description:
          description: The description of the product.
          example: Bottomless box of mysteries
          nullable: true
          type: string
        Gtin:
          description: The GTIN (Global trade item number) of the product.
          example: "00012345678905"
          nullable: true
          type: string
        IsArchived:
          description: "Value indicating whether the product is archived (set inactive).\r\
            \nDefault is false.\r\nArchived products will be unavailable for usage\
            \ in the GUI."
          example: true
          nullable: true
          type: boolean
        IsStockItem:
          description: "Value indicating whether the product stock on hand can be\
            \ registered.\r\nIf false, the stock on hand cannot be set and the stock\
            \ fields will not be visible in the GUI."
          example: true
          nullable: true
          type: boolean
        Name:
          description: The name of the product.
          example: Big blue box
          maxLength: 400
          nullable: true
          type: string
        OptionalSalesAccount:
          description: "The code of the optional sales account of the product.\r\n\
            The optional sales account is the account the sale will be posted to,\
            \ if the product is included on a sales order line that is invoiced, and\
            \ that sales order line is set to trigger the use of the optional sales\
            \ account.\r\nIf null, the product will inherit the optional sales account\
            \ from the product group or the general sales settings on the client (in\
            \ that order).\r\nThe concept of sales accounts is also explained in the\
            \ common workflow articles.\r\nNote that if OptionalSalesAccountId is\
            \ set as well in the request, OptionalSalesAccountId takes precedence\
            \ and OptionalSalesAccount is ignored."
          example: 3100
          format: int64
          nullable: true
          type: integer
        OptionalSalesAccountAgricultureDepartment:
          $ref: '#/components/schemas/AgricultureDepartment'
        OptionalSalesAccountId:
          description: "The id of the optional sales account of the product.\r\nThe\
            \ optional sales account is the account the sale will be posted to, if\
            \ the product is included on a sales order line that is invoiced, and\
            \ that sales order line is set to trigger the use of the optional sales\
            \ account.\r\nIf null, the product will inherit the optional sales account\
            \ from the product group or the general sales settings on the client (in\
            \ that order).\r\nThe concept of sales accounts is also explained in the\
            \ common workflow articles."
          example: 123456
          format: int64
          nullable: true
          type: integer
        ProductGroupCode:
          description: "The code of the product group this product belong to.\r\n\
            If not provided, the product will be placed in the default product group.\r\
            \nNote that if ProductGroupId is set as well in the request, ProductGroupId\
            \ takes precedence and ProductGroupCode is ignored."
          example: PG123
          nullable: true
          type: string
        ProductGroupId:
          description: "The id of the product group this product belong to.\r\nIf\
            \ not provided, the product will be placed in the default product group."
          example: 123456
          format: int64
          nullable: true
          type: integer
        ProductType:
          $ref: '#/components/schemas/ProductType'
        StandardSalesAccount:
          description: "The code of the standard sales account of the product.\r\n\
            The standard sales account is the default account the sale will be posted\
            \ to if the product is included on a sales order line that is invoiced.\r\
            \nIf null, the product will inherit the standard sales account from the\
            \ product group or the general sales settings on the client (in that order).\r\
            \nThe concept of sales accounts is also explained in the common workflow\
            \ articles.\r\nNote that if StandardSalesAccountId is set as well in the\
            \ request, StandardSalesAccountId takes precedence and StandardSalesAccount\
            \ is ignored."
          example: 3000
          format: int64
          nullable: true
          type: integer
        StandardSalesAccountAgricultureDepartment:
          $ref: '#/components/schemas/AgricultureDepartment'
        StandardSalesAccountId:
          description: "The id of the standard sales account of the product.\r\nThe\
            \ standard sales account is the default account the sale will be posted\
            \ to if the product is included on a sales order line that is invoiced.\r\
            \nIf null, the product will inherit the standard sales account from the\
            \ product group or the general sales settings on the client (in that order).\r\
            \nThe concept of sales accounts is also explained in the common workflow\
            \ articles."
          example: 123456
          format: int64
          nullable: true
          type: integer
        StockOnHand:
          description: "The number of products in stock.\r\nMight differ from the\
            \ available stock if confirmed sales orders exists, thus reserving a portion\
            \ of the stock."
          example: 12
          format: double
          nullable: true
          type: number
        UnitCost:
          description: "The cost per unit of the product.\r\nIf null, the product\
            \ will inherit the unit cost from the product group."
          example: 200.57
          format: double
          nullable: true
          type: number
        UnitOfMeasureCode:
          $ref: '#/components/schemas/UnitOfMeasureType'
        UnitPrice:
          description: "The sales price per unit of the product.\r\nIf null, the product\
            \ will inherit the unit price from the product group."
          example: 100.5
          format: double
          nullable: true
          type: number
      required:
      - Name
      type: object
    ManualVoucherDto:
      additionalProperties: false
      description: Dto for manual voucher type
      example:
        CurrencyCode: EUR
        SaftBatchId: "12312"
        Description: My first voucher description
        ImportedVoucherNo: 23145
        VoucherDate: 2024-03-20
        SaftSourceId: System_123
        VoucherLines:
        - ExternalLineReference: 123ABC
          AccountId: 12345
          Description: Hello accounting world!
          Dim3Id: 12345
          Dim2Id: 12345
          Dim1Id: 12345
          LocationId: 12345
          ProjectId: 12345
          Quantity: 100
          CurrencyExchangeRate: 10.78
          ProductId: 12345
          VatReturnSpecification: None
          VatId: 12345
          CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
          CurrencyAmount: 69420
          CurrencyCode: USD
          Quantity2: 200
          PostingDate: 2021-09-28
          CustomMatchingReference: 123ABC
          DepartmentId: 12345
          Id: 0
        - ExternalLineReference: 123ABC
          AccountId: 12345
          Description: Hello accounting world!
          Dim3Id: 12345
          Dim2Id: 12345
          Dim1Id: 12345
          LocationId: 12345
          ProjectId: 12345
          Quantity: 100
          CurrencyExchangeRate: 10.78
          ProductId: 12345
          VatReturnSpecification: None
          VatId: 12345
          CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
          CurrencyAmount: 69420
          CurrencyCode: USD
          Quantity2: 200
          PostingDate: 2021-09-28
          CustomMatchingReference: 123ABC
          DepartmentId: 12345
          Id: 0
        IsReversed: false
        ExternalImportReference: 123abc
        Id: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        VoucherNo: 123456
      properties:
        CreatedDateTimeOffset:
          description: The timestamp the year end voucher entity was created.
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        CurrencyCode:
          description: "The currency code of the voucher header.\r\nThe line amounts\
            \ will default be determined in the currency specified in the header.\r\
            \nFor some voucher types, different currency codes can be set on the line\
            \ level, thus overriding the currency of the head.\r\nCurrencies active\
            \ on the client can be queried using the AccountingSettings service. Currency\
            \ codes follow the ISO4217 standard."
          example: EUR
          maxLength: 3
          minLength: 0
          nullable: true
          type: string
        Description:
          description: The description field of the voucher header.
          example: My first voucher description
          nullable: true
          type: string
        ExternalImportReference:
          description: "The external import reference associated with the voucher.\
            \ This property can be set by integrations creating\r\nvouchers, in order\
            \ to reference the external system and ensure a duplicate check (only\
            \ one instance of the\r\nreference can exist on the client). Can be used\
            \ to correlate/duplicate check transactions. Guid's are\r\nrecommended,\
            \ or other unique references. This property is only available using the\
            \ api (not visible in the user\r\ninterface)"
          example: 123abc
          nullable: true
          type: string
        Id:
          description: A value that uniquely identifies this voucher. The Id is assigned
            by Go when the entry is created
          example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
          format: uuid
          readOnly: true
          type: string
        ImportedVoucherNo:
          description: "The external voucher number. Can be used to reference the\
            \ voucher number in the external system. The external\r\nvoucher number\
            \ is visible in Go in various reports."
          example: 23145
          format: int64
          nullable: true
          type: integer
        IsReversed:
          description: Value indicating whether this voucher has been reversed.
          example: false
          nullable: true
          readOnly: true
          type: boolean
        SaftBatchId:
          description: "The SAF-T batch id. This is the ID of the batch in the system\
            \ that transferred the voucher. Should be set if\r\nthis voucher is a\
            \ batch voucher containing the entries of multiple vouchers in the external\
            \ system. When this\r\nvoucher is exported to SAF-T, this property is\
            \ transactions BatchID in the SAF-T file. The external systems\r\nSAF-T\
            \ export should set the same BatchId on all the transactions that are\
            \ included in this Voucher to ensure\r\naudit trail. Max length 35 characters."
          example: "12312"
          nullable: true
          type: string
        SaftSourceId:
          description: "The SAF-T source id. This is the ID of the system that generated\
            \ the voucher. When this voucher is exported to\r\nSAF-T, this property\
            \ is mapped on the transactions SourceID in the SAF-T file. If the creating\
            \ system is\r\nrequired to export it's own SAF-T file, this source id\
            \ should correspond with the SystemID in the SAF-T file of\r\nthe external\
            \ system to ensure an audit trail. Max length is 35 characters."
          example: System_123
          nullable: true
          type: string
        VoucherDate:
          description: "The voucher date.\r\nThis represents the date of the voucher,\
            \ the document date of an invoice for instance,\r\nand may differ from\
            \ the transaction dates for lines the voucher, depending on the type of\
            \ voucher."
          example: 2024-03-20
          format: date
          type: string
        VoucherLines:
          description: The lines of the manual voucher
          items:
            $ref: '#/components/schemas/ManualVoucherLineDto'
          nullable: true
          type: array
        VoucherNo:
          description: "The voucher number. This is the voucher number assigned by\
            \ Go when the voucher was posted. Voucher numbers are\r\nassigned by Go\
            \ in sequence."
          example: 123456
          format: int64
          readOnly: true
          type: integer
      type: object
    ManualVoucherLineDto:
      additionalProperties: false
      description: The lines of the manual voucher
      example:
        ExternalLineReference: 123ABC
        AccountId: 12345
        Description: Hello accounting world!
        Dim3Id: 12345
        Dim2Id: 12345
        Dim1Id: 12345
        LocationId: 12345
        ProjectId: 12345
        Quantity: 100
        CurrencyExchangeRate: 10.78
        ProductId: 12345
        VatReturnSpecification: None
        VatId: 12345
        CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        CurrencyAmount: 69420
        CurrencyCode: USD
        Quantity2: 200
        PostingDate: 2021-09-28
        CustomMatchingReference: 123ABC
        DepartmentId: 12345
        Id: 0
      properties:
        AccountId:
          description: The id of the general ledger account or the subledger account
            to post the amount.
          example: 12345
          format: int64
          nullable: true
          type: integer
        CreatedDateTimeOffset:
          description: The timestamp the year end voucher entity was created.
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          type: string
        CurrencyAmount:
          description: "The amount on the line, in the currency specified by the currency\
            \ code of the voucher or the currency of the voucher line if available.\r\
            \nGross amounts should be provided, along with the relevant vat code.\
            \ The amount must be a positive or negative number not 0."
          example: 69420
          format: double
          type: number
        CurrencyCode:
          description: "The currency code of the voucher line. Will inherit the currency\
            \ code of the voucher head if not set.\r\nThe line currency amounts will\
            \ be determined in the currency specified on the line. Currencies active\
            \ on the\r\nclient can be queried using the AccountingSettings service.\
            \ Currency codes follow the ISO4217 standard."
          example: USD
          nullable: true
          type: string
        CurrencyExchangeRate:
          description: "The normalized currency exchange rate. Always base 1.\r\n\
            \            \r\nRelevant to set if the voucher line have a foreign currency\
            \ with a specific currency exchange rate.\r\nIf not set, the field will\
            \ inherit the rate in Go for the posting date set. The rates in Go are\
            \ retrieved\r\nfrom ECB via api."
          example: 10.78
          format: double
          nullable: true
          type: number
        CustomMatchingReference:
          description: "The custom matching reference of the line. This property may\
            \ be used for matching purposes on sub-ledger\r\naccounts, where entries\
            \ posted with a CustomMatchingReference will be matched immediately with\
            \ existing entries\r\nin the sub-ledger that have the same CustomMatchingReference\
            \ and opposite amount (unless existing entries are\r\nalready matched\
            \ out)."
          example: 123ABC
          nullable: true
          type: string
        DepartmentId:
          description: The department Id.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Description:
          description: The description of the voucher line.
          example: Hello accounting world!
          nullable: true
          type: string
        Dim1Id:
          description: The id of the dimension 1 associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim2Id:
          description: The id of the dimension 2 associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim3Id:
          description: The id of the dimension 3 associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        ExternalLineReference:
          description: "The external line reference associated with the line. This\
            \ property can only be set using the api, in order\r\nto reference the\
            \ external system's line. Can be used to correlate/duplicate check transactions."
          example: 123ABC
          nullable: true
          type: string
        Id:
          description: "A value that uniquely identifies the voucher objects line.\
            \ The id is assigned by Go when the entry is\r\ncreated. This id have\
            \ no relation to the account transaction id posted by the system."
          format: int64
          readOnly: true
          type: integer
        LocationId:
          description: The id of the location dimension associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        PostingDate:
          description: "The posting date.\r\nThis is the date of effect in the accounting\
            \ system for the Amount and CurrencyAmount (also the currency\r\nconversion\
            \ date used by Go if the currency rate was not set explicit when posted).\r\
            \nAlways present on transactions."
          example: 2021-09-28
          format: date
          type: string
        ProductId:
          description: The product id associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        ProjectId:
          description: The id of the project associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Quantity:
          description: "The quantity dimension set on the line.\r\nUsually associated\
            \ with the product set on the line.\r\nIf the client is an agriculture\
            \ client, the quantity is associated with the unit1 of the general ledger\
            \ account."
          example: 100
          format: double
          nullable: true
          type: number
        Quantity2:
          description: "The quantity2 dimension set on the line.\r\nRelevant only\
            \ for agriculture clients, where the quantity2 is associated with the\
            \ unit2 of the general ledger account."
          example: 200
          format: double
          nullable: true
          type: number
        VatId:
          description: The id of the vat code used for the credit entry.
          example: 12345
          format: int32
          nullable: true
          type: integer
        VatReturnSpecification:
          $ref: '#/components/schemas/VatReturnSpecification'
      required:
      - PostingDate
      type: object
    ManualVoucherPostDto:
      additionalProperties: false
      description: Dto for posting manual voucher type
      example:
        CurrencyCode: EUR
        SaftBatchId: "12312"
        Description: My first voucher description
        ImportedVoucherNo: 23145
        VoucherDate: 2024-03-20
        SaftSourceId: System_123
        VoucherLines:
        - ExternalLineReference: 123ABC
          AccountId: 12345
          Description: Hello accounting world!
          Dim3Id: 12345
          Dim2Id: 12345
          Dim1Id: 12345
          LocationId: 12345
          ProjectId: 12345
          Quantity: 100
          CurrencyExchangeRate: 10.78
          ProductId: 12345
          VatReturnSpecification: None
          VatId: 12345
          CurrencyAmount: 69420
          CurrencyCode: USD
          Quantity2: 200
          PostingDate: 2021-09-28
          CustomMatchingReference: 123ABC
          DepartmentId: 12345
        - ExternalLineReference: 123ABC
          AccountId: 12345
          Description: Hello accounting world!
          Dim3Id: 12345
          Dim2Id: 12345
          Dim1Id: 12345
          LocationId: 12345
          ProjectId: 12345
          Quantity: 100
          CurrencyExchangeRate: 10.78
          ProductId: 12345
          VatReturnSpecification: None
          VatId: 12345
          CurrencyAmount: 69420
          CurrencyCode: USD
          Quantity2: 200
          PostingDate: 2021-09-28
          CustomMatchingReference: 123ABC
          DepartmentId: 12345
        ExternalImportReference: 123abc
      properties:
        CurrencyCode:
          description: "The currency code of the voucher header.\r\nThe line amounts\
            \ will default be determined in the currency specified in the header.\r\
            \nFor some voucher types, different currency codes can be set on the line\
            \ level, thus overriding the currency of the head.\r\nCurrencies active\
            \ on the client can be queried using the AccountingSettings service. Currency\
            \ codes follow the ISO4217 standard."
          example: EUR
          maxLength: 3
          minLength: 0
          nullable: true
          type: string
        Description:
          description: The description field of the voucher header.
          example: My first voucher description
          nullable: true
          type: string
        ExternalImportReference:
          description: "The external import reference associated with the voucher.\
            \ This property can be set by integrations creating\r\nvouchers, in order\
            \ to reference the external system and ensure a duplicate check (only\
            \ one instance of the\r\nreference can exist on the client). Can be used\
            \ to correlate/duplicate check transactions. Guid's are\r\nrecommended,\
            \ or other unique references. This property is only available using the\
            \ api (not visible in the user\r\ninterface)"
          example: 123abc
          nullable: true
          type: string
        ImportedVoucherNo:
          description: "The external voucher number. Can be used to reference the\
            \ voucher number in the external system. The external\r\nvoucher number\
            \ is visible in Go in various reports."
          example: 23145
          format: int64
          nullable: true
          type: integer
        SaftBatchId:
          description: "The SAF-T batch id. This is the ID of the batch in the system\
            \ that transferred the voucher. Should be set if\r\nthis voucher is a\
            \ batch voucher containing the entries of multiple vouchers in the external\
            \ system. When this\r\nvoucher is exported to SAF-T, this property is\
            \ transactions BatchID in the SAF-T file. The external systems\r\nSAF-T\
            \ export should set the same BatchId on all the transactions that are\
            \ included in this Voucher to ensure\r\naudit trail. Max length 35 characters."
          example: "12312"
          nullable: true
          type: string
        SaftSourceId:
          description: "The SAF-T source id. This is the ID of the system that generated\
            \ the voucher. When this voucher is exported to\r\nSAF-T, this property\
            \ is mapped on the transactions SourceID in the SAF-T file. If the creating\
            \ system is\r\nrequired to export it's own SAF-T file, this source id\
            \ should correspond with the SystemID in the SAF-T file of\r\nthe external\
            \ system to ensure an audit trail. Max length is 35 characters."
          example: System_123
          nullable: true
          type: string
        VoucherDate:
          description: "The voucher date.\r\nThis represents the date of the voucher,\
            \ the document date of an invoice for instance,\r\nand may differ from\
            \ the transaction dates for lines the voucher, depending on the type of\
            \ voucher."
          example: 2024-03-20
          format: date
          type: string
        VoucherLines:
          description: The lines of the manual voucher to be posted
          items:
            $ref: '#/components/schemas/ManualVoucherLinePostDto'
          nullable: true
          type: array
      required:
      - CurrencyCode
      - VoucherDate
      type: object
    ManualVoucherLinePostDto:
      additionalProperties: false
      description: The lines of the manual voucher to be posted
      example:
        ExternalLineReference: 123ABC
        AccountId: 12345
        Description: Hello accounting world!
        Dim3Id: 12345
        Dim2Id: 12345
        Dim1Id: 12345
        LocationId: 12345
        ProjectId: 12345
        Quantity: 100
        CurrencyExchangeRate: 10.78
        ProductId: 12345
        VatReturnSpecification: None
        VatId: 12345
        CurrencyAmount: 69420
        CurrencyCode: USD
        Quantity2: 200
        PostingDate: 2021-09-28
        CustomMatchingReference: 123ABC
        DepartmentId: 12345
      properties:
        AccountId:
          description: The id of the general ledger account or the subledger account
            to post the amount.
          example: 12345
          format: int64
          nullable: true
          type: integer
        CurrencyAmount:
          description: "The amount on the line, in the currency specified by the currency\
            \ code of the voucher or the currency of the voucher line if available.\r\
            \nGross amounts should be provided, along with the relevant vat code.\
            \ The amount must be a positive or negative number not 0."
          example: 69420
          format: double
          type: number
        CurrencyCode:
          description: "The currency code of the voucher line. Will inherit the currency\
            \ code of the voucher head if not set.\r\nThe line currency amounts will\
            \ be determined in the currency specified on the line. Currencies active\
            \ on the\r\nclient can be queried using the AccountingSettings service.\
            \ Currency codes follow the ISO4217 standard."
          example: USD
          nullable: true
          type: string
        CurrencyExchangeRate:
          description: "The normalized currency exchange rate. Always base 1.\r\n\
            \            \r\nRelevant to set if the voucher line have a foreign currency\
            \ with a specific currency exchange rate.\r\nIf not set, the field will\
            \ inherit the rate in Go for the posting date set. The rates in Go are\
            \ retrieved\r\nfrom ECB via api."
          example: 10.78
          format: double
          nullable: true
          type: number
        CustomMatchingReference:
          description: "The custom matching reference of the line. This property may\
            \ be used for matching purposes on sub-ledger\r\naccounts, where entries\
            \ posted with a CustomMatchingReference will be matched immediately with\
            \ existing entries\r\nin the sub-ledger that have the same CustomMatchingReference\
            \ and opposite amount (unless existing entries are\r\nalready matched\
            \ out)."
          example: 123ABC
          nullable: true
          type: string
        DepartmentId:
          description: The department Id.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Description:
          description: The description of the voucher line.
          example: Hello accounting world!
          nullable: true
          type: string
        Dim1Id:
          description: The id of the dimension 1 associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim2Id:
          description: The id of the dimension 2 associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim3Id:
          description: The id of the dimension 3 associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        ExternalLineReference:
          description: "The external line reference associated with the line. This\
            \ property can only be set using the api, in order\r\nto reference the\
            \ external system's line. Can be used to correlate/duplicate check transactions."
          example: 123ABC
          nullable: true
          type: string
        LocationId:
          description: The id of the location dimension associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        PostingDate:
          description: "The posting date.\r\nThis is the date of effect in the accounting\
            \ system for the Amount and CurrencyAmount (also the currency\r\nconversion\
            \ date used by Go if the currency rate was not set explicit when posted).\r\
            \nAlways present on transactions."
          example: 2021-09-28
          format: date
          type: string
        ProductId:
          description: The product id associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        ProjectId:
          description: The id of the project associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Quantity:
          description: "The quantity dimension set on the line.\r\nUsually associated\
            \ with the product set on the line.\r\nIf the client is an agriculture\
            \ client, the quantity is associated with the unit1 of the general ledger\
            \ account."
          example: 100
          format: double
          nullable: true
          type: number
        Quantity2:
          description: "The quantity2 dimension set on the line.\r\nRelevant only\
            \ for agriculture clients, where the quantity2 is associated with the\
            \ unit2 of the general ledger account."
          example: 200
          format: double
          nullable: true
          type: number
        VatId:
          description: The id of the vat code used for the credit entry.
          example: 12345
          format: int32
          nullable: true
          type: integer
        VatReturnSpecification:
          $ref: '#/components/schemas/VatReturnSpecification'
      required:
      - AccountId
      - PostingDate
      - VatId
      type: object
    SupplierPostDto:
      additionalProperties: false
      description: The supplier post DTO contains only properties relevant to a supplier-object
        in Go that can be altered directly via POST-method in API.
      example:
        DateOfBirth: 2003-07-15
        LegalName: Ford Motor Company AS
        OrganizationNumber: "980386465"
        MailAddress:
          AddressLine2: "Att: Ola Nordmann"
          AddressLine1: Postboks 404
          ZipCode: "0161"
          City: Oslo
          CountryCode: "NO"
          ExternalCode: 123ABC
        ContactGroupIds:
        - 0
        - 0
        FirstName: Henry
        WebsiteUrl: www.supplierswebsite.net
        ExternalImportReference: abc123-def456
        ExternalNumber: 12345
        EmailAddress: abc@test.yxz
        SubLedgerNumberSeriesId: 529c49e3-618e-40e6-a3b9-5ee82bc698f2
        Name: Ford Motor
        CurrencyCode: NOK
        IsArchived: false
        Number: 20010
        IsPerson: false
        Payout: true
        PhoneNumber: "+4712345678"
        LastName: Ford
      properties:
        ContactGroupIds:
          description: "The contact group ids the current contact is part of, or sets\
            \ contact group id you want to add this contact to."
          items:
            format: int64
            type: integer
          nullable: true
          type: array
        CurrencyCode:
          description: "The standard currency code for the supplier.\r\nCurrencies\
            \ active on the client can be queried using the AccountingSettings service.\r\
            \nCurrency codes follow the ISO4217 standard.\r\nDefaults to *NOK*."
          example: NOK
          nullable: true
          type: string
        DateOfBirth:
          description: "The date of birth of the supplier.\r\n Relevant only if the\
            \ supplier is a person (when isPerson is true)."
          example: 2003-07-15
          format: date
          nullable: true
          type: string
        EmailAddress:
          description: "The (general) e-mail address registered for the supplier.\r\
            \nThis field is validated for typos in POST/PATCH calls."
          example: abc@test.yxz
          nullable: true
          type: string
        ExternalImportReference:
          description: "The external import reference.\r\nThis field is not available\
            \ in the GUI, but can be used by the integrating party to reference the\
            \ external system.\r\nThe field must be unique within each class of Contacts\
            \ (unique for customers, suppliers or employees).\r\nMax length 50 characters."
          example: abc123-def456
          nullable: true
          type: string
        ExternalNumber:
          description: "The external number.\r\nThis field can be used to reference\
            \ the supplier number in the external system, if the supplier numbers\
            \ are not kept in 1:1 sync between Go and the external system.\r\nThe\
            \ field is available in the GUI with the name \"External Code\".\r\nThe\
            \ field must be unique within each class of Contacts (unique for customers,\
            \ suppliers or employees).\r\nNote that in file imports to Go (including\
            \ file imports using the ImportFile endpoint), this number has precedence\
            \ over the supplier number.\r\nI.e. when importing incoming invoices using\
            \ a file, with the supplier number 20000 set in the file, the import will\
            \ choose the supplier with ExternalNumber 20000 over the supplier with\
            \ Number 20000. This is the case for file imports only."
          example: 12345
          format: int64
          nullable: true
          type: integer
        FirstName:
          description: "The first name of the supplier.\r\n Relevant and required\
            \ if the supplier is a person (i.e. isPerson is true)"
          example: Henry
          nullable: true
          type: string
        IsArchived:
          description: "A value indicating whether this contact entity is/should be\
            \ archived (set inactive)\r\nCannot be set if the contact have ledger\
            \ balances (as either a customer or as a supplier)."
          example: false
          nullable: true
          type: boolean
        IsPerson:
          description: "A value indicating whether this supplier is a person.\r\n\
            The setting apply to the contact entity, and is used to differentiate\
            \ persons from companies.\r\nIf set true, the firstName and lastName should\
            \ be set.\r\nThe default setting is false if not provided."
          example: false
          nullable: true
          type: boolean
        LastName:
          description: "The last name of the supplier.\r\nRelevant and required if\
            \ the supplier is a person (i.e. isPerson is true)"
          example: Ford
          nullable: true
          type: string
        LegalName:
          description: "The legal name of the supplier.\r\nThe legal name is the official\
            \ registered name of the company, as opposed to the name which might be\
            \ a marketing name.\r\nRelevant only if the supplier is a company (i.e.\
            \ isPerson is false)"
          example: Ford Motor Company AS
          nullable: true
          type: string
        MailAddress:
          $ref: '#/components/schemas/ContactAddressPostDto'
        Name:
          description: "The name of the supplier.\r\nRelevant and required if the\
            \ supplier is a company (i.e. isPerson is false)"
          example: Ford Motor
          nullable: true
          type: string
        Number:
          description: "The supplier number.\r\nThe number will also represent the\
            \ supplier ledger account, used for supplier ledger transactions.\r\n\
            When creating new suppliers and setting the number (as opposed to letting\
            \ Go assign the next available number if left blank), the number must\
            \ be within range of the supplier ledger numberseries that exist on the\
            \ client in Go."
          example: 20010
          format: int64
          nullable: true
          type: integer
        OrganizationNumber:
          description: "The organization number of the supplier.\r\nRelevant for suppliers\
            \ that are companies (i.e. isPerson is false)."
          example: "980386465"
          nullable: true
          type: string
        Payout:
          description: "A flag indicating whether invoices or credit notes from this\
            \ supplier should be paid using remittance.\r\nDefault true, and if true\
            \ a remittance draft will be created when voucher are posted in the journal\
            \ entry."
          example: true
          nullable: true
          type: boolean
        PhoneNumber:
          description: The phone number of the supplier.
          example: "+4712345678"
          nullable: true
          type: string
        SubLedgerNumberSeriesId:
          description: "The Id of the sub-ledger series this supplier belong in.\r\
            \nRelevant if the client have multiple supplier sub-ledger series, and\
            \ if so highly relevant in POST calls if the integrating party does not\
            \ set Number but lets Go assign the next available Number.\r\nIn such\
            \ cases, Go will create the supplier in the default sub-ledger series,\
            \ unless this property is set."
          example: 529c49e3-618e-40e6-a3b9-5ee82bc698f2
          format: uuid
          nullable: true
          type: string
        WebsiteUrl:
          description: The url to the suppliers website.
          example: www.supplierswebsite.net
          nullable: true
          type: string
      type: object
    ProjectPostDto:
      additionalProperties: false
      description: The project post DTO contains only properties relevant to a project-object
        in Go that can be altered directly via POST-method in API.
      example:
        DenyTimeTracking: true
        Name: Project A
        StartDate: 2022-10-26
        ContractNo: 123-244A
        ProjectManagerEmployeeId: 123456
        BudgetedTotalRevenue: 1500.97
        FixedPrice: 15.42
        AllowAllEmployees: true
        BrandingThemeId: 123456
        HourlyRateMarkupDescription: Markup abc
        ExpenseMarkupFactor: 25.98
        LocationCode: "1"
        CustomerId: 123456
        BudgetedHours: 150.97
        ExternalNumber: 12345
        Code: "10"
        IsInternal: true
        BudgetedCostOfGoods: 200.97
        BudgetedOtherOperatingExpenses: 2500.97
        AttachExpenseVouchersWhenBilling: true
        BudgetedRevenueHours: 300.97
        BudgetedBillableRate: 200.97
        DeliveryTermId: 123456
        BudgetedPayrollExpenses: 500.97
        ParentProjectCode: "1"
        HourlyRateMarkupEnabled: true
        ExpenseMarkupEnabled: false
        IsActive: false
        ProjectManagerEmployeeNo: 2
        ContactPersonId: 12345
        PaymentTerms: 14
        CustomerNo: 10251
        DeliveryTerm: DAP
        ParentProjectId: 123456
        AllowAllActivities: true
        IsBillable: false
        PurchaseOrderNo: "1337"
        DepartmentCode: 1A
        HourlyRateMarkupFactor: 53.21
        PaymentTermId: 123456
        Progress: 12
        LocationId: 123456
        BillableRateSpecification: Activity
        ProjectBillingMethod: FixedPrice
        BillableRate: 350.67
        EndDate: 2023-01-06
        ProjectStatus: Tentative
        BrandingThemeCode: "1"
        DepartmentId: 123456
        ExpenseMarkupDescription: Markup abc
      properties:
        AllowAllActivities:
          description: "Value indicating whether it's allowed to use all the available\
            \ Activity when adding TimeTrackingEntry on the project.\r\nDefault is\
            \ true.\r\nIf this is set to false, the activities allowed on the project\
            \ should be specified through the ProjectActivities method.\r\nIf the\
            \ project is a sub-project (parentProjectCode has a value), allow all\
            \ activities means that this sub-project is allowed to use all the activities\
            \ specified on the parent project."
          example: true
          nullable: true
          type: boolean
        AllowAllEmployees:
          description: "Value indicating whether all employees can add time-tracking\
            \ entries with this project.\r\nDefault is true.\r\nIf this is set to\
            \ false, the team members working on the project should be specified through\
            \ the ProjectTeamMembers method.\r\nIf the project is a sub-project (parentProjectCode\
            \ has a value), allow all employees means that this sub-project is allowed\
            \ to use all the team members specified on the parent project."
          example: true
          nullable: true
          type: boolean
        AttachExpenseVouchersWhenBilling:
          description: "Value indicating whether the original documents for expense\
            \ vouchers should bet added as attachments when billing this project.\r\
            \nDefault is false."
          example: true
          nullable: true
          type: boolean
        BillableRate:
          description: "The billable hourly rate for time-transactions registered\
            \ with billable activities for this project.\r\nMust be a positive number,\
            \ and this rate can only be set and used if the projects billing method\
            \ is Time or TimeAndExpense, and the billableRateSpecification is set\
            \ to Project.\r\nAlso note that a hierarchy exist in Go for time-tracking\
            \ price settings of billable rates."
          example: 350.67
          format: double
          nullable: true
          type: number
        BillableRateSpecification:
          $ref: '#/components/schemas/BillableRateSpecification'
        BrandingThemeCode:
          description: "The code of the branding theme default used when billing this\
            \ project.\r\nIf null, the standard branding theme (on the client) is\
            \ applied.\r\nNote that if BrandingThemeId is set as well in the request,\
            \ BrandingThemeId takes precedence and BrandingThemeCode is ignored."
          example: "1"
          nullable: true
          type: string
        BrandingThemeId:
          description: "The id of the branding theme default used when billing this\
            \ project.\r\nIf null, the standard branding theme (on the client) is\
            \ applied."
          example: 123456
          format: int64
          nullable: true
          type: integer
        BudgetedBillableRate:
          description: "The budgeted average billable rate of time-tracking entries\
            \ for the project, for the standard simplified project budget."
          example: 200.97
          format: double
          nullable: true
          type: number
        BudgetedCostOfGoods:
          description: "The budgeted cost of goods on this project, for the standard\
            \ simplified project budget."
          example: 200.97
          format: double
          nullable: true
          type: number
        BudgetedHours:
          description: "The budgeted amount of work hours for the project, for the\
            \ standard simplified project budget."
          example: 150.97
          format: double
          nullable: true
          type: number
        BudgetedOtherOperatingExpenses:
          description: "The budgeted other operating expenses for this project, for\
            \ the standard simplified project budget."
          example: 2500.97
          format: double
          nullable: true
          type: number
        BudgetedPayrollExpenses:
          description: "The budgeted cost of payroll expenses for this project, for\
            \ the standard simplified project budget."
          example: 500.97
          format: double
          nullable: true
          type: number
        BudgetedRevenueHours:
          description: "The budgeted revenue form billable hour, for the standard\
            \ simplified project budget and the time-tracking section of this.\r\n\
            This field is default calculated in the GUI as budgetedHours x budgetedBillableRate,\
            \ and returned as null if not set directly or overridden."
          example: 300.97
          format: double
          nullable: true
          type: number
        BudgetedTotalRevenue:
          description: "The budgeted total revenue for the project, for the standard\
            \ simplified project budget.\r\nIf not set directly, this field will inherit\
            \ the value/calculated value of budgetedRevenueHours, and if so return\
            \ null."
          example: 1500.97
          format: double
          nullable: true
          type: number
        Code:
          description: "The code of the project.\r\nWhen creating a sub-project in\
            \ POST operations, the parentProjectCode property must be set as well\
            \ and equal to the main project code that the sub-project will be a part\
            \ of.\r\nThe response from the POST will return the notation code of main\
            \ project.code of sub-project as the code of the created sub-project."
          example: "10"
          nullable: true
          type: string
        ContactPersonId:
          description: "The id of the customer contact person for this project.\r\n\
            Can only be set if customerNo is set, and the contact person entity must\
            \ exist and be related to the customer set on the project."
          example: 12345
          format: int64
          nullable: true
          type: integer
        ContractNo:
          description: The contract number for this project.
          example: 123-244A
          nullable: true
          type: string
        CustomerId:
          description: The id of the customer this project is related to.
          example: 123456
          format: int64
          nullable: true
          type: integer
        CustomerNo:
          description: "The number of the customer this project is related to.\r\n\
            Note that if CustomerId is set as well in the request, CustomerId takes\
            \ precedence and CustomerNo is ignored."
          example: 10251
          format: int64
          nullable: true
          type: integer
        DeliveryTerm:
          description: "The delivery term of the project.\r\nThe delivery term set\
            \ will be the default value when an invoice draft is created in Go with\
            \ this project (and the projects customer).\r\nThe default set of delivery\
            \ terms provided in Go are incoterms, but any custom string can be set.\r\
            \nIf null, the default delivery term set on the client is used.\r\nNote\
            \ that if DeliveryTermId is set as well in the request, DeliveryTermId\
            \ takes precedence and DeliveryTerm is ignored."
          example: DAP
          nullable: true
          type: string
        DeliveryTermId:
          description: "The id of the delivery term of the project.\r\nThe delivery\
            \ term set will be the default value when an invoice draft is created\
            \ in Go with this project (and the projects customer).\r\nIf null, the\
            \ default delivery term set on the client is used."
          example: 123456
          format: int64
          nullable: true
          type: integer
        DenyTimeTracking:
          description: "Value indicating if registration of new time tracking entries\
            \ should be denied for the project.\r\nDefault is false."
          example: true
          nullable: true
          type: boolean
        DepartmentCode:
          description: "The code of the department this project is associated with.\r\
            \nNote that if DepartmentId is set as well in the request, DepartmentId\
            \ takes precedence and DepartmentCode is ignored."
          example: 1A
          nullable: true
          type: string
        DepartmentId:
          description: The id of the department this project is associated with.
          example: 123456
          format: int64
          nullable: true
          type: integer
        EndDate:
          description: "The end date of the project.\r\nOnly date is used, time is\
            \ ignored."
          example: 2023-01-06
          format: date
          nullable: true
          type: string
        ExpenseMarkupDescription:
          description: "The description added to the invoice line when markup of expenses\
            \ is added.\r\nRelevant only if expenseMarkupEnabled is true."
          example: Markup abc
          nullable: true
          type: string
        ExpenseMarkupEnabled:
          description: "Value indicating whether markup of expenses is used when billing\
            \ the project.\r\nThe default value will depend on the time-tracking settings\
            \ on the client, as the value will inherit from the general time-tracking\
            \ settings if not overridden."
          example: false
          nullable: true
          type: boolean
        ExpenseMarkupFactor:
          description: "The overridden markup factor used when billing expenses for\
            \ this project. This value is usually set between 0 and 100.\r\nIf using\
            \ a 50% markup of expenses, this value should be 50. Can only be set if\
            \ expenseMarkupEnabled is set true.\r\nIf not set (null) and expenseMarkupEnabled\
            \ is true, the default markup value in the time-tracking settings in Go\
            \ will be used.\r\nCannot be set negative."
          example: 25.98
          format: double
          nullable: true
          type: number
        ExternalNumber:
          description: "The external number of the project.\r\nThis field can be used\
            \ to reference the project number in the external system, if the project\
            \ codes are not kept in 1:1 sync between Go and the external system.\r\
            \nNote that this field is not available in the GUI."
          example: 12345
          format: int64
          nullable: true
          type: integer
        FixedPrice:
          description: "The fixed price set on the project.\r\nRelevant only if the\
            \ billingMethod is fixed price."
          example: 15.42
          format: double
          nullable: true
          type: number
        HourlyRateMarkupDescription:
          description: "The description added to the invoice when markup of hourly\
            \ rate is added.\r\nRelevant only if useHourlyMarkup is true."
          example: Markup abc
          nullable: true
          type: string
        HourlyRateMarkupEnabled:
          description: "Value indicating whether hourly rate markup is used on the\
            \ project.\r\nThe default value will depend on the time-tracking settings\
            \ on the client, as the value will inherit from the general time-tracking\
            \ settings if not overridden."
          example: true
          nullable: true
          type: boolean
        HourlyRateMarkupFactor:
          description: "The overridden markup factor used when billing hours on this\
            \ project.\r\nThis value is usually set between 0 and 1.\r\nIf using a\
            \ 50% increase to hourly rate by markup this value should be 0.5.\r\n\
            Can only be set if useHourlyMarkup is set true.\r\nIf not set (null) and\
            \ useHourlyMarkup is true, the default markup value in Go will be used."
          example: 53.21
          format: double
          nullable: true
          type: number
        IsActive:
          description: "Value indicating whether this instance is active.\r\nInactive\
            \ projects disable the usage of that projects in the GUI."
          example: false
          nullable: true
          type: boolean
        IsBillable:
          description: Value indicating whether the project is billable.
          example: false
          nullable: true
          type: boolean
        IsInternal:
          description: "Value indicating whether the project is internal.\r\nInternal\
            \ projects are usually not associated with a paying customer, and only\
            \ internal time-tracking activities can be used"
          example: true
          nullable: true
          type: boolean
        LocationCode:
          description: "The code of the location dimension this project is associated\
            \ with.\r\nNote that if LocationId is set as well in the request, LocationId\
            \ takes precedence and LocationCode is ignored."
          example: "1"
          nullable: true
          type: string
        LocationId:
          description: The id of the location dimension this project is associated
            with.
          example: 123456
          format: int64
          nullable: true
          type: integer
        Name:
          description: The name of the project.
          example: Project A
          nullable: true
          type: string
        ParentProjectCode:
          description: "The code of the parent project.\r\nMandatory for sub projects.\r\
            \nIf the new project is a sub project, the ParentProjectCode must be set\
            \ to the Code of the parent project, otherwise it will be treated as a\
            \ new main project.\r\nNote that if ParentProjectId is set as well in\
            \ the request, ParentProjectId takes precedence and ParentProjectCode\
            \ is ignored."
          example: "1"
          nullable: true
          type: string
        ParentProjectId:
          description: "The id of the parent project.\r\nMandatory for sub projects."
          example: 123456
          format: int64
          nullable: true
          type: integer
        PaymentTermId:
          description: "The id of the payment term of the project.\r\nThis is the\
            \ default number of days after an invoice is sent until it is due.\r\n\
            The payment term set will be the default value when an invoice draft is\
            \ created in Go with this project (if customer is set an the project is\
            \ billable).\r\nIf null, the default payment term set on the customer\
            \ or on the client will be used."
          example: 123456
          format: int64
          nullable: true
          type: integer
        PaymentTerms:
          description: "The payment term of the project.\r\nThis is the default number\
            \ of days after an invoice is sent until it is due.\r\nThe payment term\
            \ set will be the default value when an invoice draft is created in Go\
            \ with this project (if customer is set an the project is billable).\r\
            \nThis property will take precedence over any term set on the customer\
            \ entity.\r\nIf null, the default payment term set on the customer or\
            \ on the client will be used.\r\nNote that if PaymentTermId is set as\
            \ well in the request, PaymentTermId takes precedence and PaymentTerms\
            \ is ignored."
          example: 14
          format: int32
          nullable: true
          type: integer
        Progress:
          description: "Progress in percentage. If set, value must be between 0 and\
            \ 100."
          example: 12
          format: int32
          maximum: 100
          minimum: 0
          nullable: true
          type: integer
        ProjectBillingMethod:
          $ref: '#/components/schemas/ProjectBillingMethod'
        ProjectManagerEmployeeId:
          description: The employee id of the manager of the project.
          example: 123456
          format: int64
          nullable: true
          type: integer
        ProjectManagerEmployeeNo:
          description: "The employee code of the manager of the project.\r\nNote that\
            \ if ProjectManagerEmployeeId is set as well in the request, ProjectManagerEmployeeId\
            \ takes precedence and ProjectManagerEmployeeNo is ignored."
          example: 2
          format: int64
          nullable: true
          type: integer
        ProjectStatus:
          $ref: '#/components/schemas/ProjectStatusType'
        PurchaseOrderNo:
          description: "The purchase order number for this project.\r\nIf set, this\
            \ purchase order number will also default appear on invoices when billing\
            \ this project."
          example: "1337"
          nullable: true
          type: string
        StartDate:
          description: The start date of the project.
          example: 2022-10-26
          format: date
          nullable: true
          type: string
      required:
      - Name
      type: object
    ClientDto:
      additionalProperties: false
      description: The available properties returned after creating a new client.
      example:
        ClientName: Office Power
        OrganizationNumber: "980386465"
        IsActive: true
        Id: 09ab6bcf-4219-4149-8283-6b6a7342bfd9
      properties:
        ClientName:
          description: The name of the client.
          example: Office Power
          nullable: true
          readOnly: true
          type: string
        Id:
          description: The unique identifier that the new client has in Go.
          example: 09ab6bcf-4219-4149-8283-6b6a7342bfd9
          format: uuid
          readOnly: true
          type: string
        IsActive:
          description: Value indicating whether the client is active or not in Go.
          example: true
          readOnly: true
          type: boolean
        OrganizationNumber:
          description: The organization number of the client.
          example: "980386465"
          nullable: true
          readOnly: true
          type: string
      type: object
    VoucherApprovalStatusResponseDto:
      additionalProperties: false
      description: Dto for available information returned after successfully posting
        a status update.
      example:
        IsPosted: true
        VoucherId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        InApprovalWorkflow: false
      properties:
        InApprovalWorkflow:
          description: "Property indicating whether the journal entry voucher is sent\
            \ to approval and is in the approval workflow. If true, the voucher cannot\
            \ be deleted"
          example: false
          type: boolean
        IsPosted:
          description: "Property indicating whether the journal entry voucher is posted.\
            \ If true, the voucher is posted an cannot be deleted via api or edited\
            \ by a user in the GUI. If false, the voucher is unposted"
          example: true
          type: boolean
        VoucherId:
          description: "A value that uniquely identifies the voucher. The Id is assigned\
            \ by Go when the entry is created, and will persist when/if the voucher\
            \ is posted."
          format: uuid
          type: string
      type: object
    SubmitForApprovalPostDto:
      additionalProperties: false
      description: DTO for posting comment when adding a voucher to the approval workflow.
      example:
        Comment: This is my submitted voucher
      properties:
        Comment:
          description: "Comment for the voucher.\r\nThe comment text should be human-readable.\
            \ If necessary, use newline characters (\\n) to format the text for better\
            \ readability"
          example: This is my submitted voucher
          maxLength: 1000
          nullable: true
          type: string
      type: object
    EmploymentLightDto:
      additionalProperties: false
      description: "The Employment Light DTO contains properties relevant to an employment\
        \ relationship object in Go.\r\nIt is a lightweight (slimmed down) version\
        \ of the Employment DTO, and therefore contains fewer properties."
      example:
        StartDate: 2021-01-01
        EmploymentForm: Permanent
        Id: 12345
        EmployeeId: 12345
        EndDate: 2022-07-31
        CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        EnterpriseId: 12345
        LastChangedDateTimeOffset: 2021-09-30T09:33:00.1234567Z
      properties:
        CreatedDateTimeOffset:
          description: The timestamp when the employment entity was created.
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        EmployeeId:
          description: The identifier of the employee the employment belongs to.
          example: 12345
          format: int64
          readOnly: true
          type: integer
        EmploymentForm:
          $ref: '#/components/schemas/EmploymentFormType'
        EndDate:
          description: The end date of the employment.
          example: 2022-07-31
          format: date
          nullable: true
          readOnly: true
          type: string
        EnterpriseId:
          description: The identifier of the enterprise for the employment.
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        Id:
          description: The id of the employment (employment relationship).
          example: 12345
          format: int64
          readOnly: true
          type: integer
        LastChangedDateTimeOffset:
          description: The timestamp when the employment entity was last changed.
          example: 2021-09-30T09:33:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        StartDate:
          description: The start date of the employment.
          example: 2021-01-01
          format: date
          readOnly: true
          type: string
      type: object
    EmploymentFormType:
      description: |-
        The form of employment.<p>Members:</p><ul><li><i>Permanent</i> - Permanent employment.</li><li><i>Temporary</i> - Temporary employment.</li><li><i>PermanentEmploymentAndHiredOut</i> - Permanent employment and hired out.
                        New value from 2025, will be reported as Permanent before 2025.</li><li><i>TemporaryEmploymentAndHiredOut</i> - Temporary employment and hired out
                        New value from 2025, will be reported as Temporary before 2025.</li><li><i>TemporaryEmploymentAsOnCallCoverstaff</i> - Temporary employment as on-call coverstaff.
                        New value from 2025, will be reported as Temporary before 2025.</li></ul>
      enum:
      - Permanent
      - Temporary
      - PermanentEmploymentAndHiredOut
      - TemporaryEmploymentAndHiredOut
      - TemporaryEmploymentAsOnCallCoverstaff
      nullable: true
      type: string
    ManualJournalEntryVoucherDto:
      additionalProperties: false
      description: Dto representing properties available on manual type voucher lines.
      example:
        CurrencyCode: EUR
        Pages:
        - VoucherId: d5956bfc-5648-4299-9186-7e0c224bdf1e
          Id: 11001
          CreatedDateTimeOffset: 2000-01-23T04:56:07.000+00:00
        - VoucherId: d5956bfc-5648-4299-9186-7e0c224bdf1e
          Id: 11001
          CreatedDateTimeOffset: 2000-01-23T04:56:07.000+00:00
        Description: My first voucher description
        VoucherDate: 2024-03-20
        Dim3Id: 12345
        Dim2Id: 12345
        Dim1Id: 12345
        LocationId: 12345
        ProjectId: 12345
        DepartmentId: 12345
        Id: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        ManualVoucherLines:
        - DebitAccountId: 12345
          Accrual:
            BalanceAccountNo: 2970
            IsActive: true
            BalanceAccountAgricultureDepartment: None
            FromDate: 2023-01-01
            ToDate: 2023-12-31
            BalanceAccountId: 123456
          Description: Hello accounting world!
          CreditVatId: 12345
          Dim3Id: 12345
          Dim2Id: 12345
          DebitVatId: 12345
          Dim1Id: 12345
          ProductId: 12345
          CreditVatReturnSpecification: None
          DebitAccountAgricultureDepartment: null
          CurrencyCode: EUR
          DebitVatReturnSpecification: null
          CreditAccountId: 12345
          LocationId: 12345
          ProjectId: 12345
          Quantity: 100
          CurrencyExchangeRate: 10.78
          CreatedDateTimeOffset: 2024-03-20T12:52:00.1234567Z
          CurrencyAmount: 69420
          Quantity2: 200
          AgricultureDetails:
            ProductCode: 1
            ProductDetailCode: 5
            ProductQualityCode: 5
            ProductRegistrationId: ProductRegistrationId
            ProductGtinNumber: ProductGtinNumber
            ProductRacialCode: ProductRacialCode
            ProductAnimalId: ProductAnimalId
            ProductHasForestCertificationCode: true
            IsMainProductLine: true
            ProductAdditionSubtractionCode: 6
            ProductGender: Male
            AgriculturalIndustryCode: 0
            ProductMachineType: ProductMachineType
            ProductEcological: true
            ProductDateOfBirth: 2000-01-23
            ProductChassisId: ProductChassisId
          PostingDate: 2024-09-18
          DepartmentId: 12345
          Id: 12345
          CreditAccountAgricultureDepartment: null
          LastChangedDateTimeOffset: 2024-03-20T13:13:00.1234567Z
        - DebitAccountId: 12345
          Accrual:
            BalanceAccountNo: 2970
            IsActive: true
            BalanceAccountAgricultureDepartment: None
            FromDate: 2023-01-01
            ToDate: 2023-12-31
            BalanceAccountId: 123456
          Description: Hello accounting world!
          CreditVatId: 12345
          Dim3Id: 12345
          Dim2Id: 12345
          DebitVatId: 12345
          Dim1Id: 12345
          ProductId: 12345
          CreditVatReturnSpecification: None
          DebitAccountAgricultureDepartment: null
          CurrencyCode: EUR
          DebitVatReturnSpecification: null
          CreditAccountId: 12345
          LocationId: 12345
          ProjectId: 12345
          Quantity: 100
          CurrencyExchangeRate: 10.78
          CreatedDateTimeOffset: 2024-03-20T12:52:00.1234567Z
          CurrencyAmount: 69420
          Quantity2: 200
          AgricultureDetails:
            ProductCode: 1
            ProductDetailCode: 5
            ProductQualityCode: 5
            ProductRegistrationId: ProductRegistrationId
            ProductGtinNumber: ProductGtinNumber
            ProductRacialCode: ProductRacialCode
            ProductAnimalId: ProductAnimalId
            ProductHasForestCertificationCode: true
            IsMainProductLine: true
            ProductAdditionSubtractionCode: 6
            ProductGender: Male
            AgriculturalIndustryCode: 0
            ProductMachineType: ProductMachineType
            ProductEcological: true
            ProductDateOfBirth: 2000-01-23
            ProductChassisId: ProductChassisId
          PostingDate: 2024-09-18
          DepartmentId: 12345
          Id: 12345
          CreditAccountAgricultureDepartment: null
          LastChangedDateTimeOffset: 2024-03-20T13:13:00.1234567Z
      properties:
        CurrencyCode:
          description: "The currency code of the voucher header.\r\nThe line amounts\
            \ will default be determined in the currency specified in the header.\r\
            \nFor some voucher types, different currency codes can be set on the line\
            \ level, thus overriding the currency of the head.\r\nCurrencies active\
            \ on the client can be queried using the AccountingSettings service. Currency\
            \ codes follow the ISO4217 standard."
          example: EUR
          maxLength: 3
          minLength: 0
          nullable: true
          type: string
        DepartmentId:
          description: "The department Id of the voucher header.\r\nThe lines will\
            \ inherit the department from the voucher head if not specified on the\
            \ lines.\r\nDepartments can be queried and identified using the Department\
            \ service."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Description:
          description: The description field of the voucher header.
          example: My first voucher description
          nullable: true
          type: string
        Dim1Id:
          description: "The id of the dimension 1 associated with the voucher header.\r\
            \nThe lines will inherit the dim1 from the voucher head if not specified\
            \ on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim2Id:
          description: "The id of the dimension 2 associated with the voucher header.\r\
            \nThe lines will inherit the dim2 from the voucher head if not specified\
            \ on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim3Id:
          description: "The id of the dimension 3 associated with the voucher header.\r\
            \nThe lines will inherit the dim3 from the voucher head if not specified\
            \ on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Id:
          description: "A value that uniquely identifies this voucher.\r\nThe Id is\
            \ assigned by Go when the entry is created, and will persist when/if the\
            \ voucher is posted."
          example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
          format: uuid
          readOnly: true
          type: string
        LocationId:
          description: "The id of the location dimension associated with the voucher\
            \ header.\r\nThe lines will inherit the location from the voucher head\
            \ if not specified on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        ManualVoucherLines:
          description: The lines of the manual voucher
          items:
            $ref: '#/components/schemas/ManualJournalEntryVoucherLineDto'
          nullable: true
          type: array
        Pages:
          description: A collection of voucher pages associated with this voucher.
          items:
            $ref: '#/components/schemas/VoucherPage'
          nullable: true
          readOnly: true
          type: array
        ProjectId:
          description: "The id of the project associated with the voucher header.\r\
            \nThe lines will inherit the project from the voucher head if not specified\
            \ on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        VoucherDate:
          description: "The voucher date.\r\nThis represents the date of the voucher,\
            \ the document date of an invoice for instance,\r\nand may differ from\
            \ the transaction dates for lines the voucher, depending on the type of\
            \ voucher."
          example: 2024-03-20
          format: date
          nullable: true
          type: string
      type: object
    ManualJournalEntryVoucherLineDto:
      additionalProperties: false
      description: A manual voucher line.
      example:
        DebitAccountId: 12345
        Accrual:
          BalanceAccountNo: 2970
          IsActive: true
          BalanceAccountAgricultureDepartment: None
          FromDate: 2023-01-01
          ToDate: 2023-12-31
          BalanceAccountId: 123456
        Description: Hello accounting world!
        CreditVatId: 12345
        Dim3Id: 12345
        Dim2Id: 12345
        DebitVatId: 12345
        Dim1Id: 12345
        ProductId: 12345
        CreditVatReturnSpecification: None
        DebitAccountAgricultureDepartment: null
        CurrencyCode: EUR
        DebitVatReturnSpecification: null
        CreditAccountId: 12345
        LocationId: 12345
        ProjectId: 12345
        Quantity: 100
        CurrencyExchangeRate: 10.78
        CreatedDateTimeOffset: 2024-03-20T12:52:00.1234567Z
        CurrencyAmount: 69420
        Quantity2: 200
        AgricultureDetails:
          ProductCode: 1
          ProductDetailCode: 5
          ProductQualityCode: 5
          ProductRegistrationId: ProductRegistrationId
          ProductGtinNumber: ProductGtinNumber
          ProductRacialCode: ProductRacialCode
          ProductAnimalId: ProductAnimalId
          ProductHasForestCertificationCode: true
          IsMainProductLine: true
          ProductAdditionSubtractionCode: 6
          ProductGender: Male
          AgriculturalIndustryCode: 0
          ProductMachineType: ProductMachineType
          ProductEcological: true
          ProductDateOfBirth: 2000-01-23
          ProductChassisId: ProductChassisId
        PostingDate: 2024-09-18
        DepartmentId: 12345
        Id: 12345
        CreditAccountAgricultureDepartment: null
        LastChangedDateTimeOffset: 2024-03-20T13:13:00.1234567Z
      properties:
        Accrual:
          $ref: '#/components/schemas/AccrualBase'
        AgricultureDetails:
          $ref: '#/components/schemas/AgricultureDetails'
        CreatedDateTimeOffset:
          description: The timestamp of when the line was created.
          example: 2024-03-20T12:52:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        CreditAccountAgricultureDepartment:
          $ref: '#/components/schemas/AgricultureDepartment'
        CreditAccountId:
          description: The id of the general ledger account or the subledger account
            to post the credit amount.
          example: 12345
          format: int64
          nullable: true
          type: integer
        CreditVatId:
          description: The id of the vat code used for the credit entry.
          example: 12345
          format: int32
          nullable: true
          type: integer
        CreditVatReturnSpecification:
          $ref: '#/components/schemas/VatReturnSpecification'
        CurrencyAmount:
          description: "The amount on the line, in the currency specified by the currency\
            \ code of the voucher or the currency of the voucher line if available.\r\
            \nGross amounts should be provided, along with the relevant vat code."
          example: 69420
          format: double
          type: number
        CurrencyCode:
          description: "The currency code of the voucher line. Will inherit the currency\
            \ code of the voucher head if not set. The line amounts be determined\
            \ in the currency specified on the line.\r\nCurrencies active on the client\
            \ can be queried using the AccountingSettings service. Currency codes\
            \ follow the ISO4217 standard."
          example: EUR
          nullable: true
          type: string
        CurrencyExchangeRate:
          description: "The normalized currency exchange rate. Always base 1. Relevant\
            \ to set if the voucher line have a foreign currency with a specific currency\
            \ exchange rate.\r\nIf not set, the field will inherit the rate in Go\
            \ for the posting date set.\r\nThe rates in Go are retrieved from ECB."
          example: 10.78
          format: double
          nullable: true
          type: number
        DebitAccountAgricultureDepartment:
          $ref: '#/components/schemas/AgricultureDepartment'
        DebitAccountId:
          description: The id of the general ledger account or the subledger account
            to post the debit amount.
          example: 12345
          format: int64
          nullable: true
          type: integer
        DebitVatId:
          description: The id of the vat code used for the debit entry.
          example: 12345
          format: int32
          nullable: true
          type: integer
        DebitVatReturnSpecification:
          $ref: '#/components/schemas/VatReturnSpecification'
        DepartmentId:
          description: "The department Id. Will inherit department id from the voucher\
            \ head if not specifically set on the line.\r\nDepartment Id = -1 means\
            \ no department.\r\nDepartments can be queried and identified using the\
            \ Department service."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Description:
          description: The description of the voucher line.
          example: Hello accounting world!
          nullable: true
          type: string
        Dim1Id:
          description: "The id of the dimension 1 associated with the line.\r\nWill\
            \ inherit dim1Id from the voucher head if not specifically set on the\
            \ line.\r\nDim1Id = -1 means no dimension 1."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim2Id:
          description: "The id of the dimension 2 associated with the line.\r\nWill\
            \ inherit dim2Id from the voucher head if not specifically set on the\
            \ line.\r\nDim2Id = -1 means no dimension 2."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim3Id:
          description: "The id of the dimension 3 associated with the line.\r\nWill\
            \ inherit dim1Id from the voucher head if not specifically set on the\
            \ line.\r\nDim3Id = -1 means no dimension 3."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Id:
          description: "A value that uniquely identifies this journal entry voucher\
            \ line.\r\nThe Id is assigned by Go when the entry is created."
          example: 12345
          format: int64
          readOnly: true
          type: integer
        LastChangedDateTimeOffset:
          description: The timestamp of the last change of the line.
          example: 2024-03-20T13:13:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        LocationId:
          description: "The id of the location dimension associated with the line.\r\
            \nWill inherit locationId from the voucher head if not specifically set\
            \ on the line.\r\nLocationId = -1 means no location."
          example: 12345
          format: int64
          nullable: true
          type: integer
        PostingDate:
          description: "The posting date and transaction date of the line. This is\
            \ the date of effect in the accounting system for the Amount when the\
            \ voucher is posted.\r\nIf not set, the posting date will inherit the\
            \ voucher date set in the header.\r\nThe posting date is also the currency\
            \ conversion date used by Go if the currency rate is not set explicit."
          example: 2024-09-18
          format: date
          nullable: true
          type: string
        ProductId:
          description: The product id associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        ProjectId:
          description: "The id of the project associated with the line.\r\nWill inherit\
            \ projectId from the voucher head if not specifically set on the line.\r\
            \nProjectId = -1 means no project."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Quantity:
          description: "The quantity dimension set on the line.\r\nUsually associated\
            \ with the product set on the line.\r\nIf the client is an agriculture\
            \ client, the quantity is associated with the unit1 of the general ledger\
            \ account."
          example: 100
          format: double
          nullable: true
          type: number
        Quantity2:
          description: "The quantity2 dimension set on the line.\r\nRelevant only\
            \ for agriculture clients, where the quantity2 is associated with the\
            \ unit2 of the general ledger account."
          example: 200
          format: double
          nullable: true
          type: number
      type: object
    AccrualBase:
      additionalProperties: false
      description: "Accrual (Norwegian: Periodisering)"
      example:
        BalanceAccountNo: 2970
        IsActive: true
        BalanceAccountAgricultureDepartment: None
        FromDate: 2023-01-01
        ToDate: 2023-12-31
        BalanceAccountId: 123456
      properties:
        BalanceAccountAgricultureDepartment:
          $ref: '#/components/schemas/AgricultureDepartment'
        BalanceAccountId:
          description: "The account id of the balance account used for the accrual\
            \ balance\r\n(norwegian: balansekonto benyttet for periodiseringen)."
          example: 123456
          format: int64
          nullable: true
          type: integer
        BalanceAccountNo:
          description: "The account number of the balance account used for the accrual\
            \ balance\r\n(norwegian: balansekonto benyttet for periodiseringen)."
          example: 2970
          format: int64
          nullable: true
          type: integer
        FromDate:
          description: The start date of the accrual.
          example: 2023-01-01
          format: date
          type: string
        IsActive:
          description: Value indicating whether the accrual is active or not.
          example: true
          type: boolean
        ToDate:
          description: The end date of the accrual.
          example: 2023-12-31
          format: date
          type: string
      type: object
    AgricultureDetails:
      additionalProperties: false
      description: Additional agriculture product related information that needs to
        be stored to be able to report on it
      example:
        ProductCode: 1
        ProductDetailCode: 5
        ProductQualityCode: 5
        ProductRegistrationId: ProductRegistrationId
        ProductGtinNumber: ProductGtinNumber
        ProductRacialCode: ProductRacialCode
        ProductAnimalId: ProductAnimalId
        ProductHasForestCertificationCode: true
        IsMainProductLine: true
        ProductAdditionSubtractionCode: 6
        ProductGender: Male
        AgriculturalIndustryCode: 0
        ProductMachineType: ProductMachineType
        ProductEcological: true
        ProductDateOfBirth: 2000-01-23
        ProductChassisId: ProductChassisId
      properties:
        AgriculturalIndustryCode:
          description: Gets or sets the agricultural industry code (driftsgrein)
          format: int32
          nullable: true
          type: integer
        IsMainProductLine:
          description: Whether the posting info comes from a line that is a main product
            line (not only additions related to a product)
          type: boolean
        ProductAdditionSubtractionCode:
          description: Product addition or subtraction (Produkt tillegg trekk)
          format: int32
          nullable: true
          type: integer
        ProductAnimalId:
          description: The ID of the animal (Dyre-id)
          maxLength: 100
          nullable: true
          type: string
        ProductChassisId:
          description: VIN / Chassis number 17-digits according to iso
          maxLength: 17
          nullable: true
          type: string
        ProductCode:
          description: "Product code according to Landbrukets dataflyt, can differ\
            \ from product code voucher line"
          format: int32
          nullable: true
          type: integer
        ProductDateOfBirth:
          description: "Date of birth of the animal, required when information is\
            \ related to live cattle"
          format: date
          nullable: true
          type: string
        ProductDetailCode:
          description: Product detail code
          format: int32
          nullable: true
          type: integer
        ProductEcological:
          description: Whether a product is ecological or not
          nullable: true
          type: boolean
        ProductGender:
          $ref: '#/components/schemas/LivestockGender'
        ProductGtinNumber:
          description: Global unit trade number
          maxLength: 14
          nullable: true
          type: string
        ProductHasForestCertificationCode:
          description: Flag whether the forestry product is environmentally certified
            (Miljøsertifisert)
          nullable: true
          type: boolean
        ProductMachineType:
          description: Type of machinery
          maxLength: 100
          nullable: true
          type: string
        ProductQualityCode:
          description: The product quality code (Produktkvalitet)
          format: int32
          nullable: true
          type: integer
        ProductRacialCode:
          description: "The race of the animal, required on sale of live animals"
          maxLength: 32
          nullable: true
          type: string
        ProductRegistrationId:
          description: Registration number
          maxLength: 100
          nullable: true
          type: string
      type: object
    LivestockGender:
      description: The gender of a livestock<p>Members:</p><ul><li><i>Male</i> - Male
        (Hanndyr)</li><li><i>Female</i> - Female (Hunndyr)</li><li><i>NeuteredMale</i>
        - Neutered male (Kastrat)</li></ul>
      enum:
      - Male
      - Female
      - NeuteredMale
      nullable: true
      type: string
    VoucherPage:
      additionalProperties: false
      description: Represents a page of a voucher.
      example:
        VoucherId: d5956bfc-5648-4299-9186-7e0c224bdf1e
        Id: 11001
        CreatedDateTimeOffset: 2000-01-23T04:56:07.000+00:00
      properties:
        CreatedDateTimeOffset:
          description: The creation date and time of the voucher page.
          format: date-time
          readOnly: true
          type: string
        Id:
          description: The identifier of the voucher page.
          example: 11001
          format: int64
          readOnly: true
          type: integer
        VoucherId:
          description: The identifier of the voucher draft the page belongs to.
          example: d5956bfc-5648-4299-9186-7e0c224bdf1e
          format: uuid
          nullable: true
          readOnly: true
          type: string
      type: object
    EmployeePostDto:
      additionalProperties: false
      description: The Employee post DTO contains properties relevant to creating
        a new employee object in Go.
      example:
        HiredDate: 2003-07-15
        NationalIdNumber: "30011679680"
        InternationalIdReportToAltinn: false
        ExternalImportReference: abc123-def456
        Gender: Male
        JobTitle: Top Salesman
        StartDate: 2000-01-23
        Number: 2
        ManagerEmployeeNo: 10
        DateOfBirth: 2003-07-15
        DepartmentCode: 1A
        MailAddress:
          AddressLine2: "Att: Ola Nordmann"
          AddressLine1: Postboks 404
          ZipCode: "0161"
          City: Oslo
          CountryCode: "NO"
          ExternalCode: 123ABC
        ContactGroupIds:
        - 0
        - 0
        FirstName: Henry
        InternationalIdType: PassportNumber
        LocationCode: 4A
        LocationId: 123546
        ExternalNumber: 12345
        InternationalIdNumber: AB123456
        EndDate: 2003-07-15
        EmailAddress: abc@test.yxz
        SubLedgerNumberSeriesId: 529c49e3-618e-40e6-a3b9-5ee82bc698f2
        IsArchived: false
        InternationalIdCountryCode: SE
        PhoneNumber: "+4712345678"
        DepartmentId: 123456
        LastName: Ford
        ManagerEmployeeId: 123546
      properties:
        ContactGroupIds:
          description: "The contact group ids the current contact is part of, or sets\
            \ contact group id you want to add this contact to."
          items:
            format: int64
            type: integer
          nullable: true
          type: array
        DateOfBirth:
          description: The date of birth of the employee.
          example: 2003-07-15
          format: date
          nullable: true
          type: string
        DepartmentCode:
          description: "The code of the department this employee is associated with.\r\
            \nThe department entity must exist in Go in order to set the code.\r\n\
            Note that if DepartmentId is set as well in the request, DepartmentId\
            \ takes precedence and DepartmentCode is ignored."
          example: 1A
          nullable: true
          type: string
        DepartmentId:
          description: "The id of the department this employee is associated with.\r\
            \nUse the Departments endpoint to retrieve and/or create departments."
          example: 123456
          format: int64
          nullable: true
          type: integer
        EmailAddress:
          description: The (general) e-mail address registered for the employee.
          example: abc@test.yxz
          nullable: true
          type: string
        EndDate:
          description: "The end date of the employment of this employee.\r\nNote that\
            \ this field has no relation to the employment entity that is reported\
            \ (a-melding)."
          example: 2003-07-15
          format: date
          nullable: true
          type: string
        ExternalImportReference:
          description: "The external import reference of the employee.\r\nThis field\
            \ is not available in the GUI, but can be used by the integrating party\
            \ to reference the external system.\r\nThe field must be unique within\
            \ each class of Contacts (unique for customers, suppliers or employees).\r\
            \nMax length 50 characters."
          example: abc123-def456
          nullable: true
          type: string
        ExternalNumber:
          description: "The external number of the employee.\r\nThis field can be\
            \ used to reference the employee number in the external system, if the\
            \ employee numbers are not kept in 1:1 sync between Go and the external\
            \ system.\r\nThe field is available in the GUI with the name \"External\
            \ Code\".\r\nThe field must be unique within each class of Contacts (unique\
            \ for customers, suppliers or employees).\r\nNote that in file imports\
            \ to Go (including file imports using the ImportFile endpoint), this number\
            \ has precedence over the employee number. I.e. when importing vouchers\
            \ with employee sub-ledger entries using a file, with the employee number\
            \ 1 set in the file, the import will choose the employee with ExternalNumber\
            \ 1 over the employee with Number 1. This is the case for file imports\
            \ only."
          example: 12345
          format: int64
          nullable: true
          type: integer
        FirstName:
          description: "The first name of the employee.\r\nRequired when creating\
            \ new employees (POST operations)."
          example: Henry
          nullable: true
          type: string
        Gender:
          $ref: '#/components/schemas/Gender'
        HiredDate:
          description: The date the employee was hired.
          example: 2003-07-15
          format: date
          nullable: true
          type: string
        InternationalIdCountryCode:
          description: "The ISO 3166-1 alfa-2 country code (Two characters).\r\nRelevant\
            \ (and required) only if InternationalIdReportToAltinn is set to true."
          example: SE
          nullable: true
          type: string
        InternationalIdNumber:
          description: "The international Id number. For privacy reasons queries returns\
            \ 'hidden' if this field has a value and null if it's empty.\r\nAccess\
            \ to retrieving the value must be granted by the api team by a special\
            \ privilege (which also grant access to SSN and gender).\r\nRelevant (and\
            \ required) only if InternationalIdReportToAltinn is set to true."
          example: AB123456
          nullable: true
          type: string
        InternationalIdReportToAltinn:
          description: Value indicating whether International ID should be reported
            to Altinn (Related to tax card and payroll reporting).
          example: false
          nullable: true
          type: boolean
        InternationalIdType:
          $ref: '#/components/schemas/InternationalIdType'
        IsArchived:
          description: "Value indicating whether this contact entity is/should be\
            \ archived (set inactive).\r\nCannot be set if the contact have ledger\
            \ balances (as either an employee, a customer or as a supplier)."
          example: false
          nullable: true
          type: boolean
        JobTitle:
          description: The job title of the employee.
          example: Top Salesman
          nullable: true
          type: string
        LastName:
          description: "The last name of the employee.\r\nRequired when creating new\
            \ employees (POST operations)."
          example: Ford
          nullable: true
          type: string
        LocationCode:
          description: "The code of the location this employee is associated with.\r\
            \nThe location entity must exist in order to set this property.\r\nNote\
            \ that if LocationId is set as well in the request, LocationId takes precedence\
            \ and LocationCode is ignored."
          example: 4A
          nullable: true
          type: string
        LocationId:
          description: "The id of the location this employee is associated with.\r\
            \nUse the Locations endpoint to retrieve and/or create locations."
          example: 123546
          format: int64
          nullable: true
          type: integer
        MailAddress:
          $ref: '#/components/schemas/ContactAddressPostDto'
        ManagerEmployeeId:
          description: The employee id of the manager of the employee.
          example: 123546
          format: int64
          nullable: true
          type: integer
        ManagerEmployeeNo:
          description: "The employee number of the manager of the employee.\r\nNote\
            \ that if ManagerEmployeeId is set as well in the request, ManagerEmployeeId\
            \ takes precedence and ManagerEmployeeNo is ignored."
          example: 10
          format: int64
          nullable: true
          type: integer
        NationalIdNumber:
          description: "The (Norwegian) national identity number (also called Social\
            \ Security Number) or D-number.\r\nFor privacy reasons queries returns\
            \ 'hidden' if this field has a value and null if empty.\r\nAccess to retrieving\
            \ the value must be granted by the api team by a special privilege (which\
            \ also grant access to InternationalId and gender).\r\nNote that the number\
            \ is validated for the correct syntax when set."
          example: "30011679680"
          nullable: true
          type: string
        Number:
          description: "The number of the employee.\r\nThe number will also represent\
            \ the employee ledger account, used for employee ledger transactions.\r\
            \nWhen creating new employees and setting the number (as opposed to letting\
            \ Go assign the next available number if left blank), the number must\
            \ be within range of the employee legder numberseries that exist on the\
            \ client in Go."
          example: 2
          format: int64
          nullable: true
          type: integer
        PhoneNumber:
          description: The phone number of the employee.
          example: "+4712345678"
          nullable: true
          type: string
        StartDate:
          description: "The start date of the employment of this employee.\r\nNote\
            \ that this field has no relation to the employment entity that is reported\
            \ (a-melding)."
          format: date
          nullable: true
          type: string
        SubLedgerNumberSeriesId:
          description: "The Id of the subledgerseries this employee belong in.\r\n\
            Relevant if the client have multiple employee subledger series, and if\
            \ so highly relevant in POST calls if the integrating party does not set\
            \ Number but lets Go assign the next available Number.\r\nIn such cases,\
            \ Go will create the employee in the default subledger series, unless\
            \ this property is set."
          example: 529c49e3-618e-40e6-a3b9-5ee82bc698f2
          format: uuid
          nullable: true
          type: string
      required:
      - FirstName
      - LastName
      type: object
    SupplierCreditNoteJournalEntryVoucherDto:
      additionalProperties: false
      description: Supplier credit note DTO
      example:
        Description: My first voucher description
        Dim3Id: 12345
        Dim2Id: 12345
        Dim1Id: 12345
        SupplierContactId: 123456
        SupplierVoucherLines:
        - DebitAccountId: 12345
          Accrual:
            BalanceAccountNo: 2970
            IsActive: true
            BalanceAccountAgricultureDepartment: None
            FromDate: 2023-01-01
            ToDate: 2023-12-31
            BalanceAccountId: 123456
          Description: Hello accounting world!
          CreditVatId: 12345
          Dim3Id: 12345
          Dim2Id: 12345
          DebitVatId: 12345
          Dim1Id: 12345
          CreditAccountType: Customer
          ProductId: 12345
          CreditVatReturnSpecification: None
          ItemDescription: ItemDescription
          CreditContactId: 123456
          DebitContactId: 123456
          DebitAccountAgricultureDepartment: null
          DebitVatReturnSpecification: null
          SellersItemIdentification: SellersItemIdentification
          ItemName: ItemName
          DebitAccountType: null
          CreditAccountId: 12345
          LocationId: 12345
          ProjectId: 12345
          Quantity: 100
          CreatedDateTimeOffset: 2024-03-20T12:52:00.1234567Z
          CurrencyAmount: 69420
          Quantity2: 200
          AgricultureDetails:
            ProductCode: 1
            ProductDetailCode: 5
            ProductQualityCode: 5
            ProductRegistrationId: ProductRegistrationId
            ProductGtinNumber: ProductGtinNumber
            ProductRacialCode: ProductRacialCode
            ProductAnimalId: ProductAnimalId
            ProductHasForestCertificationCode: true
            IsMainProductLine: true
            ProductAdditionSubtractionCode: 6
            ProductGender: Male
            AgriculturalIndustryCode: 0
            ProductMachineType: ProductMachineType
            ProductEcological: true
            ProductDateOfBirth: 2000-01-23
            ProductChassisId: ProductChassisId
          DepartmentId: 12345
          Id: 12345
          CreditAccountAgricultureDepartment: None
          LastChangedDateTimeOffset: 2024-03-20T13:13:00.1234567Z
        - DebitAccountId: 12345
          Accrual:
            BalanceAccountNo: 2970
            IsActive: true
            BalanceAccountAgricultureDepartment: None
            FromDate: 2023-01-01
            ToDate: 2023-12-31
            BalanceAccountId: 123456
          Description: Hello accounting world!
          CreditVatId: 12345
          Dim3Id: 12345
          Dim2Id: 12345
          DebitVatId: 12345
          Dim1Id: 12345
          CreditAccountType: Customer
          ProductId: 12345
          CreditVatReturnSpecification: None
          ItemDescription: ItemDescription
          CreditContactId: 123456
          DebitContactId: 123456
          DebitAccountAgricultureDepartment: null
          DebitVatReturnSpecification: null
          SellersItemIdentification: SellersItemIdentification
          ItemName: ItemName
          DebitAccountType: null
          CreditAccountId: 12345
          LocationId: 12345
          ProjectId: 12345
          Quantity: 100
          CreatedDateTimeOffset: 2024-03-20T12:52:00.1234567Z
          CurrencyAmount: 69420
          Quantity2: 200
          AgricultureDetails:
            ProductCode: 1
            ProductDetailCode: 5
            ProductQualityCode: 5
            ProductRegistrationId: ProductRegistrationId
            ProductGtinNumber: ProductGtinNumber
            ProductRacialCode: ProductRacialCode
            ProductAnimalId: ProductAnimalId
            ProductHasForestCertificationCode: true
            IsMainProductLine: true
            ProductAdditionSubtractionCode: 6
            ProductGender: Male
            AgriculturalIndustryCode: 0
            ProductMachineType: ProductMachineType
            ProductEcological: true
            ProductDateOfBirth: 2000-01-23
            ProductChassisId: ProductChassisId
          DepartmentId: 12345
          Id: 12345
          CreditAccountAgricultureDepartment: None
          LastChangedDateTimeOffset: 2024-03-20T13:13:00.1234567Z
        CurrencyCode: EUR
        VoucherDate: 2024-03-20
        Payout: false
        SupplierBankAccountId: 12345
        ClientBankAccountId: 12345
        VoucherState: IsDraft
        Cid: "9235400011927001"
        PaymentDate: 2024-03-31
        ApprovalState: Approved
        LocationId: 12345
        ProjectId: 12345
        CreditNoteNo: CN-1234
        CurrencyExchangeRate: 10.78
        AppliesInvoiceId: 032fbead-2c9b-4521-9ff8-158a0baefdd8
        CreatedDateTimeOffset: 2024-03-20T13:57:00.1234567Z
        CurrencyAmount: 69420
        Pages:
        - VoucherId: d5956bfc-5648-4299-9186-7e0c224bdf1e
          Id: 11001
          CreatedDateTimeOffset: 2000-01-23T04:56:07.000+00:00
        - VoucherId: d5956bfc-5648-4299-9186-7e0c224bdf1e
          Id: 11001
          CreatedDateTimeOffset: 2000-01-23T04:56:07.000+00:00
        AppliesInvoiceNo: SI-1234
        CurrencyRegistryText: EUR
        PaymentOnHold: false
        DepartmentId: 12345
        Id: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        CurrencyRegistryCode: None
        OriginatedFromEhf: true
        SupplierAccountId: 12345
        LastChangedDateTimeOffset: 2024-03-20T14:08:00.1234567Z
      properties:
        AppliesInvoiceId:
          description: "Identifier of the supplier invoice being credited by the credit\
            \ note.\r\nThe supplierAccountId must be the same as the supplierAccountId\
            \ of the invoice that is being credited."
          example: 032fbead-2c9b-4521-9ff8-158a0baefdd8
          format: uuid
          nullable: true
          type: string
        AppliesInvoiceNo:
          description: "Reference to the invoice being credited by the credit note.\r\
            \nThe supplierAccountId must be the same as the supplierAccountId of the\
            \ invoice that is being credited."
          example: SI-1234
          nullable: true
          type: string
        ApprovalState:
          $ref: '#/components/schemas/ApprovalState'
        Cid:
          description: "The cid number (norwegian: KID), if applicable to the voucher."
          example: "9235400011927001"
          nullable: true
          type: string
        ClientBankAccountId:
          description: "The identifier of the client bank account used for payment/remittance.\r\
            \nRelevant if payout is true. If not set, the default client bank account\
            \ will be used for any remittance."
          example: 12345
          format: int64
          nullable: true
          type: integer
        CreatedDateTimeOffset:
          description: The timestamp of when the voucher object was created.
          example: 2024-03-20T13:57:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        CreditNoteNo:
          description: The credit note number of the supplier credit note.
          example: CN-1234
          maxLength: 40
          nullable: true
          type: string
        CurrencyAmount:
          description: "The total amount of the supplier voucher, in the currency\
            \ specified by the currency code of the voucher."
          example: 69420
          format: double
          type: number
        CurrencyCode:
          description: "The currency code of the voucher header.\r\nThe line amounts\
            \ will default be determined in the currency specified in the header.\r\
            \nFor some voucher types, different currency codes can be set on the line\
            \ level, thus overriding the currency of the head.\r\nCurrencies active\
            \ on the client can be queried using the AccountingSettings service. Currency\
            \ codes follow the ISO4217 standard."
          example: EUR
          maxLength: 3
          minLength: 0
          nullable: true
          type: string
        CurrencyExchangeRate:
          description: "The normalized currency exchange rate.\r\nAlways base 1.\r\
            \nRelevant to set if the voucher have a foreign currency with a specific\
            \ currency exchange rate.\r\nIf not set, the field will inherit the rate\
            \ in Go for the voucher date set.\r\nThe rates in Go are retrieved from\
            \ ECB via API."
          example: 10.78
          format: double
          nullable: true
          type: number
        CurrencyRegistryCode:
          $ref: '#/components/schemas/CurrencyRegistryCode'
        CurrencyRegistryText:
          description: The currency registry text of the supplier invoice.
          example: EUR
          nullable: true
          type: string
        DepartmentId:
          description: "The department Id of the voucher header.\r\nThe lines will\
            \ inherit the department from the voucher head if not specified on the\
            \ lines.\r\nDepartments can be queried and identified using the Department\
            \ service."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Description:
          description: The description field of the voucher header.
          example: My first voucher description
          nullable: true
          type: string
        Dim1Id:
          description: "The id of the dimension 1 associated with the voucher header.\r\
            \nThe lines will inherit the dim1 from the voucher head if not specified\
            \ on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim2Id:
          description: "The id of the dimension 2 associated with the voucher header.\r\
            \nThe lines will inherit the dim2 from the voucher head if not specified\
            \ on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim3Id:
          description: "The id of the dimension 3 associated with the voucher header.\r\
            \nThe lines will inherit the dim3 from the voucher head if not specified\
            \ on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Id:
          description: "A value that uniquely identifies this voucher.\r\nThe Id is\
            \ assigned by Go when the entry is created, and will persist when/if the\
            \ voucher is posted."
          example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
          format: uuid
          readOnly: true
          type: string
        LastChangedDateTimeOffset:
          description: The timestamp of when the voucher object was last changed.
          example: 2024-03-20T14:08:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        LocationId:
          description: "The id of the location dimension associated with the voucher\
            \ header.\r\nThe lines will inherit the location from the voucher head\
            \ if not specified on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        OriginatedFromEhf:
          description: "Property indicating whether the journal entry voucher was\
            \ received by EHF. If true, the journal entry voucher have an EHF XML\
            \ file."
          example: true
          nullable: true
          readOnly: true
          type: boolean
        Pages:
          description: A collection of voucher pages associated with this voucher.
          items:
            $ref: '#/components/schemas/VoucherPage'
          nullable: true
          readOnly: true
          type: array
        PaymentDate:
          description: "The suggested payment date if this voucher is to be subject\
            \ of remittance.\r\nRelevant if payout is set true.\r\nIf not set in POST\
            \ or PATCH operations, the field will default to the due date of supplier\
            \ invoices and the voucher date of supplier credit notes.\r\nTo remove\
            \ any value from PaymentDate in PATCH, both PaymentDate and DueDate must\
            \ be removed."
          example: 2024-03-31
          format: date
          nullable: true
          type: string
        PaymentOnHold:
          description: "Property indicating whether the voucher remittance should\
            \ be on hold.\r\nDefault false, and if true a remittance draft will be\
            \ created when the voucher is posted, but with no payment date suggested\
            \ - rather the state 'on hold'."
          example: false
          nullable: true
          type: boolean
        Payout:
          description: "Property indicating whether the voucher should be paid using\
            \ remittance.\r\nDefault true, and if true a remittance draft will be\
            \ created when the voucher is posted."
          example: false
          nullable: true
          type: boolean
        ProjectId:
          description: "The id of the project associated with the voucher header.\r\
            \nThe lines will inherit the project from the voucher head if not specified\
            \ on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        SupplierAccountId:
          description: The id of the supplier subledger account.
          example: 12345
          format: int64
          nullable: true
          type: integer
        SupplierBankAccountId:
          description: The identifier of the supplier bank account associated with
            the voucher.
          example: 12345
          format: int64
          nullable: true
          type: integer
        SupplierContactId:
          description: The contact ID of the supplier.
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        SupplierVoucherLines:
          description: The lines of the supplier credit note.
          items:
            $ref: '#/components/schemas/SupplierVoucherLineDto'
          nullable: true
          type: array
        VoucherDate:
          description: "The voucher date.\r\nThis represents the date of the voucher,\
            \ the document date of an invoice for instance,\r\nand may differ from\
            \ the transaction dates for lines the voucher, depending on the type of\
            \ voucher."
          example: 2024-03-20
          format: date
          nullable: true
          type: string
        VoucherState:
          $ref: '#/components/schemas/VoucherState'
      type: object
    ApprovalState:
      description: An enum that represents the approval state of a voucher.<p>Members:</p><ul><li><i>Approved</i>
        - The voucher has been approved.</li><li><i>Canceled</i> - The voucher approval
        has been canceled.</li><li><i>Rejected</i> - The voucher approval has been
        rejected.</li><li><i>Submitted</i> - The voucher has been submitted to an
        approval workflow.</li><li><i>UnderReview</i> - The voucher is currently under
        review.</li></ul>
      enum:
      - Approved
      - Canceled
      - Rejected
      - Submitted
      - UnderReview
      nullable: true
      type: string
    CurrencyRegistryCode:
      description: Currency registry code describing the intention of the payment.<p>Members:</p><ul><li><i>None</i>
        - None</li><li><i>PurchaseOfGoods</i> - Purchase of goods</li><li><i>LeaseOfServices</i>
        - Lease of services</li><li><i>OtherPurchaseOrSaleOfServices</i> - Other purchase
        or sale of services</li><li><i>Interests</i> - Interests</li><li><i>Dividends</i>
        - Dividends</li><li><i>OtherReturnOnCapital</i> - Other return on capital</li><li><i>PurchaseOrSaleOfProperty</i>
        - Purchase or sale of property</li><li><i>InvestmentInSharesAndMore</i> -
        Investment in shares and more</li><li><i>InvestmentInOtherCapital</i> - Investment
        in other capital</li><li><i>PortfolioInvestmentInSharesAndMutualFundsShares</i>
        - Portfolio investment in shares and mutual funds shares</li><li><i>PortfolioInvestmentInBondsAndNotes</i>
        - Portfolio investment in bonds and notes</li><li><i>PortfolioInvestmentInDerivatives</i>
        - Portfolio investment in derivatives</li><li><i>LifeInsurancePension</i>
        - Life insurance pension</li><li><i>OtherFinancialInvestments</i> - Other
        financial investments</li><li><i>Salaries</i> - Salaries</li><li><i>InheritanceGiftsAndMore</i>
        - Inheritance gifts and more</li></ul>
      enum:
      - None
      - PurchaseOfGoods
      - LeaseOfServices
      - OtherPurchaseOrSaleOfServices
      - Interests
      - Dividends
      - OtherReturnOnCapital
      - PurchaseOrSaleOfProperty
      - InvestmentInSharesAndMore
      - InvestmentInOtherCapital
      - PortfolioInvestmentInSharesAndMutualFundsShares
      - PortfolioInvestmentInBondsAndNotes
      - PortfolioInvestmentInDerivatives
      - LifeInsurancePension
      - OtherFinancialInvestments
      - Salaries
      - InheritanceGiftsAndMore
      nullable: true
      type: string
    SupplierVoucherLineDto:
      additionalProperties: false
      description: A supplier voucher line.
      example:
        DebitAccountId: 12345
        Accrual:
          BalanceAccountNo: 2970
          IsActive: true
          BalanceAccountAgricultureDepartment: None
          FromDate: 2023-01-01
          ToDate: 2023-12-31
          BalanceAccountId: 123456
        Description: Hello accounting world!
        CreditVatId: 12345
        Dim3Id: 12345
        Dim2Id: 12345
        DebitVatId: 12345
        Dim1Id: 12345
        CreditAccountType: Customer
        ProductId: 12345
        CreditVatReturnSpecification: None
        ItemDescription: ItemDescription
        CreditContactId: 123456
        DebitContactId: 123456
        DebitAccountAgricultureDepartment: null
        DebitVatReturnSpecification: null
        SellersItemIdentification: SellersItemIdentification
        ItemName: ItemName
        DebitAccountType: null
        CreditAccountId: 12345
        LocationId: 12345
        ProjectId: 12345
        Quantity: 100
        CreatedDateTimeOffset: 2024-03-20T12:52:00.1234567Z
        CurrencyAmount: 69420
        Quantity2: 200
        AgricultureDetails:
          ProductCode: 1
          ProductDetailCode: 5
          ProductQualityCode: 5
          ProductRegistrationId: ProductRegistrationId
          ProductGtinNumber: ProductGtinNumber
          ProductRacialCode: ProductRacialCode
          ProductAnimalId: ProductAnimalId
          ProductHasForestCertificationCode: true
          IsMainProductLine: true
          ProductAdditionSubtractionCode: 6
          ProductGender: Male
          AgriculturalIndustryCode: 0
          ProductMachineType: ProductMachineType
          ProductEcological: true
          ProductDateOfBirth: 2000-01-23
          ProductChassisId: ProductChassisId
        DepartmentId: 12345
        Id: 12345
        CreditAccountAgricultureDepartment: None
        LastChangedDateTimeOffset: 2024-03-20T13:13:00.1234567Z
      properties:
        Accrual:
          $ref: '#/components/schemas/AccrualBase'
        AgricultureDetails:
          $ref: '#/components/schemas/AgricultureDetails'
        CreatedDateTimeOffset:
          description: The timestamp of when the line was created.
          example: 2024-03-20T12:52:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        CreditAccountAgricultureDepartment:
          $ref: '#/components/schemas/AgricultureDepartment'
        CreditAccountId:
          description: The id of the general ledger account or the subledger account
            to post the credit amount.
          example: 12345
          format: int64
          nullable: true
          type: integer
        CreditAccountType:
          $ref: '#/components/schemas/AccountType'
        CreditContactId:
          description: "The contact ID of the credit account, relevant if CreditAccountId\
            \ is set to a sub-ledger account."
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        CreditVatId:
          description: The id of the vat code used for the credit entry.
          example: 12345
          format: int32
          nullable: true
          type: integer
        CreditVatReturnSpecification:
          $ref: '#/components/schemas/VatReturnSpecification'
        CurrencyAmount:
          description: "The amount on the line, in the currency specified by the currency\
            \ code of the voucher or the currency of the voucher line if available.\r\
            \nGross amounts should be provided, along with the relevant vat code."
          example: 69420
          format: double
          type: number
        DebitAccountAgricultureDepartment:
          $ref: '#/components/schemas/AgricultureDepartment'
        DebitAccountId:
          description: The id of the general ledger account or the subledger account
            to post the debit amount.
          example: 12345
          format: int64
          nullable: true
          type: integer
        DebitAccountType:
          $ref: '#/components/schemas/AccountType'
        DebitContactId:
          description: "The contact ID of the debit account, relevant if DebitAccountId\
            \ is set to a sub-ledger account."
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        DebitVatId:
          description: The id of the vat code used for the debit entry.
          example: 12345
          format: int32
          nullable: true
          type: integer
        DebitVatReturnSpecification:
          $ref: '#/components/schemas/VatReturnSpecification'
        DepartmentId:
          description: "The department Id. Will inherit department id from the voucher\
            \ head if not specifically set on the line.\r\nDepartment Id = -1 means\
            \ no department.\r\nDepartments can be queried and identified using the\
            \ Department service."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Description:
          description: The description of the voucher line.
          example: Hello accounting world!
          nullable: true
          type: string
        Dim1Id:
          description: "The id of the dimension 1 associated with the line.\r\nWill\
            \ inherit dim1Id from the voucher head if not specifically set on the\
            \ line.\r\nDim1Id = -1 means no dimension 1."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim2Id:
          description: "The id of the dimension 2 associated with the line.\r\nWill\
            \ inherit dim2Id from the voucher head if not specifically set on the\
            \ line.\r\nDim2Id = -1 means no dimension 2."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim3Id:
          description: "The id of the dimension 3 associated with the line.\r\nWill\
            \ inherit dim1Id from the voucher head if not specifically set on the\
            \ line.\r\nDim3Id = -1 means no dimension 3."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Id:
          description: "A value that uniquely identifies this journal entry voucher\
            \ line.\r\nThe Id is assigned by Go when the entry is created."
          example: 12345
          format: int64
          readOnly: true
          type: integer
        ItemDescription:
          description: "The suppliers item description, as stated in the ehf xml.\
            \ Only available if the voucher was received by ehf, and\r\nthe ehf coding\
            \ \"itemize by product\" is in use."
          maxLength: 200
          nullable: true
          readOnly: true
          type: string
        ItemName:
          description: "The suppliers item name, as stated in the ehf xml. Only available\
            \ if the voucher was received by ehf, and the\r\nehf coding \"itemize\
            \ by product\" is in use."
          maxLength: 200
          nullable: true
          readOnly: true
          type: string
        LastChangedDateTimeOffset:
          description: The timestamp of the last change of the line.
          example: 2024-03-20T13:13:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        LocationId:
          description: "The id of the location dimension associated with the line.\r\
            \nWill inherit locationId from the voucher head if not specifically set\
            \ on the line.\r\nLocationId = -1 means no location."
          example: 12345
          format: int64
          nullable: true
          type: integer
        ProductId:
          description: The product id associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        ProjectId:
          description: "The id of the project associated with the line.\r\nWill inherit\
            \ projectId from the voucher head if not specifically set on the line.\r\
            \nProjectId = -1 means no project."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Quantity:
          description: "The quantity dimension set on the line.\r\nUsually associated\
            \ with the product set on the line.\r\nIf the client is an agriculture\
            \ client, the quantity is associated with the unit1 of the general ledger\
            \ account."
          example: 100
          format: double
          nullable: true
          type: number
        Quantity2:
          description: "The quantity2 dimension set on the line.\r\nRelevant only\
            \ for agriculture clients, where the quantity2 is associated with the\
            \ unit2 of the general ledger account."
          example: 200
          format: double
          nullable: true
          type: number
        SellersItemIdentification:
          description: "The suppliers item identification, as stated in the ehf xml.\
            \ Only available if the voucher was received by ehf,\r\nand the ehf coding\
            \ \"itemize by product\" is in use."
          maxLength: 40
          nullable: true
          readOnly: true
          type: string
      type: object
    AccountType:
      description: Specifies the account type.<p>Members:</p><ul><li><i>Customer</i>
        - Customer sub-ledger account.</li><li><i>Employee</i> - Employee sub-ledger
        account.</li><li><i>General</i> - General ledger account.</li><li><i>Supplier</i>
        - Supplier sub-ledger account.</li></ul>
      enum:
      - Customer
      - Employee
      - General
      - Supplier
      nullable: true
      type: string
    VoucherState:
      description: "An enum that represents the state of a voucher.<p>Members:</p><ul><li><i>IsDraft</i>\
        \ - The voucher is in a draft state, and can be edited, deleted or posted.</li><li><i>IsDeleted</i>\
        \ - The voucher is deleted.</li><li><i>IsPosted</i> - The voucher is posted\
        \ and cannot be edited or deleted.</li><li><i>IsProcessed</i> - The voucher\
        \ is in the process of being processed.</li></ul>"
      enum:
      - IsDraft
      - IsDeleted
      - IsPosted
      - IsProcessed
      nullable: true
      type: string
    SupplierVoucherLinePostDto:
      additionalProperties: false
      description: Properties for creating a supplier voucher line.
      example:
        DebitAccountId: 12345
        Accrual:
          BalanceAccountNo: 2970
          IsActive: true
          BalanceAccountAgricultureDepartment: None
          FromDate: 2023-01-01
          ToDate: 2023-12-31
          BalanceAccountId: 123456
        Description: Hello accounting world!
        CreditVatId: 12345
        Dim3Id: 12345
        Dim2Id: 12345
        DebitVatId: 12345
        Dim1Id: 12345
        CreditAccountId: 12345
        LocationId: 12345
        ProjectId: 12345
        Quantity: 100
        ProductId: 12345
        CreditVatReturnSpecification: None
        CurrencyAmount: 69420
        DebitVatReturnSpecification: null
        Quantity2: 200
        AgricultureDetails:
          ProductCode: 1
          ProductDetailCode: 5
          ProductQualityCode: 5
          ProductRegistrationId: ProductRegistrationId
          ProductGtinNumber: ProductGtinNumber
          ProductRacialCode: ProductRacialCode
          ProductAnimalId: ProductAnimalId
          ProductHasForestCertificationCode: true
          IsMainProductLine: true
          ProductAdditionSubtractionCode: 6
          ProductGender: Male
          AgriculturalIndustryCode: 0
          ProductMachineType: ProductMachineType
          ProductEcological: true
          ProductDateOfBirth: 2000-01-23
          ProductChassisId: ProductChassisId
        DepartmentId: 12345
      properties:
        Accrual:
          $ref: '#/components/schemas/AccrualBase'
        AgricultureDetails:
          $ref: '#/components/schemas/AgricultureDetails'
        CreditAccountId:
          description: The id of the general ledger account or the subledger account
            to post the credit amount.
          example: 12345
          format: int64
          nullable: true
          type: integer
        CreditVatId:
          description: The id of the vat code used for the credit entry.
          example: 12345
          format: int32
          nullable: true
          type: integer
        CreditVatReturnSpecification:
          $ref: '#/components/schemas/VatReturnSpecification'
        CurrencyAmount:
          description: "The amount on the line, in the currency specified by the currency\
            \ code of the voucher or the currency of the voucher line if available.\r\
            \nGross amounts should be provided, along with the relevant vat code."
          example: 69420
          format: double
          type: number
        DebitAccountId:
          description: The id of the general ledger account or the subledger account
            to post the debit amount.
          example: 12345
          format: int64
          nullable: true
          type: integer
        DebitVatId:
          description: The id of the vat code used for the debit entry.
          example: 12345
          format: int32
          nullable: true
          type: integer
        DebitVatReturnSpecification:
          $ref: '#/components/schemas/VatReturnSpecification'
        DepartmentId:
          description: "The department Id. Will inherit department id from the voucher\
            \ head if not specifically set on the line.\r\nDepartment Id = -1 means\
            \ no department.\r\nDepartments can be queried and identified using the\
            \ Department service."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Description:
          description: The description of the voucher line.
          example: Hello accounting world!
          nullable: true
          type: string
        Dim1Id:
          description: "The id of the dimension 1 associated with the line.\r\nWill\
            \ inherit dim1Id from the voucher head if not specifically set on the\
            \ line.\r\nDim1Id = -1 means no dimension 1."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim2Id:
          description: "The id of the dimension 2 associated with the line.\r\nWill\
            \ inherit dim2Id from the voucher head if not specifically set on the\
            \ line.\r\nDim2Id = -1 means no dimension 2."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim3Id:
          description: "The id of the dimension 3 associated with the line.\r\nWill\
            \ inherit dim1Id from the voucher head if not specifically set on the\
            \ line.\r\nDim3Id = -1 means no dimension 3."
          example: 12345
          format: int64
          nullable: true
          type: integer
        LocationId:
          description: "The id of the location dimension associated with the line.\r\
            \nWill inherit locationId from the voucher head if not specifically set\
            \ on the line.\r\nLocationId = -1 means no location."
          example: 12345
          format: int64
          nullable: true
          type: integer
        ProductId:
          description: The product id associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        ProjectId:
          description: "The id of the project associated with the line.\r\nWill inherit\
            \ projectId from the voucher head if not specifically set on the line.\r\
            \nProjectId = -1 means no project."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Quantity:
          description: "The quantity dimension set on the line.\r\nUsually associated\
            \ with the product set on the line.\r\nIf the client is an agriculture\
            \ client, the quantity is associated with the unit1 of the general ledger\
            \ account."
          example: 100
          format: double
          nullable: true
          type: number
        Quantity2:
          description: "The quantity2 dimension set on the line.\r\nRelevant only\
            \ for agriculture clients, where the quantity2 is associated with the\
            \ unit2 of the general ledger account."
          example: 200
          format: double
          nullable: true
          type: number
      type: object
    EmploymentDto:
      additionalProperties: false
      description: "The Employment DTO contains properties relevant to an employment\
        \ relationship object in Go.\r\nWill only contain line count for salary-,\
        \ fixed salary-, leave-, layout- and percentage of full time employment lines."
      example:
        FullTimeHoursPerWeek: 37.5
        EndedAndReported: false
        LeaveCount: 3
        ProfessionTitle: "true"
        LayoffCount: 2
        ReportingId: POGO_24677
        TaxCountryCode: SE
        SalaryCount: 5
        EmploymentType: Ordinary
        FixedSalaryCount: 1
        EnterpriseId: 12345
        StartDate: 2021-01-01
        EmploymentSpecification: None
        EmploymentForm: Permanent
        ProfessionCode: "5163121"
        EmployeeId: 12345
        FtePercentageCount: 4
        EndDateReason: EmploymentRelationshipShouldNeverHaveBeenReported
        WorkingHoursArrangement: NonShift
        IsDefault: true
        EndDate: 2022-07-31
        CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        TaxRule: Ordinary
        Id: 12345
        LastChangedDateTimeOffset: 2021-09-30T09:33:00.1234567Z
      properties:
        CreatedDateTimeOffset:
          description: The timestamp when the employment entity was created.
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        EmployeeId:
          description: The identifier of the employee the employment belongs to.
          example: 12345
          format: int64
          readOnly: true
          type: integer
        EmploymentForm:
          $ref: '#/components/schemas/EmploymentFormType'
        EmploymentSpecification:
          $ref: '#/components/schemas/EmploymentSpecificationType'
        EmploymentType:
          $ref: '#/components/schemas/EmploymentType'
        EndDate:
          description: The end date of the employment.
          example: 2022-07-31
          format: date
          nullable: true
          type: string
        EndDateReason:
          $ref: '#/components/schemas/EndDateReasonType'
        EndedAndReported:
          description: "True when the employment is ended and the reporting (a-melding)\
            \ is done and finalized.\r\nIf true, the employment will not be included\
            \ in future reporting (a-melding)."
          example: false
          readOnly: true
          type: boolean
        EnterpriseId:
          description: The identifier of the enterprise for the employment.
          example: 12345
          format: int64
          nullable: true
          type: integer
        FixedSalaryCount:
          description: The number of fixed salary lines on this employment.
          example: 1
          format: int64
          readOnly: true
          type: integer
        FtePercentageCount:
          description: The number of full-time equivalent (FTE) percentage lines on
            this employment.
          example: 4
          format: int64
          readOnly: true
          type: integer
        FullTimeHoursPerWeek:
          description: The number of hours that would represent full time week of
            employment.
          example: 37.5
          format: double
          nullable: true
          type: number
        Id:
          description: The id of the employment (employment relationship).
          example: 12345
          format: int64
          readOnly: true
          type: integer
        IsDefault:
          description: Indicates if the employment is the default employment for the
            employee.
          example: true
          nullable: true
          type: boolean
        LastChangedDateTimeOffset:
          description: The timestamp when the employment entity was last changed.
          example: 2021-09-30T09:33:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        LayoffCount:
          description: The number of layoff lines on this employment.
          example: 2
          format: int64
          readOnly: true
          type: integer
        LeaveCount:
          description: The number of leave lines on this employment.
          example: 3
          format: int64
          readOnly: true
          type: integer
        ProfessionCode:
          description: "The profession code of the employment.\r\nThe code follow\
            \ SSB's STYRK-98 standard with 7 digits."
          example: "5163121"
          nullable: true
          type: string
        ProfessionTitle:
          description: "The profession title of the employment.\r\nIs directly connected\
            \ to the profession code."
          example: "true"
          nullable: true
          readOnly: true
          type: string
        ReportingId:
          description: "The id of the employment that will be reported.\r\nCan be\
            \ set to match the id of the previous payroll system.\r\nIf not set, Go\
            \ will assign an id."
          example: POGO_24677
          nullable: true
          type: string
        SalaryCount:
          description: The number of salary lines on this employment.
          example: 5
          format: int64
          readOnly: true
          type: integer
        StartDate:
          description: The start date of the employment.
          example: 2021-01-01
          format: date
          nullable: true
          type: string
        TaxCountryCode:
          description: "The ISO 3166-1 alfa-2 country code (two characters).\r\nCan\
            \ only be set to Finland (FI) or Sweden (SE) if employment specification\
            \ is set to cross border commuter."
          example: SE
          nullable: true
          type: string
        TaxRule:
          $ref: '#/components/schemas/TaxRuleType'
        WorkingHoursArrangement:
          $ref: '#/components/schemas/WorkingHoursArrangementType'
      type: object
    EmploymentSpecificationType:
      description: |-
        The specification type of the employment.<p>Members:</p><ul><li><i>None</i> - No specification.</li><li><i>CrossBorderCommuter</i> - Cross border commuter by the definition of the nordic tax agreement (NSA).
                        If set, only Finland (FI) or Sweden (SE) are applicable choices for the field TaxCountry.</li></ul>
      enum:
      - None
      - CrossBorderCommuter
      nullable: true
      type: string
    EmploymentType:
      description: |-
        The type of employment.<p>Members:</p><ul><li><i>Ordinary</i> - Ordinary employment, i.e. employees working in the service of others for pay or other remuneration.</li><li><i>Maritime</i> - Maritime employment, i.e. employees at sea, on vessels or mobile installations.</li><li><i>FreelancersEtc</i> - Freelancers, board members, elected officials, trustees, foster parents, support contacts, respite care workers and carers.</li><li><i>PensionEtc</i> - Pensions and other types of payment, without employment,
                        coverage from the wage guarantee scheme and deceased debtors,
                        persons participating in work training measures for the occupationally disabled when the pay is defined as the receipt of incentive payments (e.g. permanently adapted work),
                        etc.</li></ul>
      enum:
      - Ordinary
      - Maritime
      - FreelancersEtc
      - PensionEtc
      nullable: true
      type: string
    EndDateReasonType:
      description: "The reason for the end of the employment at the end date. Must\
        \ be provided if the end date is set.\r\nThis should be 1 to 1 with the EndDateReason\
        \ enum in Go. (Server\\Common\\Payrolls\\Enums\\EndDateReasons.cs)<p>Members:</p><ul><li><i>EmploymentRelationshipShouldNeverHaveBeenReported</i>\
        \ - The employment should never have been reported.</li><li><i>EmployerHasDismissedTheEmployee</i>\
        \ - The employer has terminated the employment relationship.</li><li><i>EmployeeHasResigned</i>\
        \ - The employee has resigned from his/her position.</li><li><i>ChangeOfPayrollSystemOrAccountant</i>\
        \ - Changed payroll system or accountant.</li><li><i>ChangeOfOrganizationStructureOrChangedJobInternally</i>\
        \ - Changes in organisational structure or internal job swap.</li><li><i>ContractCommitmentOrTemporaryEmploymentExpired</i>\
        \ - Contract, temporary appointment or temporary position has been terminated.</li></ul>"
      enum:
      - EmploymentRelationshipShouldNeverHaveBeenReported
      - EmployerHasDismissedTheEmployee
      - EmployeeHasResigned
      - ChangeOfPayrollSystemOrAccountant
      - ChangeOfOrganizationStructureOrChangedJobInternally
      - ContractCommitmentOrTemporaryEmploymentExpired
      nullable: true
      type: string
    WorkingHoursArrangementType:
      description: The arrangement of working hours.<p>Members:</p><ul><li><i>NonShift</i>
        - Non-shift.</li><li><i>SemiContinuousShift</i> - Semi-continuous shift work
        and rota work - 35.5 hours per week.</li><li><i>ContinuousShift</i> - Continuous
        shift work and other schemes at 33.6 hours per week.</li><li><i>ShiftWork</i>
        - Shift work - 36.5 hours per week.</li><li><i>Offshore</i> - Offshore work
        - 33.6 hours per week.</li><li><i>OtherShifts</i> - Other shift arrangements.</li></ul>
      enum:
      - NonShift
      - SemiContinuousShift
      - ContinuousShift
      - ShiftWork
      - Offshore
      - OtherShifts
      nullable: true
      type: string
    ManualJournalEntryVoucherPostDto:
      additionalProperties: false
      description: Base dto for posting manual voucher types
      example:
        CurrencyCode: EUR
        Comment: My first manual voucher comment.
        Description: My first voucher description
        VoucherDate: 2024-03-20
        Dim3Id: 12345
        Dim2Id: 12345
        Dim1Id: 12345
        LocationId: 12345
        ProjectId: 12345
        DepartmentId: 12345
        ManualVoucherLines:
        - DebitAccountId: 12345
          Accrual:
            BalanceAccountNo: 2970
            IsActive: true
            BalanceAccountAgricultureDepartment: None
            FromDate: 2023-01-01
            ToDate: 2023-12-31
            BalanceAccountId: 123456
          Description: Hello accounting world!
          CreditVatId: 12345
          Dim3Id: 12345
          Dim2Id: 12345
          DebitVatId: 12345
          Dim1Id: 12345
          CreditAccountId: 12345
          LocationId: 12345
          ProjectId: 12345
          Quantity: 100
          CurrencyExchangeRate: 10.78
          ProductId: 12345
          CreditVatReturnSpecification: None
          CurrencyAmount: 69420
          CurrencyCode: EUR
          DebitVatReturnSpecification: null
          Quantity2: 200
          AgricultureDetails:
            ProductCode: 1
            ProductDetailCode: 5
            ProductQualityCode: 5
            ProductRegistrationId: ProductRegistrationId
            ProductGtinNumber: ProductGtinNumber
            ProductRacialCode: ProductRacialCode
            ProductAnimalId: ProductAnimalId
            ProductHasForestCertificationCode: true
            IsMainProductLine: true
            ProductAdditionSubtractionCode: 6
            ProductGender: Male
            AgriculturalIndustryCode: 0
            ProductMachineType: ProductMachineType
            ProductEcological: true
            ProductDateOfBirth: 2000-01-23
            ProductChassisId: ProductChassisId
          PostingDate: 2024-09-18
          DepartmentId: 12345
        - DebitAccountId: 12345
          Accrual:
            BalanceAccountNo: 2970
            IsActive: true
            BalanceAccountAgricultureDepartment: None
            FromDate: 2023-01-01
            ToDate: 2023-12-31
            BalanceAccountId: 123456
          Description: Hello accounting world!
          CreditVatId: 12345
          Dim3Id: 12345
          Dim2Id: 12345
          DebitVatId: 12345
          Dim1Id: 12345
          CreditAccountId: 12345
          LocationId: 12345
          ProjectId: 12345
          Quantity: 100
          CurrencyExchangeRate: 10.78
          ProductId: 12345
          CreditVatReturnSpecification: None
          CurrencyAmount: 69420
          CurrencyCode: EUR
          DebitVatReturnSpecification: null
          Quantity2: 200
          AgricultureDetails:
            ProductCode: 1
            ProductDetailCode: 5
            ProductQualityCode: 5
            ProductRegistrationId: ProductRegistrationId
            ProductGtinNumber: ProductGtinNumber
            ProductRacialCode: ProductRacialCode
            ProductAnimalId: ProductAnimalId
            ProductHasForestCertificationCode: true
            IsMainProductLine: true
            ProductAdditionSubtractionCode: 6
            ProductGender: Male
            AgriculturalIndustryCode: 0
            ProductMachineType: ProductMachineType
            ProductEcological: true
            ProductDateOfBirth: 2000-01-23
            ProductChassisId: ProductChassisId
          PostingDate: 2024-09-18
          DepartmentId: 12345
      properties:
        Comment:
          description: "Optional comment that will be shown in the journal entry history\
            \ in Go.\r\nOnly new vouchers will get the comment as part of the initial\
            \ history.\r\nIt is thus not possible to change the comment later, and\
            \ it will not be returned in API-calls.\r\nThe comment text should be\
            \ human-readable. If necessary, use newline characters (\\n) to format\
            \ the text for better readability"
          example: My first manual voucher comment.
          maxLength: 1000
          nullable: true
          type: string
        CurrencyCode:
          description: "The currency code of the voucher header.\r\nThe line amounts\
            \ will default be determined in the currency specified in the header.\r\
            \nFor some voucher types, different currency codes can be set on the line\
            \ level, thus overriding the currency of the head.\r\nCurrencies active\
            \ on the client can be queried using the AccountingSettings service. Currency\
            \ codes follow the ISO4217 standard."
          example: EUR
          maxLength: 3
          minLength: 0
          nullable: true
          type: string
        DepartmentId:
          description: "The department Id of the voucher header.\r\nThe lines will\
            \ inherit the department from the voucher head if not specified on the\
            \ lines.\r\nDepartments can be queried and identified using the Department\
            \ service."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Description:
          description: The description field of the voucher header.
          example: My first voucher description
          nullable: true
          type: string
        Dim1Id:
          description: "The id of the dimension 1 associated with the voucher header.\r\
            \nThe lines will inherit the dim1 from the voucher head if not specified\
            \ on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim2Id:
          description: "The id of the dimension 2 associated with the voucher header.\r\
            \nThe lines will inherit the dim2 from the voucher head if not specified\
            \ on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim3Id:
          description: "The id of the dimension 3 associated with the voucher header.\r\
            \nThe lines will inherit the dim3 from the voucher head if not specified\
            \ on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        LocationId:
          description: "The id of the location dimension associated with the voucher\
            \ header.\r\nThe lines will inherit the location from the voucher head\
            \ if not specified on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        ManualVoucherLines:
          description: The lines of the manual voucher
          items:
            $ref: '#/components/schemas/ManualJournalEntryVoucherLinePostDto'
          nullable: true
          type: array
        ProjectId:
          description: "The id of the project associated with the voucher header.\r\
            \nThe lines will inherit the project from the voucher head if not specified\
            \ on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        VoucherDate:
          description: "The voucher date.\r\nThis represents the date of the voucher,\
            \ the document date of an invoice for instance,\r\nand may differ from\
            \ the transaction dates for lines the voucher, depending on the type of\
            \ voucher."
          example: 2024-03-20
          format: date
          nullable: true
          type: string
      required:
      - CurrencyCode
      - VoucherDate
      type: object
    ManualJournalEntryVoucherLinePostDto:
      additionalProperties: false
      description: Properties for creating a manual voucher line.
      example:
        DebitAccountId: 12345
        Accrual:
          BalanceAccountNo: 2970
          IsActive: true
          BalanceAccountAgricultureDepartment: None
          FromDate: 2023-01-01
          ToDate: 2023-12-31
          BalanceAccountId: 123456
        Description: Hello accounting world!
        CreditVatId: 12345
        Dim3Id: 12345
        Dim2Id: 12345
        DebitVatId: 12345
        Dim1Id: 12345
        CreditAccountId: 12345
        LocationId: 12345
        ProjectId: 12345
        Quantity: 100
        CurrencyExchangeRate: 10.78
        ProductId: 12345
        CreditVatReturnSpecification: None
        CurrencyAmount: 69420
        CurrencyCode: EUR
        DebitVatReturnSpecification: null
        Quantity2: 200
        AgricultureDetails:
          ProductCode: 1
          ProductDetailCode: 5
          ProductQualityCode: 5
          ProductRegistrationId: ProductRegistrationId
          ProductGtinNumber: ProductGtinNumber
          ProductRacialCode: ProductRacialCode
          ProductAnimalId: ProductAnimalId
          ProductHasForestCertificationCode: true
          IsMainProductLine: true
          ProductAdditionSubtractionCode: 6
          ProductGender: Male
          AgriculturalIndustryCode: 0
          ProductMachineType: ProductMachineType
          ProductEcological: true
          ProductDateOfBirth: 2000-01-23
          ProductChassisId: ProductChassisId
        PostingDate: 2024-09-18
        DepartmentId: 12345
      properties:
        Accrual:
          $ref: '#/components/schemas/AccrualBase'
        AgricultureDetails:
          $ref: '#/components/schemas/AgricultureDetails'
        CreditAccountId:
          description: The id of the general ledger account or the subledger account
            to post the credit amount.
          example: 12345
          format: int64
          nullable: true
          type: integer
        CreditVatId:
          description: The id of the vat code used for the credit entry.
          example: 12345
          format: int32
          nullable: true
          type: integer
        CreditVatReturnSpecification:
          $ref: '#/components/schemas/VatReturnSpecification'
        CurrencyAmount:
          description: "The amount on the line, in the currency specified by the currency\
            \ code of the voucher or the currency of the voucher line if available.\r\
            \nGross amounts should be provided, along with the relevant vat code."
          example: 69420
          format: double
          type: number
        CurrencyCode:
          description: "The currency code of the voucher line. Will inherit the currency\
            \ code of the voucher head if not set. The line amounts be determined\
            \ in the currency specified on the line.\r\nCurrencies active on the client\
            \ can be queried using the AccountingSettings service. Currency codes\
            \ follow the ISO4217 standard."
          example: EUR
          nullable: true
          type: string
        CurrencyExchangeRate:
          description: "The normalized currency exchange rate. Always base 1. Relevant\
            \ to set if the voucher line have a foreign currency with a specific currency\
            \ exchange rate.\r\nIf not set, the field will inherit the rate in Go\
            \ for the posting date set.\r\nThe rates in Go are retrieved from ECB."
          example: 10.78
          format: double
          nullable: true
          type: number
        DebitAccountId:
          description: The id of the general ledger account or the subledger account
            to post the debit amount.
          example: 12345
          format: int64
          nullable: true
          type: integer
        DebitVatId:
          description: The id of the vat code used for the debit entry.
          example: 12345
          format: int32
          nullable: true
          type: integer
        DebitVatReturnSpecification:
          $ref: '#/components/schemas/VatReturnSpecification'
        DepartmentId:
          description: "The department Id. Will inherit department id from the voucher\
            \ head if not specifically set on the line.\r\nDepartment Id = -1 means\
            \ no department.\r\nDepartments can be queried and identified using the\
            \ Department service."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Description:
          description: The description of the voucher line.
          example: Hello accounting world!
          nullable: true
          type: string
        Dim1Id:
          description: "The id of the dimension 1 associated with the line.\r\nWill\
            \ inherit dim1Id from the voucher head if not specifically set on the\
            \ line.\r\nDim1Id = -1 means no dimension 1."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim2Id:
          description: "The id of the dimension 2 associated with the line.\r\nWill\
            \ inherit dim2Id from the voucher head if not specifically set on the\
            \ line.\r\nDim2Id = -1 means no dimension 2."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim3Id:
          description: "The id of the dimension 3 associated with the line.\r\nWill\
            \ inherit dim1Id from the voucher head if not specifically set on the\
            \ line.\r\nDim3Id = -1 means no dimension 3."
          example: 12345
          format: int64
          nullable: true
          type: integer
        LocationId:
          description: "The id of the location dimension associated with the line.\r\
            \nWill inherit locationId from the voucher head if not specifically set\
            \ on the line.\r\nLocationId = -1 means no location."
          example: 12345
          format: int64
          nullable: true
          type: integer
        PostingDate:
          description: "The posting date and transaction date of the line. This is\
            \ the date of effect in the accounting system for the Amount when the\
            \ voucher is posted.\r\nIf not set, the posting date will inherit the\
            \ voucher date set in the header.\r\nThe posting date is also the currency\
            \ conversion date used by Go if the currency rate is not set explicit."
          example: 2024-09-18
          format: date
          nullable: true
          type: string
        ProductId:
          description: The product id associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        ProjectId:
          description: "The id of the project associated with the line.\r\nWill inherit\
            \ projectId from the voucher head if not specifically set on the line.\r\
            \nProjectId = -1 means no project."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Quantity:
          description: "The quantity dimension set on the line.\r\nUsually associated\
            \ with the product set on the line.\r\nIf the client is an agriculture\
            \ client, the quantity is associated with the unit1 of the general ledger\
            \ account."
          example: 100
          format: double
          nullable: true
          type: number
        Quantity2:
          description: "The quantity2 dimension set on the line.\r\nRelevant only\
            \ for agriculture clients, where the quantity2 is associated with the\
            \ unit2 of the general ledger account."
          example: 200
          format: double
          nullable: true
          type: number
      type: object
    SubLedgerNumberSeriesDto:
      additionalProperties: false
      description: The subledger number series DTO contains all properties relevant
        to subledger number series.
      example:
        IsDefault: false
        GeneralLedgerAccountId: 0
        ToInclusive: 19999
        GeneralLedgerAccountNo: 1500
        Id: 09ab6bcf-4219-4149-8283-6b6a7342bfd9
        SubLedgerNumberSeriesType: Customer
        IsClientTrust: true
        FromInclusive: 10000
        Name: Kunder
      properties:
        FromInclusive:
          description: The minimum number the subledger accounts in this series can
            have
          example: 10000
          format: int64
          readOnly: true
          type: integer
        GeneralLedgerAccountId:
          description: The underlying general ledger account ID of the subledger series.
          format: int64
          readOnly: true
          type: integer
        GeneralLedgerAccountNo:
          description: "The underlying general ledger account code of this subledger\
            \ series.\r\nSubledger transactions in Go will be posted using the subledger\
            \ number, but the overall accounting effect will be on this underlying\
            \ account.\r\nMore information of accounts can be retrieved using the\
            \ GeneralLedgerAccount service."
          example: 1500
          format: int64
          readOnly: true
          type: integer
        Id:
          description: The unique identifier of the subledger number series.
          example: 09ab6bcf-4219-4149-8283-6b6a7342bfd9
          format: uuid
          readOnly: true
          type: string
        IsClientTrust:
          description: "The value indicating whether this number series is used by\
            \ accounts that contain client trust funds.\r\nClient trust accounts are\
            \ accounts where realtors or lawyers, for instance, handles their clients'\
            \ money.\r\nCan be true if the client have the FinancialSettings.UseTrustAccountManagement\
            \ set true."
          example: true
          readOnly: true
          type: boolean
        IsDefault:
          description: The value indicating whether this instance is the default number
            series for that subledger numberSeriesType.
          example: false
          readOnly: true
          type: boolean
        Name:
          description: The name of the subledger number series.
          example: Kunder
          nullable: true
          readOnly: true
          type: string
        SubLedgerNumberSeriesType:
          $ref: '#/components/schemas/SubLedgerNumberSeriesType'
        ToInclusive:
          description: The maximum number the subledger accounts in this series can
            have.
          example: 19999
          format: int64
          readOnly: true
          type: integer
      type: object
    SubLedgerNumberSeriesType:
      description: Enum SubLedgerNumberSeriesType indicating what kind of sub ledger
        accounts are represented in the number series.<p>Members:</p><ul><li><i>Customer</i>
        - The sub ledger number series contains Customer</li><li><i>Supplier</i> -
        The sub ledger number series contains Supplier</li><li><i>Employee</i> - The
        sub ledger number series contains Employee</li></ul>
      enum:
      - Customer
      - Supplier
      - Employee
      nullable: true
      type: string
    UserAccessRoleDto:
      additionalProperties: false
      description: The available properties returned when retrieving access roles
        for a user.
      example:
        ClientName: Poweroffice AS
        AccessRoleId: 09ab6bcf-4219-4149-8283-6b6a7342bfd9
        ClientId: 09ab6bcf-4219-4149-8283-6b6a7342bfd9
      properties:
        AccessRoleId:
          description: The identifier of the access role.
          example: 09ab6bcf-4219-4149-8283-6b6a7342bfd9
          format: uuid
          nullable: true
          readOnly: true
          type: string
        ClientId:
          description: The identifier of the client.
          example: 09ab6bcf-4219-4149-8283-6b6a7342bfd9
          format: uuid
          readOnly: true
          type: string
        ClientName:
          description: The name of the client.
          example: Poweroffice AS
          nullable: true
          readOnly: true
          type: string
      type: object
    ProductGroupDto:
      additionalProperties: false
      description: DTO for ProductGroup read operations.
      example:
        UnitOfMeasureCode: BX
        Description: Bottomless boxes of mysteries
        OptionalSalesAccountId: 123456
        StandardSalesAccountId: 123456
        ProductType: Product
        OptionalSalesAccount: 3100
        Code: BA12
        CreatedDateTimeOffset: 2023-09-07T14:13:00.1234567Z
        StandardSalesAccount: 3000
        Name: Big blue boxes
        IsArchived: true
        UnitCost: 69.42
        UnitPrice: 100.12
        StandardSalesAccountAgricultureDepartment: null
        OptionalSalesAccountAgricultureDepartment: None
        Id: 1234
        CreatedFromImportJournalId: f575b4b0-55be-4b56-b01f-44b204df82c5
        LastChangedDateTimeOffset: 2023-09-07T14:13:00.1234567Z
      properties:
        Code:
          description: The code of the product group.
          example: BA12
          maxLength: 200
          nullable: true
          type: string
        CreatedDateTimeOffset:
          description: The timestamp the product group entity was created.
          example: 2023-09-07T14:13:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        CreatedFromImportJournalId:
          description: "The created from import journal identifier (guid).\r\nIf the\
            \ product group was created from an import, this property will contain\
            \ the Id of the Import that created this entity."
          example: f575b4b0-55be-4b56-b01f-44b204df82c5
          format: uuid
          nullable: true
          readOnly: true
          type: string
        Description:
          description: The description of the product group.
          example: Bottomless boxes of mysteries
          nullable: true
          type: string
        Id:
          description: The ID of the product group.
          example: 1234
          format: int64
          readOnly: true
          type: integer
        IsArchived:
          description: "Value indicating whether the product group is archived (set\
            \ inactive).\r\nDefault is false.\r\nArchived product groups will be unavailable\
            \ for usage in the GUI."
          example: true
          nullable: true
          type: boolean
        LastChangedDateTimeOffset:
          description: The timestamp of the last change of the product group.
          example: 2023-09-07T14:13:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        Name:
          description: The name of the product group.
          example: Big blue boxes
          maxLength: 400
          nullable: true
          type: string
        OptionalSalesAccount:
          description: "The code of the optional sales account of the product group.\r\
            \nThe optional sales account is the account the sale will be posted to,\
            \ if the product is included on a sales order line that is invoiced, and\
            \ that sales order line is set to trigger the use of the optional sales\
            \ account.\r\nIf null, the product group will inherit the optional sales\
            \ account from the the general sales settings on the client."
          example: 3100
          format: int64
          nullable: true
          readOnly: true
          type: integer
        OptionalSalesAccountAgricultureDepartment:
          $ref: '#/components/schemas/AgricultureDepartment'
        OptionalSalesAccountId:
          description: "The id of the optional sales account of the product group.\r\
            \nProducts assigned to this product group will inherit the optional sales\
            \ account from the group, if not set/overridden on the product object.\r\
            \nThe optional sales account is the account the sale will be posted to,\
            \ if the product is included on a sales order line that is invoiced, and\
            \ that sales order line is set to trigger the use of the optional sales\
            \ account.\r\nIf null, the product group will inherit the optional sales\
            \ account from the the general sales settings on the client."
          example: 123456
          format: int64
          nullable: true
          type: integer
        ProductType:
          $ref: '#/components/schemas/ProductType'
        StandardSalesAccount:
          description: "The code of the standard sales account of the product group.\r\
            \nThe standard sales account is the default account the sale will be posted\
            \ to if the product is included on a sales order line that is invoiced.\r\
            \nIf null, the product group will inherit the standard sales account from\
            \ the general sales settings on the client."
          example: 3000
          format: int64
          nullable: true
          readOnly: true
          type: integer
        StandardSalesAccountAgricultureDepartment:
          $ref: '#/components/schemas/AgricultureDepartment'
        StandardSalesAccountId:
          description: "The id of the standard sales account of the product group.\r\
            \nProducts assigned to this product group will inherit the standard sales\
            \ account from the group, if not set/overridden on the product object.\r\
            \nThe standard sales account is the default account the sale will be posted\
            \ to if the product is included on a sales order line that is invoiced.\r\
            \nIf null, the product group will inherit the standard sales account from\
            \ the general sales settings on the client."
          example: 123456
          format: int64
          nullable: true
          type: integer
        UnitCost:
          description: "The cost per unit of the product group.\r\nProducts assigned\
            \ to this group will inherit the unitCost from the group, if not set/overridden\
            \ on the product object."
          example: 69.42
          format: double
          nullable: true
          type: number
        UnitOfMeasureCode:
          $ref: '#/components/schemas/UnitOfMeasureType'
        UnitPrice:
          description: "The sales price per unit of the product group.\r\nProducts\
            \ assigned to this group will inherit the unitPrice from the group, if\
            \ not set/overridden on the product object."
          example: 100.12
          format: double
          nullable: true
          type: number
      type: object
    ProductGroupPostDto:
      additionalProperties: false
      description: DTO for creating a ProductGroup.
      example:
        UnitOfMeasureCode: BX
        Description: Bottomless boxes of mysteries
        OptionalSalesAccountId: 123456
        StandardSalesAccountId: 123456
        ProductType: Product
        OptionalSalesAccount: 3100
        Code: BA12
        StandardSalesAccount: 3000
        Name: Big blue boxes
        IsArchived: true
        UnitCost: 69.42
        UnitPrice: 100.12
        StandardSalesAccountAgricultureDepartment: null
        OptionalSalesAccountAgricultureDepartment: None
      properties:
        Code:
          description: The code of the product group.
          example: BA12
          maxLength: 200
          nullable: true
          type: string
        Description:
          description: The description of the product group.
          example: Bottomless boxes of mysteries
          nullable: true
          type: string
        IsArchived:
          description: "Value indicating whether the product group is archived (set\
            \ inactive).\r\nDefault is false.\r\nArchived product groups will be unavailable\
            \ for usage in the GUI."
          example: true
          nullable: true
          type: boolean
        Name:
          description: The name of the product group.
          example: Big blue boxes
          maxLength: 400
          nullable: true
          type: string
        OptionalSalesAccount:
          description: "The code of the optional sales account of the product group.\r\
            \nProducts assigned to this product group will inherit the optional sales\
            \ account from the group, if not set/overridden on the product object.\r\
            \nThe optional sales account is the account the sale will be posted to,\
            \ if the product is included on a sales order line that is invoiced, and\
            \ that sales order line is set to trigger the use of the optional sales\
            \ account.\r\nIf null, the product group will inherit the optional sales\
            \ account from the the general sales settings on the client.\r\nThe concept\
            \ of sales accounts is also explained in the common workflow articles.\r\
            \nNote that if OptionalSalesAccountId is set as well in the request, OptionalSalesAccountId\
            \ takes precedence and OptionalSalesAccount is ignored."
          example: 3100
          format: int64
          nullable: true
          type: integer
        OptionalSalesAccountAgricultureDepartment:
          $ref: '#/components/schemas/AgricultureDepartment'
        OptionalSalesAccountId:
          description: "The id of the optional sales account of the product group.\r\
            \nProducts assigned to this product group will inherit the optional sales\
            \ account from the group, if not set/overridden on the product object.\r\
            \nThe optional sales account is the account the sale will be posted to,\
            \ if the product is included on a sales order line that is invoiced, and\
            \ that sales order line is set to trigger the use of the optional sales\
            \ account.\r\nIf null, the product group will inherit the optional sales\
            \ account from the the general sales settings on the client."
          example: 123456
          format: int64
          nullable: true
          type: integer
        ProductType:
          $ref: '#/components/schemas/ProductType'
        StandardSalesAccount:
          description: "The code of the standard sales account of the product group.\r\
            \nProducts assigned to this product group will inherit the standard sales\
            \ account from the group, if not set/overridden on the product object.\r\
            \nThe standard sales account is the default account the sale will be posted\
            \ to if the product is included on a sales order line that is invoiced.\r\
            \nIf null, the product group will inherit the standard sales account from\
            \ the general sales settings on the client.\r\nThe concept of sales accounts\
            \ is also explained in the common workflow articles.\r\nNote that if StandardSalesAccountId\
            \ is set as well in the request, StandardSalesAccountId takes precedence\
            \ and StandardSalesAccount is ignored."
          example: 3000
          format: int64
          nullable: true
          type: integer
        StandardSalesAccountAgricultureDepartment:
          $ref: '#/components/schemas/AgricultureDepartment'
        StandardSalesAccountId:
          description: "The id of the standard sales account of the product group.\r\
            \nProducts assigned to this product group will inherit the standard sales\
            \ account from the group, if not set/overridden on the product object.\r\
            \nThe standard sales account is the default account the sale will be posted\
            \ to if the product is included on a sales order line that is invoiced.\r\
            \nIf null, the product group will inherit the standard sales account from\
            \ the general sales settings on the client."
          example: 123456
          format: int64
          nullable: true
          type: integer
        UnitCost:
          description: "The cost per unit of the product group.\r\nProducts assigned\
            \ to this group will inherit the unitCost from the group, if not set/overridden\
            \ on the product object."
          example: 69.42
          format: double
          nullable: true
          type: number
        UnitOfMeasureCode:
          $ref: '#/components/schemas/UnitOfMeasureType'
        UnitPrice:
          description: "The sales price per unit of the product group.\r\nProducts\
            \ assigned to this group will inherit the unitPrice from the group, if\
            \ not set/overridden on the product object."
          example: 100.12
          format: double
          nullable: true
          type: number
      type: object
    EnterpriseDto:
      additionalProperties: false
      description: Enterprises available on the client.
      example:
        IsDefault: true
        EnterpriseNo: "973021028"
        MailAddress:
          AddressLine2: "Att: Ola Nordmann"
          AddressLine1: Postboks 404
          ZipCode: "0161"
          City: Oslo
          CountryCode: "NO"
        Municipality: "1804"
        EmployerContributionZone: Zone1
        Id: 12345
        CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        EmployerContributionRule: GeneralIndustries
        LastChangedDateTimeOffset: 2000-01-23T04:56:07.000+00:00
        Name: PowerOffice Software
      properties:
        CreatedDateTimeOffset:
          description: Gets the timestamp the enterprise entity was created.
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        EmployerContributionRule:
          $ref: '#/components/schemas/EmployerContributionRule'
        EmployerContributionZone:
          $ref: '#/components/schemas/EmployerContributionZone'
        EnterpriseNo:
          description: The enterprise number.
          example: "973021028"
          nullable: true
          readOnly: true
          type: string
        Id:
          description: The identifier of the enterprise.
          example: 12345
          format: int64
          readOnly: true
          type: integer
        IsDefault:
          description: "Indicates if this is the default enterprise.\r\nNew employments\
            \ will be assigned to the default enterprise if not set when employments\
            \ are created"
          example: true
          readOnly: true
          type: boolean
        LastChangedDateTimeOffset:
          description: The timestamp the enterprise was last changed.
          format: date-time
          readOnly: true
          type: string
        MailAddress:
          $ref: '#/components/schemas/AddressDto'
        Municipality:
          description: The number of the municipality this enterprise belong to.
          example: "1804"
          nullable: true
          readOnly: true
          type: string
        Name:
          description: The name of the enterprise.
          example: PowerOffice Software
          nullable: true
          readOnly: true
          type: string
      type: object
    EmployerContributionRule:
      description: "The type of employer contribution rules an enterprise may be subject\
        \ of.<p>Members:</p><ul><li><i>GeneralIndustries</i> - General industry (norwegian:\
        \ Generelle næringer)</li><li><i>HealthEnterprisesAndPartsOfPublicSector</i>\
        \ - Health enterprises and parts of the public sector (norwegian: Helseforetak\
        \ og deler av statsforvaltningen)</li><li><i>AgricultureForestryFisheryEtc</i>\
        \ - Agriculture and Forestry, Fisheries etc. (norwegian: Jord- og skogbruk,\
        \ fiskeri etc.)</li><li><i>Svalbard</i> - Svalbard</li><li><i>SectorExemptActivity</i>\
        \ - Sector-exempt activity (norwegian: Sektorunntatt aktivitet)</li><li><i>RoadFreightTransport</i>\
        \ - Road freight transport (norwegian: Godstransport på vei)</li><li><i>FinancialDifficulties</i>\
        \ - Financial difficulties (norwegian: Økonomiske vanskeligheter)</li><li><i>AdditionalEmployersContribution</i>\
        \ - Additional employers contribution (norwegian: Ekstra arbeidsgiveravgift)</li></ul>"
      enum:
      - GeneralIndustries
      - HealthEnterprisesAndPartsOfPublicSector
      - AgricultureForestryFisheryEtc
      - Svalbard
      - SectorExemptActivity
      - RoadFreightTransport
      - FinancialDifficulties
      - AdditionalEmployersContribution
      nullable: true
      type: string
    EmployerContributionZone:
      description: The geographical zones for differentiated employer contribution.<p>Members:</p><ul><li><i>Zone1</i>
        - The zone 1</li><li><i>Zone1a</i> - The zone 1a</li><li><i>Zone2</i> - The
        zone 2</li><li><i>Zone3</i> - The zone 3</li><li><i>Zone4</i> - The zone 4</li><li><i>Zone4a</i>
        - The zone 4a</li><li><i>Zone5</i> - The zone 5</li></ul>
      enum:
      - Zone1
      - Zone1a
      - Zone2
      - Zone3
      - Zone4
      - Zone4a
      - Zone5
      nullable: true
      type: string
    AddressDto:
      additionalProperties: false
      description: "The address DTO contains all properties relevant to an address\
        \ object in Go.\r\nAddress representing a physical location."
      example:
        AddressLine2: "Att: Ola Nordmann"
        AddressLine1: Postboks 404
        ZipCode: "0161"
        City: Oslo
        CountryCode: "NO"
      properties:
        AddressLine1:
          description: The first (main) address line.
          example: Postboks 404
          maxLength: 200
          nullable: true
          type: string
        AddressLine2:
          description: The second address line.
          example: "Att: Ola Nordmann"
          maxLength: 200
          nullable: true
          type: string
        City:
          description: The city.
          example: Oslo
          maxLength: 100
          nullable: true
          type: string
        CountryCode:
          description: "The ISO 3166-1 alfa-2 country code (two characters).\r\nDefaults\
            \ to \"NO\" if not set."
          example: "NO"
          nullable: true
          type: string
        ZipCode:
          description: The zip code (postal code).
          example: "0161"
          maxLength: 50
          nullable: true
          type: string
      type: object
    PaymentTermDto:
      additionalProperties: false
      description: The payment terms on the client.
      example:
        IsDefault: true
        IsActive: true
        CreditDays: 14
        Id: 1234
        CreatedDateTimeOffset: 2023-05-19T08:51:00.1234567Z
        LastChangedDateTimeOffset: 2023-05-19T08:52:00.1234567Z
        Name: 14 days
      properties:
        CreatedDateTimeOffset:
          description: The timestamp of the created date of the payment term. UTC
            time.
          example: 2023-05-19T08:51:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        CreditDays:
          description: "The number of credit days for the payment term.\r\nThis define\
            \ the number of days from an invoice is sent until it is due paid, if\
            \ a sales order is invoiced using this payment term."
          example: 14
          format: int32
          nullable: true
          type: integer
        Id:
          description: "The identifier of the payment term.\r\nThis identifier is\
            \ unique and assigned by PowerOffice Go when a new entity is saved, and\
            \ should be provided when an entity should be edited or deleted (PATCH\
            \ or DELETE)."
          example: 1234
          format: int64
          readOnly: true
          type: integer
        IsActive:
          description: Value indicating whether this payment term is active.
          example: true
          nullable: true
          type: boolean
        IsDefault:
          description: "A value indicating if this payment term is the standard payment\
            \ term set on the client.\r\nCustomers and sales orders will default inherit\
            \ the standard payment term from the client invoice settings."
          example: true
          nullable: true
          type: boolean
        LastChangedDateTimeOffset:
          description: The timestamp of the last changed date of the payment term.
            UTC time.
          example: 2023-05-19T08:52:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        Name:
          description: "The name of the payment term.\r\nMax length is 128 characters."
          example: 14 days
          maxLength: 128
          nullable: true
          type: string
      type: object
    SupplierInvoiceJournalEntryVoucherDto:
      additionalProperties: false
      description: The available properties for a journal entry supplier invoice
      example:
        Description: My first voucher description
        Dim3Id: 12345
        Dim2Id: 12345
        Dim1Id: 12345
        SupplierContactId: 123456
        SupplierVoucherLines:
        - DebitAccountId: 12345
          Accrual:
            BalanceAccountNo: 2970
            IsActive: true
            BalanceAccountAgricultureDepartment: None
            FromDate: 2023-01-01
            ToDate: 2023-12-31
            BalanceAccountId: 123456
          Description: Hello accounting world!
          CreditVatId: 12345
          Dim3Id: 12345
          Dim2Id: 12345
          DebitVatId: 12345
          Dim1Id: 12345
          CreditAccountType: Customer
          ProductId: 12345
          CreditVatReturnSpecification: None
          ItemDescription: ItemDescription
          CreditContactId: 123456
          DebitContactId: 123456
          DebitAccountAgricultureDepartment: null
          DebitVatReturnSpecification: null
          SellersItemIdentification: SellersItemIdentification
          ItemName: ItemName
          DebitAccountType: null
          CreditAccountId: 12345
          LocationId: 12345
          ProjectId: 12345
          Quantity: 100
          CreatedDateTimeOffset: 2024-03-20T12:52:00.1234567Z
          CurrencyAmount: 69420
          Quantity2: 200
          AgricultureDetails:
            ProductCode: 1
            ProductDetailCode: 5
            ProductQualityCode: 5
            ProductRegistrationId: ProductRegistrationId
            ProductGtinNumber: ProductGtinNumber
            ProductRacialCode: ProductRacialCode
            ProductAnimalId: ProductAnimalId
            ProductHasForestCertificationCode: true
            IsMainProductLine: true
            ProductAdditionSubtractionCode: 6
            ProductGender: Male
            AgriculturalIndustryCode: 0
            ProductMachineType: ProductMachineType
            ProductEcological: true
            ProductDateOfBirth: 2000-01-23
            ProductChassisId: ProductChassisId
          DepartmentId: 12345
          Id: 12345
          CreditAccountAgricultureDepartment: None
          LastChangedDateTimeOffset: 2024-03-20T13:13:00.1234567Z
        - DebitAccountId: 12345
          Accrual:
            BalanceAccountNo: 2970
            IsActive: true
            BalanceAccountAgricultureDepartment: None
            FromDate: 2023-01-01
            ToDate: 2023-12-31
            BalanceAccountId: 123456
          Description: Hello accounting world!
          CreditVatId: 12345
          Dim3Id: 12345
          Dim2Id: 12345
          DebitVatId: 12345
          Dim1Id: 12345
          CreditAccountType: Customer
          ProductId: 12345
          CreditVatReturnSpecification: None
          ItemDescription: ItemDescription
          CreditContactId: 123456
          DebitContactId: 123456
          DebitAccountAgricultureDepartment: null
          DebitVatReturnSpecification: null
          SellersItemIdentification: SellersItemIdentification
          ItemName: ItemName
          DebitAccountType: null
          CreditAccountId: 12345
          LocationId: 12345
          ProjectId: 12345
          Quantity: 100
          CreatedDateTimeOffset: 2024-03-20T12:52:00.1234567Z
          CurrencyAmount: 69420
          Quantity2: 200
          AgricultureDetails:
            ProductCode: 1
            ProductDetailCode: 5
            ProductQualityCode: 5
            ProductRegistrationId: ProductRegistrationId
            ProductGtinNumber: ProductGtinNumber
            ProductRacialCode: ProductRacialCode
            ProductAnimalId: ProductAnimalId
            ProductHasForestCertificationCode: true
            IsMainProductLine: true
            ProductAdditionSubtractionCode: 6
            ProductGender: Male
            AgriculturalIndustryCode: 0
            ProductMachineType: ProductMachineType
            ProductEcological: true
            ProductDateOfBirth: 2000-01-23
            ProductChassisId: ProductChassisId
          DepartmentId: 12345
          Id: 12345
          CreditAccountAgricultureDepartment: None
          LastChangedDateTimeOffset: 2024-03-20T13:13:00.1234567Z
        CurrencyCode: EUR
        VoucherDate: 2024-03-20
        ContractNo: CO-1234
        Payout: false
        PurchaseOrderReference: PO-1337
        SupplierBankAccountId: 12345
        DueDate: 2024-03-21
        ClientBankAccountId: 12345
        VoucherState: IsDraft
        Cid: "9235400011927001"
        PaymentDate: 2024-03-31
        ApprovalState: Approved
        LocationId: 12345
        ProjectId: 12345
        CurrencyExchangeRate: 10.78
        InvoiceNo: "12345"
        CreatedDateTimeOffset: 2024-03-20T13:57:00.1234567Z
        CurrencyAmount: 69420
        Pages:
        - VoucherId: d5956bfc-5648-4299-9186-7e0c224bdf1e
          Id: 11001
          CreatedDateTimeOffset: 2000-01-23T04:56:07.000+00:00
        - VoucherId: d5956bfc-5648-4299-9186-7e0c224bdf1e
          Id: 11001
          CreatedDateTimeOffset: 2000-01-23T04:56:07.000+00:00
        CurrencyRegistryText: EUR
        PaymentOnHold: false
        DepartmentId: 12345
        Id: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        CurrencyRegistryCode: None
        OriginatedFromEhf: true
        SupplierAccountId: 12345
        LastChangedDateTimeOffset: 2024-03-20T14:08:00.1234567Z
      properties:
        ApprovalState:
          $ref: '#/components/schemas/ApprovalState'
        Cid:
          description: "The cid number (norwegian: KID), if applicable to the voucher."
          example: "9235400011927001"
          nullable: true
          type: string
        ClientBankAccountId:
          description: "The identifier of the client bank account used for payment/remittance.\r\
            \nRelevant if payout is true. If not set, the default client bank account\
            \ will be used for any remittance."
          example: 12345
          format: int64
          nullable: true
          type: integer
        ContractNo:
          description: The contract number of the supplier invoice.
          example: CO-1234
          nullable: true
          type: string
        CreatedDateTimeOffset:
          description: The timestamp of when the voucher object was created.
          example: 2024-03-20T13:57:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        CurrencyAmount:
          description: "The total amount of the supplier voucher, in the currency\
            \ specified by the currency code of the voucher."
          example: 69420
          format: double
          type: number
        CurrencyCode:
          description: "The currency code of the voucher header.\r\nThe line amounts\
            \ will default be determined in the currency specified in the header.\r\
            \nFor some voucher types, different currency codes can be set on the line\
            \ level, thus overriding the currency of the head.\r\nCurrencies active\
            \ on the client can be queried using the AccountingSettings service. Currency\
            \ codes follow the ISO4217 standard."
          example: EUR
          maxLength: 3
          minLength: 0
          nullable: true
          type: string
        CurrencyExchangeRate:
          description: "The normalized currency exchange rate.\r\nAlways base 1.\r\
            \nRelevant to set if the voucher have a foreign currency with a specific\
            \ currency exchange rate.\r\nIf not set, the field will inherit the rate\
            \ in Go for the voucher date set.\r\nThe rates in Go are retrieved from\
            \ ECB via API."
          example: 10.78
          format: double
          nullable: true
          type: number
        CurrencyRegistryCode:
          $ref: '#/components/schemas/CurrencyRegistryCode'
        CurrencyRegistryText:
          description: The currency registry text of the supplier invoice.
          example: EUR
          nullable: true
          type: string
        DepartmentId:
          description: "The department Id of the voucher header.\r\nThe lines will\
            \ inherit the department from the voucher head if not specified on the\
            \ lines.\r\nDepartments can be queried and identified using the Department\
            \ service."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Description:
          description: The description field of the voucher header.
          example: My first voucher description
          nullable: true
          type: string
        Dim1Id:
          description: "The id of the dimension 1 associated with the voucher header.\r\
            \nThe lines will inherit the dim1 from the voucher head if not specified\
            \ on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim2Id:
          description: "The id of the dimension 2 associated with the voucher header.\r\
            \nThe lines will inherit the dim2 from the voucher head if not specified\
            \ on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim3Id:
          description: "The id of the dimension 3 associated with the voucher header.\r\
            \nThe lines will inherit the dim3 from the voucher head if not specified\
            \ on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        DueDate:
          description: "The due date of the supplier invoice (i.e. when it is due\
            \ paid).\r\nMust be greater or equal to the voucher date."
          example: 2024-03-21
          format: date
          nullable: true
          type: string
        Id:
          description: "A value that uniquely identifies this voucher.\r\nThe Id is\
            \ assigned by Go when the entry is created, and will persist when/if the\
            \ voucher is posted."
          example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
          format: uuid
          readOnly: true
          type: string
        InvoiceNo:
          description: The invoice number of the supplier invoice.
          example: "12345"
          maxLength: 40
          nullable: true
          type: string
        LastChangedDateTimeOffset:
          description: The timestamp of when the voucher object was last changed.
          example: 2024-03-20T14:08:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        LocationId:
          description: "The id of the location dimension associated with the voucher\
            \ header.\r\nThe lines will inherit the location from the voucher head\
            \ if not specified on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        OriginatedFromEhf:
          description: "Property indicating whether the journal entry voucher was\
            \ received by EHF. If true, the journal entry voucher have an EHF XML\
            \ file."
          example: true
          nullable: true
          readOnly: true
          type: boolean
        Pages:
          description: A collection of voucher pages associated with this voucher.
          items:
            $ref: '#/components/schemas/VoucherPage'
          nullable: true
          readOnly: true
          type: array
        PaymentDate:
          description: "The suggested payment date if this voucher is to be subject\
            \ of remittance.\r\nRelevant if payout is set true.\r\nIf not set in POST\
            \ or PATCH operations, the field will default to the due date of supplier\
            \ invoices and the voucher date of supplier credit notes.\r\nTo remove\
            \ any value from PaymentDate in PATCH, both PaymentDate and DueDate must\
            \ be removed."
          example: 2024-03-31
          format: date
          nullable: true
          type: string
        PaymentOnHold:
          description: "Property indicating whether the voucher remittance should\
            \ be on hold.\r\nDefault false, and if true a remittance draft will be\
            \ created when the voucher is posted, but with no payment date suggested\
            \ - rather the state 'on hold'."
          example: false
          nullable: true
          type: boolean
        Payout:
          description: "Property indicating whether the voucher should be paid using\
            \ remittance.\r\nDefault true, and if true a remittance draft will be\
            \ created when the voucher is posted."
          example: false
          nullable: true
          type: boolean
        ProjectId:
          description: "The id of the project associated with the voucher header.\r\
            \nThe lines will inherit the project from the voucher head if not specified\
            \ on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        PurchaseOrderReference:
          description: The purchase order reference. The property can be used to reference
            purchase order placed to the supplier.
          example: PO-1337
          nullable: true
          type: string
        SupplierAccountId:
          description: The id of the supplier subledger account.
          example: 12345
          format: int64
          nullable: true
          type: integer
        SupplierBankAccountId:
          description: The identifier of the supplier bank account associated with
            the voucher.
          example: 12345
          format: int64
          nullable: true
          type: integer
        SupplierContactId:
          description: The contact ID of the supplier.
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        SupplierVoucherLines:
          description: The lines of the supplier invoice.
          items:
            $ref: '#/components/schemas/SupplierVoucherLineDto'
          nullable: true
          type: array
        VoucherDate:
          description: "The voucher date.\r\nThis represents the date of the voucher,\
            \ the document date of an invoice for instance,\r\nand may differ from\
            \ the transaction dates for lines the voucher, depending on the type of\
            \ voucher."
          example: 2024-03-20
          format: date
          nullable: true
          type: string
        VoucherState:
          $ref: '#/components/schemas/VoucherState'
      type: object
    BankJournalEntryVoucherDto:
      additionalProperties: false
      description: Dto representing properties available on bank journal voucher.
      example:
        CurrencyCode: EUR
        Pages:
        - VoucherId: d5956bfc-5648-4299-9186-7e0c224bdf1e
          Id: 11001
          CreatedDateTimeOffset: 2000-01-23T04:56:07.000+00:00
        - VoucherId: d5956bfc-5648-4299-9186-7e0c224bdf1e
          Id: 11001
          CreatedDateTimeOffset: 2000-01-23T04:56:07.000+00:00
        Description: My first voucher description
        VoucherDate: 2024-03-20
        Dim3Id: 12345
        Dim2Id: 12345
        Dim1Id: 12345
        BankVoucherLines:
        - DebitAccountId: 12345
          Accrual:
            BalanceAccountNo: 2970
            IsActive: true
            BalanceAccountAgricultureDepartment: None
            FromDate: 2023-01-01
            ToDate: 2023-12-31
            BalanceAccountId: 123456
          Description: Hello accounting world!
          CreditVatId: 12345
          Dim3Id: 12345
          Dim2Id: 12345
          DebitVatId: 12345
          Dim1Id: 12345
          ProductId: 12345
          CreditVatReturnSpecification: None
          DebitAccountAgricultureDepartment: null
          CurrencyCode: EUR
          DebitVatReturnSpecification: null
          CreditAccountId: 12345
          LocationId: 12345
          ProjectId: 12345
          Quantity: 100
          CurrencyExchangeRate: 10.78
          InvoiceNo: "753159"
          CreatedDateTimeOffset: 2024-03-20T12:52:00.1234567Z
          CurrencyAmount: 69420
          Quantity2: 200
          AgricultureDetails:
            ProductCode: 1
            ProductDetailCode: 5
            ProductQualityCode: 5
            ProductRegistrationId: ProductRegistrationId
            ProductGtinNumber: ProductGtinNumber
            ProductRacialCode: ProductRacialCode
            ProductAnimalId: ProductAnimalId
            ProductHasForestCertificationCode: true
            IsMainProductLine: true
            ProductAdditionSubtractionCode: 6
            ProductGender: Male
            AgriculturalIndustryCode: 0
            ProductMachineType: ProductMachineType
            ProductEcological: true
            ProductDateOfBirth: 2000-01-23
            ProductChassisId: ProductChassisId
          PostingDate: 2024-09-18
          DepartmentId: 12345
          Id: 12345
          CreditAccountAgricultureDepartment: None
          LastChangedDateTimeOffset: 2024-03-20T13:13:00.1234567Z
        - DebitAccountId: 12345
          Accrual:
            BalanceAccountNo: 2970
            IsActive: true
            BalanceAccountAgricultureDepartment: None
            FromDate: 2023-01-01
            ToDate: 2023-12-31
            BalanceAccountId: 123456
          Description: Hello accounting world!
          CreditVatId: 12345
          Dim3Id: 12345
          Dim2Id: 12345
          DebitVatId: 12345
          Dim1Id: 12345
          ProductId: 12345
          CreditVatReturnSpecification: None
          DebitAccountAgricultureDepartment: null
          CurrencyCode: EUR
          DebitVatReturnSpecification: null
          CreditAccountId: 12345
          LocationId: 12345
          ProjectId: 12345
          Quantity: 100
          CurrencyExchangeRate: 10.78
          InvoiceNo: "753159"
          CreatedDateTimeOffset: 2024-03-20T12:52:00.1234567Z
          CurrencyAmount: 69420
          Quantity2: 200
          AgricultureDetails:
            ProductCode: 1
            ProductDetailCode: 5
            ProductQualityCode: 5
            ProductRegistrationId: ProductRegistrationId
            ProductGtinNumber: ProductGtinNumber
            ProductRacialCode: ProductRacialCode
            ProductAnimalId: ProductAnimalId
            ProductHasForestCertificationCode: true
            IsMainProductLine: true
            ProductAdditionSubtractionCode: 6
            ProductGender: Male
            AgriculturalIndustryCode: 0
            ProductMachineType: ProductMachineType
            ProductEcological: true
            ProductDateOfBirth: 2000-01-23
            ProductChassisId: ProductChassisId
          PostingDate: 2024-09-18
          DepartmentId: 12345
          Id: 12345
          CreditAccountAgricultureDepartment: None
          LastChangedDateTimeOffset: 2024-03-20T13:13:00.1234567Z
        LocationId: 12345
        ProjectId: 12345
        DepartmentId: 12345
        Id: 38ecfc1a-bf51-448f-99a8-a61bc5771109
      properties:
        BankVoucherLines:
          description: The lines of the bank journal voucher
          items:
            $ref: '#/components/schemas/BankJournalEntryVoucherLineDto'
          nullable: true
          type: array
        CurrencyCode:
          description: "The currency code of the voucher header.\r\nThe line amounts\
            \ will default be determined in the currency specified in the header.\r\
            \nFor some voucher types, different currency codes can be set on the line\
            \ level, thus overriding the currency of the head.\r\nCurrencies active\
            \ on the client can be queried using the AccountingSettings service. Currency\
            \ codes follow the ISO4217 standard."
          example: EUR
          maxLength: 3
          minLength: 0
          nullable: true
          type: string
        DepartmentId:
          description: "The department Id of the voucher header.\r\nThe lines will\
            \ inherit the department from the voucher head if not specified on the\
            \ lines.\r\nDepartments can be queried and identified using the Department\
            \ service."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Description:
          description: The description field of the voucher header.
          example: My first voucher description
          nullable: true
          type: string
        Dim1Id:
          description: "The id of the dimension 1 associated with the voucher header.\r\
            \nThe lines will inherit the dim1 from the voucher head if not specified\
            \ on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim2Id:
          description: "The id of the dimension 2 associated with the voucher header.\r\
            \nThe lines will inherit the dim2 from the voucher head if not specified\
            \ on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim3Id:
          description: "The id of the dimension 3 associated with the voucher header.\r\
            \nThe lines will inherit the dim3 from the voucher head if not specified\
            \ on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Id:
          description: "A value that uniquely identifies this voucher.\r\nThe Id is\
            \ assigned by Go when the entry is created, and will persist when/if the\
            \ voucher is posted."
          example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
          format: uuid
          readOnly: true
          type: string
        LocationId:
          description: "The id of the location dimension associated with the voucher\
            \ header.\r\nThe lines will inherit the location from the voucher head\
            \ if not specified on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Pages:
          description: A collection of voucher pages associated with this voucher.
          items:
            $ref: '#/components/schemas/VoucherPage'
          nullable: true
          readOnly: true
          type: array
        ProjectId:
          description: "The id of the project associated with the voucher header.\r\
            \nThe lines will inherit the project from the voucher head if not specified\
            \ on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        VoucherDate:
          description: "The voucher date.\r\nThis represents the date of the voucher,\
            \ the document date of an invoice for instance,\r\nand may differ from\
            \ the transaction dates for lines the voucher, depending on the type of\
            \ voucher."
          example: 2024-03-20
          format: date
          nullable: true
          type: string
      type: object
    BankJournalEntryVoucherLineDto:
      additionalProperties: false
      description: A dto represening a bank journal entry voucher line.
      example:
        DebitAccountId: 12345
        Accrual:
          BalanceAccountNo: 2970
          IsActive: true
          BalanceAccountAgricultureDepartment: None
          FromDate: 2023-01-01
          ToDate: 2023-12-31
          BalanceAccountId: 123456
        Description: Hello accounting world!
        CreditVatId: 12345
        Dim3Id: 12345
        Dim2Id: 12345
        DebitVatId: 12345
        Dim1Id: 12345
        ProductId: 12345
        CreditVatReturnSpecification: None
        DebitAccountAgricultureDepartment: null
        CurrencyCode: EUR
        DebitVatReturnSpecification: null
        CreditAccountId: 12345
        LocationId: 12345
        ProjectId: 12345
        Quantity: 100
        CurrencyExchangeRate: 10.78
        InvoiceNo: "753159"
        CreatedDateTimeOffset: 2024-03-20T12:52:00.1234567Z
        CurrencyAmount: 69420
        Quantity2: 200
        AgricultureDetails:
          ProductCode: 1
          ProductDetailCode: 5
          ProductQualityCode: 5
          ProductRegistrationId: ProductRegistrationId
          ProductGtinNumber: ProductGtinNumber
          ProductRacialCode: ProductRacialCode
          ProductAnimalId: ProductAnimalId
          ProductHasForestCertificationCode: true
          IsMainProductLine: true
          ProductAdditionSubtractionCode: 6
          ProductGender: Male
          AgriculturalIndustryCode: 0
          ProductMachineType: ProductMachineType
          ProductEcological: true
          ProductDateOfBirth: 2000-01-23
          ProductChassisId: ProductChassisId
        PostingDate: 2024-09-18
        DepartmentId: 12345
        Id: 12345
        CreditAccountAgricultureDepartment: None
        LastChangedDateTimeOffset: 2024-03-20T13:13:00.1234567Z
      properties:
        Accrual:
          $ref: '#/components/schemas/AccrualBase'
        AgricultureDetails:
          $ref: '#/components/schemas/AgricultureDetails'
        CreatedDateTimeOffset:
          description: The timestamp of when the line was created.
          example: 2024-03-20T12:52:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        CreditAccountAgricultureDepartment:
          $ref: '#/components/schemas/AgricultureDepartment'
        CreditAccountId:
          description: The id of the general ledger account or the subledger account
            to post the credit amount.
          example: 12345
          format: int64
          nullable: true
          type: integer
        CreditVatId:
          description: The id of the vat code used for the credit entry.
          example: 12345
          format: int32
          nullable: true
          type: integer
        CreditVatReturnSpecification:
          $ref: '#/components/schemas/VatReturnSpecification'
        CurrencyAmount:
          description: "The amount on the line, in the currency specified by the currency\
            \ code of the voucher or the currency of the voucher line if available.\r\
            \nGross amounts should be provided, along with the relevant vat code."
          example: 69420
          format: double
          type: number
        CurrencyCode:
          description: "The currency code of the voucher line. Will inherit the currency\
            \ code of the voucher head if not set. The line amounts be determined\
            \ in the currency specified on the line.\r\nCurrencies active on the client\
            \ can be queried using the AccountingSettings service. Currency codes\
            \ follow the ISO4217 standard."
          example: EUR
          nullable: true
          type: string
        CurrencyExchangeRate:
          description: "The normalized currency exchange rate. Always base 1. Relevant\
            \ to set if the voucher line have a foreign currency with a specific currency\
            \ exchange rate.\r\nIf not set, the field will inherit the rate in Go\
            \ for the posting date set.\r\nThe rates in Go are retrieved from ECB."
          example: 10.78
          format: double
          nullable: true
          type: number
        DebitAccountAgricultureDepartment:
          $ref: '#/components/schemas/AgricultureDepartment'
        DebitAccountId:
          description: The id of the general ledger account or the subledger account
            to post the debit amount.
          example: 12345
          format: int64
          nullable: true
          type: integer
        DebitVatId:
          description: The id of the vat code used for the debit entry.
          example: 12345
          format: int32
          nullable: true
          type: integer
        DebitVatReturnSpecification:
          $ref: '#/components/schemas/VatReturnSpecification'
        DepartmentId:
          description: "The department Id. Will inherit department id from the voucher\
            \ head if not specifically set on the line.\r\nDepartment Id = -1 means\
            \ no department.\r\nDepartments can be queried and identified using the\
            \ Department service."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Description:
          description: The description of the voucher line.
          example: Hello accounting world!
          nullable: true
          type: string
        Dim1Id:
          description: "The id of the dimension 1 associated with the line.\r\nWill\
            \ inherit dim1Id from the voucher head if not specifically set on the\
            \ line.\r\nDim1Id = -1 means no dimension 1."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim2Id:
          description: "The id of the dimension 2 associated with the line.\r\nWill\
            \ inherit dim2Id from the voucher head if not specifically set on the\
            \ line.\r\nDim2Id = -1 means no dimension 2."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim3Id:
          description: "The id of the dimension 3 associated with the line.\r\nWill\
            \ inherit dim1Id from the voucher head if not specifically set on the\
            \ line.\r\nDim3Id = -1 means no dimension 3."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Id:
          description: "A value that uniquely identifies this journal entry voucher\
            \ line.\r\nThe Id is assigned by Go when the entry is created."
          example: 12345
          format: int64
          readOnly: true
          type: integer
        InvoiceNo:
          description: "The invoice number this payment transaction relate to.\r\n\
            If provided, and the account number set on the line is a subledger account,\
            \ the system will try to match the payment line with the accounting entry\
            \ of the invoice referenced."
          example: "753159"
          nullable: true
          type: string
        LastChangedDateTimeOffset:
          description: The timestamp of the last change of the line.
          example: 2024-03-20T13:13:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        LocationId:
          description: "The id of the location dimension associated with the line.\r\
            \nWill inherit locationId from the voucher head if not specifically set\
            \ on the line.\r\nLocationId = -1 means no location."
          example: 12345
          format: int64
          nullable: true
          type: integer
        PostingDate:
          description: "The posting date and transaction date of the line. This is\
            \ the date of effect in the accounting system for the Amount when the\
            \ voucher is posted.\r\nIf not set, the posting date will inherit the\
            \ voucher date set in the header.\r\nThe posting date is also the currency\
            \ conversion date used by Go if the currency rate is not set explicit."
          example: 2024-09-18
          format: date
          nullable: true
          type: string
        ProductId:
          description: The product id associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        ProjectId:
          description: "The id of the project associated with the line.\r\nWill inherit\
            \ projectId from the voucher head if not specifically set on the line.\r\
            \nProjectId = -1 means no project."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Quantity:
          description: "The quantity dimension set on the line.\r\nUsually associated\
            \ with the product set on the line.\r\nIf the client is an agriculture\
            \ client, the quantity is associated with the unit1 of the general ledger\
            \ account."
          example: 100
          format: double
          nullable: true
          type: number
        Quantity2:
          description: "The quantity2 dimension set on the line.\r\nRelevant only\
            \ for agriculture clients, where the quantity2 is associated with the\
            \ unit2 of the general ledger account."
          example: 200
          format: double
          nullable: true
          type: number
      type: object
    BankJournalEntryVoucherPostDto:
      additionalProperties: false
      description: Dto for posting bank journal entry voucher
      example:
        CurrencyCode: EUR
        BankJournalLines:
        - DebitAccountId: 12345
          Accrual:
            BalanceAccountNo: 2970
            IsActive: true
            BalanceAccountAgricultureDepartment: None
            FromDate: 2023-01-01
            ToDate: 2023-12-31
            BalanceAccountId: 123456
          Description: Hello accounting world!
          CreditVatId: 12345
          Dim3Id: 12345
          Dim2Id: 12345
          DebitVatId: 12345
          Dim1Id: 12345
          CreditAccountId: 12345
          LocationId: 12345
          ProjectId: 12345
          Quantity: 100
          CurrencyExchangeRate: 10.78
          InvoiceNo: "753159"
          ProductId: 12345
          CreditVatReturnSpecification: None
          CurrencyAmount: 69420
          CurrencyCode: EUR
          DebitVatReturnSpecification: null
          Quantity2: 200
          AgricultureDetails:
            ProductCode: 1
            ProductDetailCode: 5
            ProductQualityCode: 5
            ProductRegistrationId: ProductRegistrationId
            ProductGtinNumber: ProductGtinNumber
            ProductRacialCode: ProductRacialCode
            ProductAnimalId: ProductAnimalId
            ProductHasForestCertificationCode: true
            IsMainProductLine: true
            ProductAdditionSubtractionCode: 6
            ProductGender: Male
            AgriculturalIndustryCode: 0
            ProductMachineType: ProductMachineType
            ProductEcological: true
            ProductDateOfBirth: 2000-01-23
            ProductChassisId: ProductChassisId
          PostingDate: 2024-09-18
          DepartmentId: 12345
        - DebitAccountId: 12345
          Accrual:
            BalanceAccountNo: 2970
            IsActive: true
            BalanceAccountAgricultureDepartment: None
            FromDate: 2023-01-01
            ToDate: 2023-12-31
            BalanceAccountId: 123456
          Description: Hello accounting world!
          CreditVatId: 12345
          Dim3Id: 12345
          Dim2Id: 12345
          DebitVatId: 12345
          Dim1Id: 12345
          CreditAccountId: 12345
          LocationId: 12345
          ProjectId: 12345
          Quantity: 100
          CurrencyExchangeRate: 10.78
          InvoiceNo: "753159"
          ProductId: 12345
          CreditVatReturnSpecification: None
          CurrencyAmount: 69420
          CurrencyCode: EUR
          DebitVatReturnSpecification: null
          Quantity2: 200
          AgricultureDetails:
            ProductCode: 1
            ProductDetailCode: 5
            ProductQualityCode: 5
            ProductRegistrationId: ProductRegistrationId
            ProductGtinNumber: ProductGtinNumber
            ProductRacialCode: ProductRacialCode
            ProductAnimalId: ProductAnimalId
            ProductHasForestCertificationCode: true
            IsMainProductLine: true
            ProductAdditionSubtractionCode: 6
            ProductGender: Male
            AgriculturalIndustryCode: 0
            ProductMachineType: ProductMachineType
            ProductEcological: true
            ProductDateOfBirth: 2000-01-23
            ProductChassisId: ProductChassisId
          PostingDate: 2024-09-18
          DepartmentId: 12345
        Comment: My first bank journal comment.
        Description: My first voucher description
        VoucherDate: 2024-03-20
        Dim3Id: 12345
        Dim2Id: 12345
        Dim1Id: 12345
        LocationId: 12345
        ProjectId: 12345
        DepartmentId: 12345
      properties:
        BankJournalLines:
          description: The lines of the bank journal
          items:
            $ref: '#/components/schemas/BankJournalEntryVoucherLinePostDto'
          nullable: true
          type: array
        Comment:
          description: "Optional comment that will be shown in the journal entry history\
            \ in Go.\r\nOnly new vouchers will get the comment as part of the initial\
            \ history.\r\nIt is thus not possible to change the comment later, and\
            \ it will not be returned in API-calls.\r\nThe comment text should be\
            \ human-readable. If necessary, use newline characters (\\n) to format\
            \ the text for better readability"
          example: My first bank journal comment.
          maxLength: 1000
          nullable: true
          type: string
        CurrencyCode:
          description: "The currency code of the voucher header.\r\nThe line amounts\
            \ will default be determined in the currency specified in the header.\r\
            \nFor some voucher types, different currency codes can be set on the line\
            \ level, thus overriding the currency of the head.\r\nCurrencies active\
            \ on the client can be queried using the AccountingSettings service. Currency\
            \ codes follow the ISO4217 standard."
          example: EUR
          maxLength: 3
          minLength: 0
          nullable: true
          type: string
        DepartmentId:
          description: "The department Id of the voucher header.\r\nThe lines will\
            \ inherit the department from the voucher head if not specified on the\
            \ lines.\r\nDepartments can be queried and identified using the Department\
            \ service."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Description:
          description: The description field of the voucher header.
          example: My first voucher description
          nullable: true
          type: string
        Dim1Id:
          description: "The id of the dimension 1 associated with the voucher header.\r\
            \nThe lines will inherit the dim1 from the voucher head if not specified\
            \ on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim2Id:
          description: "The id of the dimension 2 associated with the voucher header.\r\
            \nThe lines will inherit the dim2 from the voucher head if not specified\
            \ on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim3Id:
          description: "The id of the dimension 3 associated with the voucher header.\r\
            \nThe lines will inherit the dim3 from the voucher head if not specified\
            \ on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        LocationId:
          description: "The id of the location dimension associated with the voucher\
            \ header.\r\nThe lines will inherit the location from the voucher head\
            \ if not specified on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        ProjectId:
          description: "The id of the project associated with the voucher header.\r\
            \nThe lines will inherit the project from the voucher head if not specified\
            \ on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        VoucherDate:
          description: "The voucher date.\r\nThis represents the date of the voucher,\
            \ the document date of an invoice for instance,\r\nand may differ from\
            \ the transaction dates for lines the voucher, depending on the type of\
            \ voucher."
          example: 2024-03-20
          format: date
          nullable: true
          type: string
      required:
      - CurrencyCode
      - VoucherDate
      type: object
    BankJournalEntryVoucherLinePostDto:
      additionalProperties: false
      description: DTO for creating a bank journal entry voucher line
      example:
        DebitAccountId: 12345
        Accrual:
          BalanceAccountNo: 2970
          IsActive: true
          BalanceAccountAgricultureDepartment: None
          FromDate: 2023-01-01
          ToDate: 2023-12-31
          BalanceAccountId: 123456
        Description: Hello accounting world!
        CreditVatId: 12345
        Dim3Id: 12345
        Dim2Id: 12345
        DebitVatId: 12345
        Dim1Id: 12345
        CreditAccountId: 12345
        LocationId: 12345
        ProjectId: 12345
        Quantity: 100
        CurrencyExchangeRate: 10.78
        InvoiceNo: "753159"
        ProductId: 12345
        CreditVatReturnSpecification: None
        CurrencyAmount: 69420
        CurrencyCode: EUR
        DebitVatReturnSpecification: null
        Quantity2: 200
        AgricultureDetails:
          ProductCode: 1
          ProductDetailCode: 5
          ProductQualityCode: 5
          ProductRegistrationId: ProductRegistrationId
          ProductGtinNumber: ProductGtinNumber
          ProductRacialCode: ProductRacialCode
          ProductAnimalId: ProductAnimalId
          ProductHasForestCertificationCode: true
          IsMainProductLine: true
          ProductAdditionSubtractionCode: 6
          ProductGender: Male
          AgriculturalIndustryCode: 0
          ProductMachineType: ProductMachineType
          ProductEcological: true
          ProductDateOfBirth: 2000-01-23
          ProductChassisId: ProductChassisId
        PostingDate: 2024-09-18
        DepartmentId: 12345
      properties:
        Accrual:
          $ref: '#/components/schemas/AccrualBase'
        AgricultureDetails:
          $ref: '#/components/schemas/AgricultureDetails'
        CreditAccountId:
          description: The id of the general ledger account or the subledger account
            to post the credit amount.
          example: 12345
          format: int64
          nullable: true
          type: integer
        CreditVatId:
          description: The id of the vat code used for the credit entry.
          example: 12345
          format: int32
          nullable: true
          type: integer
        CreditVatReturnSpecification:
          $ref: '#/components/schemas/VatReturnSpecification'
        CurrencyAmount:
          description: "The amount on the line, in the currency specified by the currency\
            \ code of the voucher or the currency of the voucher line if available.\r\
            \nGross amounts should be provided, along with the relevant vat code."
          example: 69420
          format: double
          type: number
        CurrencyCode:
          description: "The currency code of the voucher line. Will inherit the currency\
            \ code of the voucher head if not set. The line amounts be determined\
            \ in the currency specified on the line.\r\nCurrencies active on the client\
            \ can be queried using the AccountingSettings service. Currency codes\
            \ follow the ISO4217 standard."
          example: EUR
          nullable: true
          type: string
        CurrencyExchangeRate:
          description: "The normalized currency exchange rate. Always base 1. Relevant\
            \ to set if the voucher line have a foreign currency with a specific currency\
            \ exchange rate.\r\nIf not set, the field will inherit the rate in Go\
            \ for the posting date set.\r\nThe rates in Go are retrieved from ECB."
          example: 10.78
          format: double
          nullable: true
          type: number
        DebitAccountId:
          description: The id of the general ledger account or the subledger account
            to post the debit amount.
          example: 12345
          format: int64
          nullable: true
          type: integer
        DebitVatId:
          description: The id of the vat code used for the debit entry.
          example: 12345
          format: int32
          nullable: true
          type: integer
        DebitVatReturnSpecification:
          $ref: '#/components/schemas/VatReturnSpecification'
        DepartmentId:
          description: "The department Id. Will inherit department id from the voucher\
            \ head if not specifically set on the line.\r\nDepartment Id = -1 means\
            \ no department.\r\nDepartments can be queried and identified using the\
            \ Department service."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Description:
          description: The description of the voucher line.
          example: Hello accounting world!
          nullable: true
          type: string
        Dim1Id:
          description: "The id of the dimension 1 associated with the line.\r\nWill\
            \ inherit dim1Id from the voucher head if not specifically set on the\
            \ line.\r\nDim1Id = -1 means no dimension 1."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim2Id:
          description: "The id of the dimension 2 associated with the line.\r\nWill\
            \ inherit dim2Id from the voucher head if not specifically set on the\
            \ line.\r\nDim2Id = -1 means no dimension 2."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim3Id:
          description: "The id of the dimension 3 associated with the line.\r\nWill\
            \ inherit dim1Id from the voucher head if not specifically set on the\
            \ line.\r\nDim3Id = -1 means no dimension 3."
          example: 12345
          format: int64
          nullable: true
          type: integer
        InvoiceNo:
          description: "The invoice number this payment transaction relate to.\r\n\
            If provided, and the account number set on the line is a subledger account,\
            \ the system will try to match the payment line with the accounting entry\
            \ of the invoice referenced."
          example: "753159"
          nullable: true
          type: string
        LocationId:
          description: "The id of the location dimension associated with the line.\r\
            \nWill inherit locationId from the voucher head if not specifically set\
            \ on the line.\r\nLocationId = -1 means no location."
          example: 12345
          format: int64
          nullable: true
          type: integer
        PostingDate:
          description: "The posting date and transaction date of the line. This is\
            \ the date of effect in the accounting system for the Amount when the\
            \ voucher is posted.\r\nIf not set, the posting date will inherit the\
            \ voucher date set in the header.\r\nThe posting date is also the currency\
            \ conversion date used by Go if the currency rate is not set explicit."
          example: 2024-09-18
          format: date
          nullable: true
          type: string
        ProductId:
          description: The product id associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        ProjectId:
          description: "The id of the project associated with the line.\r\nWill inherit\
            \ projectId from the voucher head if not specifically set on the line.\r\
            \nProjectId = -1 means no project."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Quantity:
          description: "The quantity dimension set on the line.\r\nUsually associated\
            \ with the product set on the line.\r\nIf the client is an agriculture\
            \ client, the quantity is associated with the unit1 of the general ledger\
            \ account."
          example: 100
          format: double
          nullable: true
          type: number
        Quantity2:
          description: "The quantity2 dimension set on the line.\r\nRelevant only\
            \ for agriculture clients, where the quantity2 is associated with the\
            \ unit2 of the general ledger account."
          example: 200
          format: double
          nullable: true
          type: number
      type: object
    NewIntegrationDto:
      additionalProperties: false
      description: The available properties returned after activating a new integration
        on a client.
      example:
        ClientName: Office Power
        OrganizationNumber: "980386465"
        ClientKey: 34ff2cbb-1571-2542-1224-8f3e2342aae2
        ClientId: 09ab6bcf-4219-4149-8283-6b6a7342bfd9
      properties:
        ClientId:
          description: The unique identifier that the client has in Go.
          example: 09ab6bcf-4219-4149-8283-6b6a7342bfd9
          format: uuid
          readOnly: true
          type: string
        ClientKey:
          description: "The unique api client key for the specific client and integration\
            \ activated.\r\nMust be treated as a secret after activation and retrieval."
          example: 34ff2cbb-1571-2542-1224-8f3e2342aae2
          format: uuid
          readOnly: true
          type: string
        ClientName:
          description: The name of the client.
          example: Office Power
          nullable: true
          readOnly: true
          type: string
        OrganizationNumber:
          description: The organization number of the client.
          example: "980386465"
          nullable: true
          readOnly: true
          type: string
      type: object
    CustomerBalanceDto:
      additionalProperties: false
      description: Represents a customer balance.
      example:
        CustomerId: 123456
        CustomerName: Coca-Cola AS
        Balance: 502.25
        CustomerAccountNo: 10000
        CustomerExternalNo: 10000
      properties:
        Balance:
          description: "The current total balance of the customer, as of the date\
            \ (inclusive) provided in the query."
          example: 502.25
          format: double
          readOnly: true
          type: number
        CustomerAccountNo:
          description: "The customer account number for the related balance.\r\nCustomerAccountNo\
            \ will also represent the Customer number.\r\nCustomers can be queried\
            \ and identified using the Customer service."
          example: 10000
          format: int64
          nullable: true
          readOnly: true
          type: integer
        CustomerExternalNo:
          description: "The external number of the customer for the related balance,\
            \ if set on the Customer entity.\r\nAn external number set on the customer\
            \ is often used to reference the customer number in the external system,\
            \ if the customer numbers are not kept in 1:1 sync between Go and the\
            \ external system.\r\nThe field is available in the GUI with the name\
            \ External Code."
          example: 10000
          format: int64
          nullable: true
          readOnly: true
          type: integer
        CustomerId:
          description: "The identifier of the customer this balance is related to.\r\
            \nCustomers can be queried and identified using the Customer service."
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        CustomerName:
          description: "The name of the customer for the related balance.\r\nCustomers\
            \ can be queried and identified using the Customer service."
          example: Coca-Cola AS
          nullable: true
          readOnly: true
          type: string
      type: object
    BrandingThemeDto:
      additionalProperties: false
      description: "The branding themes on the client. Branding themes hold a set\
        \ of templates for various documents, such as invoices, reminders, quotes\
        \ etc."
      example:
        IsDefault: true
        LanguageCode: en-US
        Id: 123456
        Code: BT-123
        CreatedDateTimeOffset: 2024-02-26T08:03:00.1234567Z
        LastChangedDateTimeOffset: 2000-01-23T04:56:07.000+00:00
        Name: Standard theme
      properties:
        Code:
          description: The code of the branding theme.
          example: BT-123
          nullable: true
          readOnly: true
          type: string
        CreatedDateTimeOffset:
          description: The timestamp of the created date of the branding theme. UTC
            time.
          example: 2024-02-26T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        Id:
          description: The identifier of the branding theme. This identifier is unique
            and assigned by PowerOffice Go when a new entity is saved.
          example: 123456
          format: int64
          readOnly: true
          type: integer
        IsDefault:
          description: "A value indicating if this branding theme is the standard\
            \ branding theme set on the client.\r\nCustomers, projects and sales orders\
            \ will default inherit the standard branding theme if not overridden."
          example: true
          nullable: true
          readOnly: true
          type: boolean
        LanguageCode:
          description: The language code of the branding theme.
          example: en-US
          nullable: true
          readOnly: true
          type: string
        LastChangedDateTimeOffset:
          description: The timestamp of the last changed date of the branding theme.
            UTC time.
          format: date-time
          readOnly: true
          type: string
        Name:
          description: The name of the branding theme.
          example: Standard theme
          nullable: true
          readOnly: true
          type: string
      type: object
    CashVoucherDto:
      additionalProperties: false
      description: Dto for cash voucher type
      example:
        CurrencyCode: EUR
        SaftBatchId: "12312"
        Description: My first voucher description
        ImportedVoucherNo: 23145
        VoucherDate: 2024-03-20
        SaftSourceId: System_123
        VoucherLines:
        - ExternalLineReference: 123ABC
          AccountId: 12345
          Description: Hello accounting world!
          Dim3Id: 12345
          Dim2Id: 12345
          Dim1Id: 12345
          LocationId: 12345
          ProjectId: 12345
          Quantity: 100
          CurrencyExchangeRate: 10.78
          ProductId: 12345
          VatReturnSpecification: None
          VatId: 12345
          CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
          CurrencyAmount: 69420
          CurrencyCode: USD
          Quantity2: 200
          PostingDate: 2021-09-28
          CustomMatchingReference: 123ABC
          DepartmentId: 12345
          Id: 0
        - ExternalLineReference: 123ABC
          AccountId: 12345
          Description: Hello accounting world!
          Dim3Id: 12345
          Dim2Id: 12345
          Dim1Id: 12345
          LocationId: 12345
          ProjectId: 12345
          Quantity: 100
          CurrencyExchangeRate: 10.78
          ProductId: 12345
          VatReturnSpecification: None
          VatId: 12345
          CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
          CurrencyAmount: 69420
          CurrencyCode: USD
          Quantity2: 200
          PostingDate: 2021-09-28
          CustomMatchingReference: 123ABC
          DepartmentId: 12345
          Id: 0
        IsReversed: false
        ExternalImportReference: 123abc
        Id: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        VoucherNo: 123456
      properties:
        CreatedDateTimeOffset:
          description: The timestamp the year end voucher entity was created.
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        CurrencyCode:
          description: "The currency code of the voucher header.\r\nThe line amounts\
            \ will default be determined in the currency specified in the header.\r\
            \nFor some voucher types, different currency codes can be set on the line\
            \ level, thus overriding the currency of the head.\r\nCurrencies active\
            \ on the client can be queried using the AccountingSettings service. Currency\
            \ codes follow the ISO4217 standard."
          example: EUR
          maxLength: 3
          minLength: 0
          nullable: true
          type: string
        Description:
          description: The description field of the voucher header.
          example: My first voucher description
          nullable: true
          type: string
        ExternalImportReference:
          description: "The external import reference associated with the voucher.\
            \ This property can be set by integrations creating\r\nvouchers, in order\
            \ to reference the external system and ensure a duplicate check (only\
            \ one instance of the\r\nreference can exist on the client). Can be used\
            \ to correlate/duplicate check transactions. Guid's are\r\nrecommended,\
            \ or other unique references. This property is only available using the\
            \ api (not visible in the user\r\ninterface)"
          example: 123abc
          nullable: true
          type: string
        Id:
          description: A value that uniquely identifies this voucher. The Id is assigned
            by Go when the entry is created
          example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
          format: uuid
          readOnly: true
          type: string
        ImportedVoucherNo:
          description: "The external voucher number. Can be used to reference the\
            \ voucher number in the external system. The external\r\nvoucher number\
            \ is visible in Go in various reports."
          example: 23145
          format: int64
          nullable: true
          type: integer
        IsReversed:
          description: Value indicating whether this voucher has been reversed.
          example: false
          nullable: true
          readOnly: true
          type: boolean
        SaftBatchId:
          description: "The SAF-T batch id. This is the ID of the batch in the system\
            \ that transferred the voucher. Should be set if\r\nthis voucher is a\
            \ batch voucher containing the entries of multiple vouchers in the external\
            \ system. When this\r\nvoucher is exported to SAF-T, this property is\
            \ transactions BatchID in the SAF-T file. The external systems\r\nSAF-T\
            \ export should set the same BatchId on all the transactions that are\
            \ included in this Voucher to ensure\r\naudit trail. Max length 35 characters."
          example: "12312"
          nullable: true
          type: string
        SaftSourceId:
          description: "The SAF-T source id. This is the ID of the system that generated\
            \ the voucher. When this voucher is exported to\r\nSAF-T, this property\
            \ is mapped on the transactions SourceID in the SAF-T file. If the creating\
            \ system is\r\nrequired to export it's own SAF-T file, this source id\
            \ should correspond with the SystemID in the SAF-T file of\r\nthe external\
            \ system to ensure an audit trail. Max length is 35 characters."
          example: System_123
          nullable: true
          type: string
        VoucherDate:
          description: "The voucher date.\r\nThis represents the date of the voucher,\
            \ the document date of an invoice for instance,\r\nand may differ from\
            \ the transaction dates for lines the voucher, depending on the type of\
            \ voucher."
          example: 2024-03-20
          format: date
          type: string
        VoucherLines:
          description: The lines of the cash voucher
          items:
            $ref: '#/components/schemas/CashVoucherLineDto'
          nullable: true
          type: array
        VoucherNo:
          description: "The voucher number. This is the voucher number assigned by\
            \ Go when the voucher was posted. Voucher numbers are\r\nassigned by Go\
            \ in sequence."
          example: 123456
          format: int64
          readOnly: true
          type: integer
      type: object
    CashVoucherLineDto:
      additionalProperties: false
      description: The lines of the cash voucher
      example:
        ExternalLineReference: 123ABC
        AccountId: 12345
        Description: Hello accounting world!
        Dim3Id: 12345
        Dim2Id: 12345
        Dim1Id: 12345
        LocationId: 12345
        ProjectId: 12345
        Quantity: 100
        CurrencyExchangeRate: 10.78
        ProductId: 12345
        VatReturnSpecification: None
        VatId: 12345
        CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        CurrencyAmount: 69420
        CurrencyCode: USD
        Quantity2: 200
        PostingDate: 2021-09-28
        CustomMatchingReference: 123ABC
        DepartmentId: 12345
        Id: 0
      properties:
        AccountId:
          description: The id of the general ledger account or the subledger account
            to post the amount.
          example: 12345
          format: int64
          nullable: true
          type: integer
        CreatedDateTimeOffset:
          description: The timestamp the year end voucher entity was created.
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          type: string
        CurrencyAmount:
          description: "The amount on the line, in the currency specified by the currency\
            \ code of the voucher or the currency of the voucher line if available.\r\
            \nGross amounts should be provided, along with the relevant vat code.\
            \ The amount must be a positive or negative number not 0."
          example: 69420
          format: double
          type: number
        CurrencyCode:
          description: "The currency code of the voucher line. Will inherit the currency\
            \ code of the voucher head if not set.\r\nThe line currency amounts will\
            \ be determined in the currency specified on the line. Currencies active\
            \ on the\r\nclient can be queried using the AccountingSettings service.\
            \ Currency codes follow the ISO4217 standard."
          example: USD
          nullable: true
          type: string
        CurrencyExchangeRate:
          description: "The normalized currency exchange rate. Always base 1.\r\n\
            \            \r\nRelevant to set if the voucher line have a foreign currency\
            \ with a specific currency exchange rate.\r\nIf not set, the field will\
            \ inherit the rate in Go for the posting date set. The rates in Go are\
            \ retrieved\r\nfrom ECB via api."
          example: 10.78
          format: double
          nullable: true
          type: number
        CustomMatchingReference:
          description: "The custom matching reference of the line. This property may\
            \ be used for matching purposes on sub-ledger\r\naccounts, where entries\
            \ posted with a CustomMatchingReference will be matched immediately with\
            \ existing entries\r\nin the sub-ledger that have the same CustomMatchingReference\
            \ and opposite amount (unless existing entries are\r\nalready matched\
            \ out)."
          example: 123ABC
          nullable: true
          type: string
        DepartmentId:
          description: The department Id.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Description:
          description: The description of the voucher line.
          example: Hello accounting world!
          nullable: true
          type: string
        Dim1Id:
          description: The id of the dimension 1 associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim2Id:
          description: The id of the dimension 2 associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim3Id:
          description: The id of the dimension 3 associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        ExternalLineReference:
          description: "The external line reference associated with the line. This\
            \ property can only be set using the api, in order\r\nto reference the\
            \ external system's line. Can be used to correlate/duplicate check transactions."
          example: 123ABC
          nullable: true
          type: string
        Id:
          description: "A value that uniquely identifies the voucher objects line.\
            \ The id is assigned by Go when the entry is\r\ncreated. This id have\
            \ no relation to the account transaction id posted by the system."
          format: int64
          readOnly: true
          type: integer
        LocationId:
          description: The id of the location dimension associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        PostingDate:
          description: "The posting date.\r\nThis is the date of effect in the accounting\
            \ system for the Amount and CurrencyAmount (also the currency\r\nconversion\
            \ date used by Go if the currency rate was not set explicit when posted).\r\
            \nAlways present on transactions."
          example: 2021-09-28
          format: date
          type: string
        ProductId:
          description: The product id associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        ProjectId:
          description: The id of the project associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Quantity:
          description: "The quantity dimension set on the line.\r\nUsually associated\
            \ with the product set on the line.\r\nIf the client is an agriculture\
            \ client, the quantity is associated with the unit1 of the general ledger\
            \ account."
          example: 100
          format: double
          nullable: true
          type: number
        Quantity2:
          description: "The quantity2 dimension set on the line.\r\nRelevant only\
            \ for agriculture clients, where the quantity2 is associated with the\
            \ unit2 of the general ledger account."
          example: 200
          format: double
          nullable: true
          type: number
        VatId:
          description: The id of the vat code used for the credit entry.
          example: 12345
          format: int32
          nullable: true
          type: integer
        VatReturnSpecification:
          $ref: '#/components/schemas/VatReturnSpecification'
      required:
      - PostingDate
      type: object
    YearEndVoucherDto:
      additionalProperties: false
      description: DTO for year end voucher type
      example:
        CurrencyCode: EUR
        SaftBatchId: "12312"
        Description: My first voucher description
        ImportedVoucherNo: 23145
        VoucherDate: 2024-03-20
        SaftSourceId: System_123
        VoucherLines:
        - ExternalLineReference: 123ABC
          AccountId: 12345
          Description: Hello accounting world!
          Dim3Id: 12345
          Dim2Id: 12345
          Dim1Id: 12345
          LocationId: 12345
          ProjectId: 12345
          Quantity: 100
          CurrencyExchangeRate: 10.78
          ProductId: 12345
          VatReturnSpecification: None
          VatId: 12345
          CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
          CurrencyAmount: 69420
          CurrencyCode: USD
          Quantity2: 200
          PostingDate: 2021-09-28
          CustomMatchingReference: 123ABC
          DepartmentId: 12345
          Id: 0
        - ExternalLineReference: 123ABC
          AccountId: 12345
          Description: Hello accounting world!
          Dim3Id: 12345
          Dim2Id: 12345
          Dim1Id: 12345
          LocationId: 12345
          ProjectId: 12345
          Quantity: 100
          CurrencyExchangeRate: 10.78
          ProductId: 12345
          VatReturnSpecification: None
          VatId: 12345
          CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
          CurrencyAmount: 69420
          CurrencyCode: USD
          Quantity2: 200
          PostingDate: 2021-09-28
          CustomMatchingReference: 123ABC
          DepartmentId: 12345
          Id: 0
        IsReversed: false
        ExternalImportReference: 123abc
        Id: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        VoucherNo: 123456
      properties:
        CreatedDateTimeOffset:
          description: The timestamp the year end voucher entity was created.
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        CurrencyCode:
          description: "The currency code of the voucher header.\r\nThe line amounts\
            \ will default be determined in the currency specified in the header.\r\
            \nFor some voucher types, different currency codes can be set on the line\
            \ level, thus overriding the currency of the head.\r\nCurrencies active\
            \ on the client can be queried using the AccountingSettings service. Currency\
            \ codes follow the ISO4217 standard."
          example: EUR
          maxLength: 3
          minLength: 0
          nullable: true
          type: string
        Description:
          description: The description field of the voucher header.
          example: My first voucher description
          nullable: true
          type: string
        ExternalImportReference:
          description: "The external import reference associated with the voucher.\
            \ This property can be set by integrations creating\r\nvouchers, in order\
            \ to reference the external system and ensure a duplicate check (only\
            \ one instance of the\r\nreference can exist on the client). Can be used\
            \ to correlate/duplicate check transactions. Guid's are\r\nrecommended,\
            \ or other unique references. This property is only available using the\
            \ api (not visible in the user\r\ninterface)"
          example: 123abc
          nullable: true
          type: string
        Id:
          description: A value that uniquely identifies this voucher. The Id is assigned
            by Go when the entry is created
          example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
          format: uuid
          readOnly: true
          type: string
        ImportedVoucherNo:
          description: "The external voucher number. Can be used to reference the\
            \ voucher number in the external system. The external\r\nvoucher number\
            \ is visible in Go in various reports."
          example: 23145
          format: int64
          nullable: true
          type: integer
        IsReversed:
          description: Value indicating whether this voucher has been reversed.
          example: false
          nullable: true
          readOnly: true
          type: boolean
        SaftBatchId:
          description: "The SAF-T batch id. This is the ID of the batch in the system\
            \ that transferred the voucher. Should be set if\r\nthis voucher is a\
            \ batch voucher containing the entries of multiple vouchers in the external\
            \ system. When this\r\nvoucher is exported to SAF-T, this property is\
            \ transactions BatchID in the SAF-T file. The external systems\r\nSAF-T\
            \ export should set the same BatchId on all the transactions that are\
            \ included in this Voucher to ensure\r\naudit trail. Max length 35 characters."
          example: "12312"
          nullable: true
          type: string
        SaftSourceId:
          description: "The SAF-T source id. This is the ID of the system that generated\
            \ the voucher. When this voucher is exported to\r\nSAF-T, this property\
            \ is mapped on the transactions SourceID in the SAF-T file. If the creating\
            \ system is\r\nrequired to export it's own SAF-T file, this source id\
            \ should correspond with the SystemID in the SAF-T file of\r\nthe external\
            \ system to ensure an audit trail. Max length is 35 characters."
          example: System_123
          nullable: true
          type: string
        VoucherDate:
          description: "The voucher date.\r\nThis represents the date of the voucher,\
            \ the document date of an invoice for instance,\r\nand may differ from\
            \ the transaction dates for lines the voucher, depending on the type of\
            \ voucher."
          example: 2024-03-20
          format: date
          type: string
        VoucherLines:
          description: The lines of the year end voucher
          items:
            $ref: '#/components/schemas/YearEndVoucherLineDto'
          nullable: true
          type: array
        VoucherNo:
          description: "The voucher number. This is the voucher number assigned by\
            \ Go when the voucher was posted. Voucher numbers are\r\nassigned by Go\
            \ in sequence."
          example: 123456
          format: int64
          readOnly: true
          type: integer
      type: object
    YearEndVoucherLineDto:
      additionalProperties: false
      description: Base journal entry voucher line properties shared among all voucher
        types.
      example:
        ExternalLineReference: 123ABC
        AccountId: 12345
        Description: Hello accounting world!
        Dim3Id: 12345
        Dim2Id: 12345
        Dim1Id: 12345
        LocationId: 12345
        ProjectId: 12345
        Quantity: 100
        CurrencyExchangeRate: 10.78
        ProductId: 12345
        VatReturnSpecification: None
        VatId: 12345
        CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        CurrencyAmount: 69420
        CurrencyCode: USD
        Quantity2: 200
        PostingDate: 2021-09-28
        CustomMatchingReference: 123ABC
        DepartmentId: 12345
        Id: 0
      properties:
        AccountId:
          description: The id of the general ledger account or the subledger account
            to post the amount.
          example: 12345
          format: int64
          nullable: true
          type: integer
        CreatedDateTimeOffset:
          description: The timestamp the year end voucher entity was created.
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          type: string
        CurrencyAmount:
          description: "The amount on the line, in the currency specified by the currency\
            \ code of the voucher or the currency of the voucher line if available.\r\
            \nGross amounts should be provided, along with the relevant vat code.\
            \ The amount must be a positive or negative number not 0."
          example: 69420
          format: double
          type: number
        CurrencyCode:
          description: "The currency code of the voucher line. Will inherit the currency\
            \ code of the voucher head if not set.\r\nThe line currency amounts will\
            \ be determined in the currency specified on the line. Currencies active\
            \ on the\r\nclient can be queried using the AccountingSettings service.\
            \ Currency codes follow the ISO4217 standard."
          example: USD
          nullable: true
          type: string
        CurrencyExchangeRate:
          description: "The normalized currency exchange rate. Always base 1.\r\n\
            \            \r\nRelevant to set if the voucher line have a foreign currency\
            \ with a specific currency exchange rate.\r\nIf not set, the field will\
            \ inherit the rate in Go for the posting date set. The rates in Go are\
            \ retrieved\r\nfrom ECB via api."
          example: 10.78
          format: double
          nullable: true
          type: number
        CustomMatchingReference:
          description: "The custom matching reference of the line. This property may\
            \ be used for matching purposes on sub-ledger\r\naccounts, where entries\
            \ posted with a CustomMatchingReference will be matched immediately with\
            \ existing entries\r\nin the sub-ledger that have the same CustomMatchingReference\
            \ and opposite amount (unless existing entries are\r\nalready matched\
            \ out)."
          example: 123ABC
          nullable: true
          type: string
        DepartmentId:
          description: The department Id.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Description:
          description: The description of the voucher line.
          example: Hello accounting world!
          nullable: true
          type: string
        Dim1Id:
          description: The id of the dimension 1 associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim2Id:
          description: The id of the dimension 2 associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim3Id:
          description: The id of the dimension 3 associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        ExternalLineReference:
          description: "The external line reference associated with the line. This\
            \ property can only be set using the api, in order\r\nto reference the\
            \ external system's line. Can be used to correlate/duplicate check transactions."
          example: 123ABC
          nullable: true
          type: string
        Id:
          description: "A value that uniquely identifies the voucher objects line.\
            \ The id is assigned by Go when the entry is\r\ncreated. This id have\
            \ no relation to the account transaction id posted by the system."
          format: int64
          readOnly: true
          type: integer
        LocationId:
          description: The id of the location dimension associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        PostingDate:
          description: "The posting date.\r\nThis is the date of effect in the accounting\
            \ system for the Amount and CurrencyAmount (also the currency\r\nconversion\
            \ date used by Go if the currency rate was not set explicit when posted).\r\
            \nAlways present on transactions."
          example: 2021-09-28
          format: date
          type: string
        ProductId:
          description: The product id associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        ProjectId:
          description: The id of the project associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Quantity:
          description: "The quantity dimension set on the line.\r\nUsually associated\
            \ with the product set on the line.\r\nIf the client is an agriculture\
            \ client, the quantity is associated with the unit1 of the general ledger\
            \ account."
          example: 100
          format: double
          nullable: true
          type: number
        Quantity2:
          description: "The quantity2 dimension set on the line.\r\nRelevant only\
            \ for agriculture clients, where the quantity2 is associated with the\
            \ unit2 of the general ledger account."
          example: 200
          format: double
          nullable: true
          type: number
        VatId:
          description: The id of the vat code used for the credit entry.
          example: 12345
          format: int32
          nullable: true
          type: integer
        VatReturnSpecification:
          $ref: '#/components/schemas/VatReturnSpecification'
      required:
      - PostingDate
      type: object
    FinancialSettingsDto:
      additionalProperties: false
      description: Financial settings on a client.
      example:
        CurrencyCode: NOK
        CurrencyLossAccountNo: 8160
        CurrencyGainsAccountId: 123456
        UseTrustAccountManagement: true
        CurrencyLossAccountId: 123456
        CurrencyGainsAccountNo: 8060
        ConversionDate: 2022-01-01
        FinancialYearEndMonth: January
        LastChangedDateTimeOffset: 2022-06-01T11:34:56.1234567Z
      properties:
        ConversionDate:
          description: "The start date of processing in Go. This is the date the client\
            \ started using Go. Transactions can only be posted on or after this date.\
            \ The date can also be used to identify the date of the startbalance in\
            \ Go, which will be this date -1 day"
          example: 2022-01-01
          format: date
          readOnly: true
          type: string
        CurrencyCode:
          description: "The standard code of the currency the client use. As of now,\
            \ only NOK is supported and this property will allways return NOK"
          example: NOK
          nullable: true
          readOnly: true
          type: string
        CurrencyGainsAccountId:
          description: The general ledger account id of the account used for posting
            currency gains (agio). More information of accounts can be retrieved using
            the GeneralLedgerAccounts endpoint.
          example: 123456
          format: int64
          readOnly: true
          type: integer
        CurrencyGainsAccountNo:
          description: The general ledger account code of the account used for posting
            currency gains (agio). More information of accounts can be retrieved using
            the GeneralLedgerAccounts endpoint.
          example: 8060
          format: int64
          readOnly: true
          type: integer
        CurrencyLossAccountId:
          description: The general ledger account id of the account used for posting
            currency losses (disagio). More information of accounts can be retrieved
            using the GeneralLedgerAccounts endpoint.
          example: 123456
          format: int64
          readOnly: true
          type: integer
        CurrencyLossAccountNo:
          description: The general ledger account code of the account used for posting
            currency losses (disagio). More information of accounts can be retrieved
            using the GeneralLedgerAccounts endpoint.
          example: 8160
          format: int64
          readOnly: true
          type: integer
        FinancialYearEndMonth:
          $ref: '#/components/schemas/Months'
        LastChangedDateTimeOffset:
          description: "The last changed timestamp. Last changed will update when\
            \ the settings are created, or whenever the settings are changed."
          example: 2022-06-01T11:34:56.1234567Z
          format: date-time
          readOnly: true
          type: string
        UseTrustAccountManagement:
          description: "A value indication whether the client use the trust account\
            \ management functionality in Go.\r\nDefault to false, as the funcionality\
            \ is optional for law firms, brokers and other firms subject of trust\
            \ accounts.\r\nIf true, the client have dedicated trust bank accounts,\
            \ and use projects in account transactions."
          nullable: true
          readOnly: true
          type: boolean
      type: object
    Months:
      description: Enum defining the months of a year.<p>Members:</p><ul><li><i>January</i>
        - January</li><li><i>February</i> - February</li><li><i>March</i> - March</li><li><i>April</i>
        - April</li><li><i>May</i> - May</li><li><i>June</i> - June</li><li><i>July</i>
        - July</li><li><i>August</i> - August</li><li><i>September</i> - September</li><li><i>October</i>
        - October</li><li><i>November</i> - November</li><li><i>December</i> - December</li></ul>
      enum:
      - January
      - February
      - March
      - April
      - May
      - June
      - July
      - August
      - September
      - October
      - November
      - December
      nullable: true
      type: string
    GeneralLedgerAccountDto:
      additionalProperties: false
      description: The General Ledger Account DTO contains all properties relevant
        to a GeneralLedgerAccount-object in Go
      example:
        DepartmentCode: "110"
        IsVatCodeLocked: true
        AccountNo: 3000
        IsActive: true
        GeneralLedgerAccountType: Asset
        Unit1: BX
        VatReturnSpecification: None
        AgricultureDepartment: None
        Name: Kundefordringer
        Unit2: null
        CurrencyCode: USD
        VatCodeId: 0
        VatCode: "33"
        IsProjectRequired: true
        DepartmentId: 123456
        Id: 476023749
        IsDepartmentRequired: true
        LastChangedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
      properties:
        AccountNo:
          description: The number of the account.
          example: 3000
          format: int64
          readOnly: true
          type: integer
        AgricultureDepartment:
          $ref: '#/components/schemas/AgricultureDepartment'
        CurrencyCode:
          description: The standard code of the currency associated with the account.
          example: USD
          nullable: true
          type: string
        DepartmentCode:
          description: The code of the department associated with the account.
          example: "110"
          nullable: true
          readOnly: true
          type: string
        DepartmentId:
          description: The id of the department associated with the account.
          example: 123456
          format: int64
          nullable: true
          type: integer
        GeneralLedgerAccountType:
          $ref: '#/components/schemas/GeneralLedgerAccountType'
        Id:
          description: "The unique identifier of the account.\r\nThis identifier is\
            \ unique and assigned by PowerOffice Go when a new entity is created,\
            \ and should be provided when an entity should be edited."
          example: 476023749
          format: int64
          readOnly: true
          type: integer
        IsActive:
          description: "Value indicating whether this account is active.\r\nAccounts\
            \ that are not active will not be available for users in the journal entry\
            \ GUI."
          example: true
          nullable: true
          type: boolean
        IsDepartmentRequired:
          description: Value indicating whether department is a required property
            to set on transactions on this account.
          example: true
          nullable: true
          type: boolean
        IsProjectRequired:
          description: Value indicating whether project is a required property to
            set on transactions on this account.
          example: true
          nullable: true
          type: boolean
        IsVatCodeLocked:
          description: "Value indicating whether the account is locked to a VAT code.\
            \ If true, only VatCode can be used on transactions on this account."
          example: true
          nullable: true
          type: boolean
        LastChangedDateTimeOffset:
          description: The timestamp when the last change in settings for this account
            occurred.
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        Name:
          description: The name of the account.
          example: Kundefordringer
          nullable: true
          type: string
        Unit1:
          $ref: '#/components/schemas/UnitOfMeasureType'
        Unit2:
          $ref: '#/components/schemas/UnitOfMeasureType'
        VatCode:
          description: "The VAT code associated with the account.\r\nStandard codes\
            \ in Go is based on the SAF-T standard.\r\nCodes and any custom codes\
            \ can be queried and identified using the VatCode service."
          example: "33"
          nullable: true
          readOnly: true
          type: string
        VatCodeId:
          description: "The id of the VAT Code associated with the account.\r\nVatCode\
            \ or VatCodeId must be supplied when creating a general ledger account."
          format: int32
          nullable: true
          type: integer
        VatReturnSpecification:
          $ref: '#/components/schemas/VatReturnSpecification'
      type: object
    GeneralLedgerAccountType:
      description: "The type of the account<p>Members:</p><ul><li><i>Asset</i> - Represent\
        \ the different types of economic resources owned or controlled by business,\
        \ common examples of \n                Asset accounts are cash, cash in bank,\
        \ building, inventory, prepaid rent, goodwill, accounts receivable.</li><li><i>Liability</i>\
        \ - Represent the different types of economic obligations by a business, such\
        \ as accounts payable, bank loan, \n                bonds payable, accrued\
        \ interest.</li><li><i>Equity</i> - Represent the residual equity of a business\
        \ (after deducting from Assets all the liabilities) including Retained Earnings\
        \ and Appropriations.</li><li><i>Income</i> - (Revenue) Represent the company's\
        \ gross earnings and common examples include Sales, Service revenue and Interest\
        \ Income.</li><li><i>Expense</i> - Represent the company's expenditures to\
        \ enable itself to operate. Common examples are electricity and water,\n \
        \               rentals, depreciation, doubtful accounts, interest, insurance.</li></ul>"
      enum:
      - Asset
      - Liability
      - Equity
      - Income
      - Expense
      nullable: true
      type: string
    GeneralLedgerAccountPostDto:
      additionalProperties: false
      description: The General Ledger Account Post DTO contains only properties relevant
        to a general ledger account in Go that can be altered directly via POST-method
        in API.
      example:
        DepartmentCode: "110"
        IsVatCodeLocked: true
        AccountNo: 3000
        IsActive: true
        Unit1: BX
        VatReturnSpecification: None
        AgricultureDepartment: None
        Name: Kundefordringer
        Unit2: null
        CurrencyCode: USD
        VatCodeId: 0
        VatCode: "33"
        IsProjectRequired: true
        DepartmentId: 123456
        IsDepartmentRequired: true
      properties:
        AccountNo:
          description: The number of the account.
          example: 3000
          format: int64
          type: integer
        AgricultureDepartment:
          $ref: '#/components/schemas/AgricultureDepartment'
        CurrencyCode:
          description: The standard code of the currency associated with the account.
          example: USD
          nullable: true
          type: string
        DepartmentCode:
          description: The code of the department associated with the account.
          example: "110"
          nullable: true
          type: string
        DepartmentId:
          description: The id of the department associated with the account.
          example: 123456
          format: int64
          nullable: true
          type: integer
        IsActive:
          description: "Value indicating whether this account is active.\r\nAccounts\
            \ that are not active will not be available for users in the journal entry\
            \ GUI."
          example: true
          nullable: true
          type: boolean
        IsDepartmentRequired:
          description: Value indicating whether department is a required property
            to set on transactions on this account.
          example: true
          nullable: true
          type: boolean
        IsProjectRequired:
          description: Value indicating whether project is a required property to
            set on transactions on this account.
          example: true
          nullable: true
          type: boolean
        IsVatCodeLocked:
          description: "Value indicating whether the account is locked to a VAT code.\
            \ If true, only VatCode can be used on transactions on this account."
          example: true
          nullable: true
          type: boolean
        Name:
          description: The name of the account.
          example: Kundefordringer
          nullable: true
          type: string
        Unit1:
          $ref: '#/components/schemas/UnitOfMeasureType'
        Unit2:
          $ref: '#/components/schemas/UnitOfMeasureType'
        VatCode:
          description: "The VAT code associated with the account. VatCode or VatCodeId\
            \ must be supplied.\r\nStandard codes in Go is based on the SAF-T standard.\r\
            \nCodes and any custom codes can be queried and identified using the VatCode\
            \ service."
          example: "33"
          nullable: true
          type: string
        VatCodeId:
          description: "The id of the VAT Code associated with the account.\r\nVatCode\
            \ or VatCodeId must be supplied when creating a general ledger account."
          format: int32
          nullable: true
          type: integer
        VatReturnSpecification:
          $ref: '#/components/schemas/VatReturnSpecification'
      required:
      - AccountNo
      - IsActive
      - Name
      type: object
    JournalEntryVoucherListItem:
      additionalProperties: false
      description: Properties of journal entry vouchers list item.
      example:
        IsPosted: false
        Id: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        IsCreatedByCurrentIntegration: true
        OriginatedFromEhf: true
        CreatedDateTimeOffset: 2024-06-25T12:06:00.1234567Z
        InApprovalWorkflow: false
        LastChangedDateTimeOffset: 2024-07-09T13:03:00.1234567Z
        VoucherType: Unknown
      properties:
        CreatedDateTimeOffset:
          description: The timestamp of when the voucher object was created.
          example: 2024-06-25T12:06:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        Id:
          description: "A value that uniquely identifies this voucher.\r\nThe Id is\
            \ assigned by Go when the entry is created, and will persist when/if the\
            \ voucher is posted."
          example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
          format: uuid
          readOnly: true
          type: string
        InApprovalWorkflow:
          description: "Indicates whether the journal entry voucher is sent to approval\
            \ and is in the approval workflow.\r\nIf true, the voucher cannot be deleted."
          example: false
          readOnly: true
          type: boolean
        IsCreatedByCurrentIntegration:
          description: "Indicates whether the querying integration created the journal\
            \ entry voucher, in which case the value is true."
          example: true
          nullable: true
          readOnly: true
          type: boolean
        IsPosted:
          description: "Indicates whether the journal entry voucher is posted. If\
            \ true, the voucher is posted an cannot be deleted via api or edited by\
            \ a user in the GUI.\r\nIf false, the voucher is unposted.\r\nIf true,\
            \ the voucher cannot be deleted."
          example: false
          nullable: true
          readOnly: true
          type: boolean
        LastChangedDateTimeOffset:
          description: The timestamp of the last change of voucher.
          example: 2024-07-09T13:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        OriginatedFromEhf:
          description: "Indicates whether the journal entry voucher was received by\
            \ EHF. If true, the journal entry voucher have an EHF XML file."
          example: true
          nullable: true
          readOnly: true
          type: boolean
        VoucherType:
          $ref: '#/components/schemas/VoucherType'
      type: object
    SupplierBalanceDto:
      additionalProperties: false
      description: Represents a supplier balance.
      example:
        SupplierAccountNo: 10000
        SupplierId: 123456
        SupplierExternalNo: 10000
        SupplierName: Coca-Cola AS
        Balance: 502.25
      properties:
        Balance:
          description: "The current total balance of the supplier, as of the date\
            \ (inclusive) provided in the query."
          example: 502.25
          format: double
          readOnly: true
          type: number
        SupplierAccountNo:
          description: "The supplier account number for the related balance.\r\nSupplierAccountNo\
            \ will also represent the Supplier number.\r\nSuppliers can be queried\
            \ and identified using the Supplier service."
          example: 10000
          format: int64
          nullable: true
          readOnly: true
          type: integer
        SupplierExternalNo:
          description: "The external number of the supplier for the related balance,\
            \ if set on the Supplier entity.\r\nAn external number set on the supplier\
            \ is often used to reference the supplier number in the external system,\
            \ if the supplier numbers are not kept in 1:1 sync between Go and the\
            \ external system.\r\nThe field is available in the GUI with the name\
            \ External Code."
          example: 10000
          format: int64
          nullable: true
          readOnly: true
          type: integer
        SupplierId:
          description: "The identifier of the supplier this balance is related to.\r\
            \nSuppliers can be queried and identified using the Supplier service."
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        SupplierName:
          description: "The name of the supplier for the related balance.\r\nSuppliers\
            \ can be queried and identified using the Supplier service."
          example: Coca-Cola AS
          nullable: true
          readOnly: true
          type: string
      type: object
    PaymentTermPostDto:
      additionalProperties: false
      description: DTO for creating payment terms.
      example:
        IsDefault: true
        IsActive: true
        CreditDays: 14
        Name: 14 days
      properties:
        CreditDays:
          description: "The number of credit days for the payment term.\r\nThis define\
            \ the number of days from an invoice is sent until it is due paid, if\
            \ a sales order is invoiced using this payment term."
          example: 14
          format: int32
          nullable: true
          type: integer
        IsActive:
          description: Value indicating whether this payment term is active.
          example: true
          nullable: true
          type: boolean
        IsDefault:
          description: "A value indicating if this payment term is the standard payment\
            \ term set on the client.\r\nCustomers and sales orders will default inherit\
            \ the standard payment term from the client invoice settings."
          example: true
          nullable: true
          type: boolean
        Name:
          description: "The name of the payment term.\r\nMax length is 128 characters."
          example: 14 days
          maxLength: 128
          nullable: true
          type: string
      required:
      - CreditDays
      - Name
      type: object
    DeliveryTermDto:
      additionalProperties: false
      description: The delivery terms on the client
      example:
        IsDefault: false
        Id: 20002040203
        CreatedDateTimeOffset: 2023-05-08T08:03:00.1234567Z
        LastChangedDateTimeOffset: 2000-01-23T04:56:07.000+00:00
        Name: EXW
      properties:
        CreatedDateTimeOffset:
          description: The timestamp of the created date of the delivery term. UTC
            time.
          example: 2023-05-08T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        Id:
          description: "The identifier of the delivery term. This identifier is unique\
            \ and assigned by PowerOffice Go when a new entity is saved, and should\
            \ be provided when an entity should be edited or deleted (PATCH or DELETE)."
          example: 20002040203
          format: int64
          readOnly: true
          type: integer
        IsDefault:
          description: "A value indicating if this delivery term is the standard delivery\
            \ term set on the client.\r\nCustomers and sales orders will default inherit\
            \ the standard delivery term from the client invoice settings.\r\nDefaults\
            \ to false."
          example: false
          nullable: true
          type: boolean
        LastChangedDateTimeOffset:
          description: The timestamp of the last changed date of the delivery term.
            UTC time.
          format: date-time
          readOnly: true
          type: string
        Name:
          description: Gets or sets the name of the delivery term.
          example: EXW
          maxLength: 128
          nullable: true
          type: string
      type: object
    DeliveryTermPostDto:
      additionalProperties: false
      description: DTO for creating delivery terms.
      example:
        IsDefault: false
        Name: EXW
      properties:
        IsDefault:
          description: "A value indicating if this delivery term is the standard delivery\
            \ term set on the client.\r\nCustomers and sales orders will default inherit\
            \ the standard delivery term from the client invoice settings.\r\nDefaults\
            \ to false."
          example: false
          nullable: true
          type: boolean
        Name:
          description: Gets or sets the name of the delivery term.
          example: EXW
          maxLength: 128
          nullable: true
          type: string
      required:
      - Name
      type: object
    OutgoingInvoiceDto:
      additionalProperties: false
      description: Lightweight version of an (outgoing) invoice
      example:
        Dim2Id: 123456
        DeliveryDate: 2020-01-01
        DeliveryAddress2: Apartment 101
        DeliveryAddress1: Street Address 1
        SellersReferenceEmployeeId: 756319
        CurrencyCode: NOK
        VoucherDate: 2022-08-05
        ContractNo: 123-244A
        NetAmount: 1000.33
        IsCreatedByCurrentIntegration: true
        Cid: "9235400011927001"
        BrandingThemeId: 123456
        LocationCode: 4A
        SellersReferenceEmployeeNo: 1
        CurrencyExchangeRate: 9.2592
        CustomerId: 123456
        RelatedInvoiceNo: 12345
        CustomerReference: 123ABC
        CustomerReferenceContactPersonId: 43972
        DeliveryAddressZipCode: "1337"
        Id: ee373540-ca8d-4562-8fb6-6fb52de47722
        DeliveryTermId: 123456
        Balance: 502.25
        DeliveryAddressCountryCode: "NO"
        VoucherType: OutgoingInvoice
        DeliveryAddressCity: Oslo
        Dim3Id: 123456
        Dim1Code: dimcode111
        Dim1Id: 123456
        Dim2Code: dimcode222
        SentDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        ExternalImportReference: 123abc
        OrderNo: 6065
        InvoiceDeliveryType: PdfByEmail
        BalanceLastChangedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        CustomerNo: 10010
        DeliveryTerm: DAP
        PurchaseOrderReference: qwerty12345
        ImportedOrderNo: 23145
        NetPostedAmount: 1000.33
        ProjectCode: "100"
        CustomMatchingReference: 123ABC
        DueDate: 2022-08-05
        VoucherNo: 15545
        DepartmentCode: 1A
        PaymentTermId: 0
        LocationId: 123546
        ProjectId: 123456
        IsReversed: true
        InvoiceNo: 15798
        PaymentTerm: 14
        TotalAmount: 12500.33
        CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        OrderDate: 2022-08-05
        TotalPostedAmount: 12500.33
        Dim3Code: dimcode333
        MatchId: 123456
        BrandingThemeCode: "4"
        DepartmentId: 123456
        LastChangedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
      properties:
        Balance:
          description: "The balance of the customer ledger entry this invoice is related\
            \ to (remaining amount to be paid), in the client currency.\r\nIf balance\
            \ is less than totalPostedAmount,\r\nthe entry will have a match in the\
            \ customer ledger with at least one other entry with the opposite amount,\r\
            \nand those entries will share the same matchId.\r\nIf the balance is\
            \ zero, the invoice will have the status paid in the GUI."
          example: 502.25
          format: double
          nullable: true
          readOnly: true
          type: number
        BalanceLastChangedDateTimeOffset:
          description: "The timestamp of the last change of the balance property.\r\
            \nThis reflect the last changed timestamp of the customer ledger entry\
            \ this invoice relate to, and the match state of the sub-ledger entry.\r\
            \nUsing this property as filtering is one way of retrieving the payment\
            \ status of invoices."
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          nullable: true
          readOnly: true
          type: string
        BrandingThemeCode:
          description: "The code of the branding theme used on the invoice.\r\nAvailable\
            \ if the invoice was created and sent from Go.\r\nBranding themes can\
            \ be retrieved using the SalesSettings endpoint."
          example: "4"
          nullable: true
          readOnly: true
          type: string
        BrandingThemeId:
          description: "The id of the branding theme, if brandingThemeCode is set\
            \ on the invoice.\r\nBranding themes can be retrieved using the SalesSettings\
            \ endpoint."
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        Cid:
          description: "The cid number (norwegian: KID), if present."
          example: "9235400011927001"
          nullable: true
          readOnly: true
          type: string
        ContractNo:
          description: "The contract number, if set on the invoice."
          example: 123-244A
          nullable: true
          readOnly: true
          type: string
        CreatedDateTimeOffset:
          description: "The created timestamp of the invoice object.\r\nIf the invoice\
            \ was created and sent from Go, the created timestamp is the timestamp\
            \ the order (invoice draft) was first created.\r\nIf imported, the created\
            \ timestamp will represent the timestamp of the import."
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        CurrencyCode:
          description: "The standard currency code for the invoice.\r\nCurrencies\
            \ active on the client can be queried using the AccountingSettings service.\r\
            \nCurrency codes follow the ISO4217 standard.\r\nDefaults to NOK."
          example: NOK
          nullable: true
          readOnly: true
          type: string
        CurrencyExchangeRate:
          description: "The normalized currency exchange rate.\r\nAlways base 1."
          example: 9.2592
          format: double
          nullable: true
          readOnly: true
          type: number
        CustomMatchingReference:
          description: "The custom matching reference, if set.\r\nThis property will\
            \ only have value on entries created through the API or Import with CustomMatchingReference\
            \ specified.\r\nThis property is used for matching purposes in the customer\
            \ sub-ledger account, where entries posted with a CustomMatchingReference\
            \ will be matched immediately with existing entries in the sub-ledger\
            \ that have the same CustomMatchingReference and opposite amount (unless\
            \ existing entries are already matched out)."
          example: 123ABC
          nullable: true
          readOnly: true
          type: string
        CustomerId:
          description: "The identifier of the customer this invoice is related to.\r\
            \nCustomers can be queried and identified using the Customer service."
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        CustomerNo:
          description: "The customer number for the customer this invoice relates\
            \ to.\r\nCustomers can be queried and identified using the Customer service."
          example: 10010
          format: int64
          nullable: true
          readOnly: true
          type: integer
        CustomerReference:
          description: "The customer reference (ie buyers reference), if set.\r\n\
            This property is often used to give the receiver of the invoice a reference\
            \ they are familiar with.\r\nIf CustomerReferenceContactPersonId has value,\
            \ the name of the customers contact person is returned,\r\notherwise the\
            \ \"Your Reference\" text used on the invoice will be returned."
          example: 123ABC
          nullable: true
          readOnly: true
          type: string
        CustomerReferenceContactPersonId:
          description: "The customer reference contact person id (ie buyers reference).\r\
            \nThe default use of customer reference when invoicing from Go, is to\
            \ reference a customer contact person.\r\nIf this property is set, the\
            \ string property customerReference will have no value.\r\nContact persons\
            \ can be retrieved using the ContactPerson endpoint."
          example: 43972
          format: int64
          nullable: true
          readOnly: true
          type: integer
        DeliveryAddress1:
          description: "The delivery address primary line as it was set when the invoice\
            \ was delivered, if set and delivered from Go."
          example: Street Address 1
          nullable: true
          readOnly: true
          type: string
        DeliveryAddress2:
          description: "The delivery address secondary line as it was set when the\
            \ invoice was delivered, if set and delivered from Go."
          example: Apartment 101
          nullable: true
          readOnly: true
          type: string
        DeliveryAddressCity:
          description: "The delivery address city as it was set when the invoice was\
            \ delivered, if set and delivered from Go."
          example: Oslo
          nullable: true
          readOnly: true
          type: string
        DeliveryAddressCountryCode:
          description: "The delivery address country code as it was set when the invoice\
            \ was delivered, if set and delivered from Go.\r\nThe code is ISO 3166-1\
            \ alfa-2 country code (Two characters)"
          example: "NO"
          nullable: true
          readOnly: true
          type: string
        DeliveryAddressZipCode:
          description: "The delivery address zip code as it was set when the invoice\
            \ was delivered, if set and delivered from Go."
          example: "1337"
          nullable: true
          readOnly: true
          type: string
        DeliveryDate:
          description: The delivery date set on the invoice.
          example: 2020-01-01
          format: date
          nullable: true
          readOnly: true
          type: string
        DeliveryTerm:
          description: "The delivery term of the invoice.\r\nThe default set of delivery\
            \ terms provided in Go are incoterms, but any custom string can be set."
          example: DAP
          nullable: true
          readOnly: true
          type: string
        DeliveryTermId:
          description: The id of the delivery term of the invoice.
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        DepartmentCode:
          description: "The code of the department for the invoice, if set.\r\nNote\
            \ that this is the department set in the header of the invoice.\r\nThe\
            \ invoice lines might specify other departments or no department.\r\n\
            Departments can be queried and identified using the Department service."
          example: 1A
          nullable: true
          readOnly: true
          type: string
        DepartmentId:
          description: "The id of the department, if departmentCode is set on the\
            \ invoice.\r\nDepartments can be queried and identified using the Department\
            \ service."
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        Dim1Code:
          description: "The code of the dimension 1 associated with the invoice, if\
            \ set.\r\nNote that this is the dimension 1 set in the header of the invoice.\r\
            \nThe invoice lines might specify other dimension 1 values or no dimension\
            \ 1.\r\nDimension 1-3 are customizable dimensions that can be defined\
            \ and queried using the CustomDimension and CustomDimensionValue services."
          example: dimcode111
          nullable: true
          readOnly: true
          type: string
        Dim1Id:
          description: "The id of the dimension 1 associated with the invoice, if\
            \ dim1Code is set."
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        Dim2Code:
          description: "The code of the dimension 2 associated with the invoice.\r\
            \nNote that this is the dimension 2 set in the header of the invoice.\r\
            \nThe invoice lines might specify other dimension 2 values or no dimension\
            \ 2.\r\nDimension 1-3 are customizable dimensions that can be defined\
            \ and queried using the CustomDimension and CustomDimensionValue services."
          example: dimcode222
          nullable: true
          readOnly: true
          type: string
        Dim2Id:
          description: "The id of the dimension 2 associated with the invoice, if\
            \ dim2Code is set."
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        Dim3Code:
          description: "The code of the dimension 3 associated with the invoice.\r\
            \nNote that this is the dimension 3 set in the header of the invoice.\r\
            \nThe invoice lines might specify other dimension 3 values or no dimension\
            \ 3.\r\nDimension 1-3 are customizable dimensions that can be defined\
            \ and queried using the CustomDimension and CustomDimensionValue services."
          example: dimcode333
          nullable: true
          readOnly: true
          type: string
        Dim3Id:
          description: "The id of the dimension 3 associated with the invoice, if\
            \ dim3Code is set."
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        DueDate:
          description: The due date of the invoice.
          example: 2022-08-05
          format: date
          nullable: true
          readOnly: true
          type: string
        ExternalImportReference:
          description: "The ExternalImportReference, if set.\r\nThis property can\
            \ be set by integrations posting vouchers to Go or creating invoice drafts,\
            \ in order to reference the external system and ensure a duplicate check\
            \ (only one instance of the reference can exist for the object type).\r\
            \nCan be used to correlate/duplicate check transactions."
          example: 123abc
          nullable: true
          readOnly: true
          type: string
        Id:
          description: "The identifier of the invoice and the posted voucher.\r\n\
            The id is assigned by Go when the voucher is created, and is shared by\
            \ all transactions within the same voucher.\r\nIf the invoice was first\
            \ created in Go as a draft, the id is consistent from the outgoinginvoice\
            \ draft, the sent invoice and the posted invoice voucher."
          example: ee373540-ca8d-4562-8fb6-6fb52de47722
          format: uuid
          readOnly: true
          type: string
        ImportedOrderNo:
          description: "The imported order number.\r\nCan only be set on invoice drafts\
            \ created using the api or import, and on vouchers posted directly using\
            \ the api or an import.\r\nCan be used to reference the order number in\
            \ the external system."
          example: 23145
          format: int64
          nullable: true
          readOnly: true
          type: integer
        InvoiceDeliveryType:
          $ref: '#/components/schemas/InvoiceDeliveryType'
        InvoiceNo:
          description: The invoice number of the invoice.
          example: 15798
          format: int64
          nullable: true
          readOnly: true
          type: integer
        IsCreatedByCurrentIntegration:
          description: "A value indicating whether the invoice is created by the integration\
            \ currently communicating with the API.\r\nWill be true for all entries\
            \ that are created by the same integration user (same Application Key)\
            \ as the integration currently authenticated.\r\nCan be used in filtering\
            \ if only the current integration's entries are relevant to report.\r\n\
            Note that invoices are considered created by an integration only if they\
            \ are posted with the OutgoingInvoiceVoucher endpoint, or if the invoice\
            \ was sent using the SalesOrders endpoint. If a sales order draft was\
            \ posted/sent by a user in the GUI, it will be the user that posted/sent\
            \ it that created the outgoing invoice."
          example: true
          nullable: true
          readOnly: true
          type: boolean
        IsReversed:
          description: "A value indicating whether this invoice voucher have been\
            \ reversed.\r\nIf true, the invoice voucher have been reversed with a\
            \ reversal voucher (nullifying the invoice voucher), and the invoice number\
            \ can be reused.\r\nOnly possible to reverse an invoice voucher using\
            \ the OutgoingInvoiceVoucher api, and only by the integration that created\
            \ the invoice voucher originally using this api."
          example: true
          readOnly: true
          type: boolean
        LastChangedDateTimeOffset:
          description: "The timestamp of the last change of the invoice.\r\nOn sent\
            \ invoices, no direct invoice information or related account transactions\
            \ can change, but last changed will trigger when the invoice is due, and\
            \ when (if applicable) the next reminder stages for the invoice is triggered\
            \ in the system."
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        LocationCode:
          description: "The code of the location dimension associated with the invoice.\r\
            \nNote that this is the location set in the header of the invoice. The\
            \ invoice lines might specify other location values or no location."
          example: 4A
          nullable: true
          readOnly: true
          type: string
        LocationId:
          description: The id of the location dimension associated with the invoice.
          example: 123546
          format: int64
          nullable: true
          readOnly: true
          type: integer
        MatchId:
          description: "The match id of the customer ledger entry this invoice relate\
            \ to, if present.\r\nAvailable if the invoice have a match with other\
            \ customer ledger entries - typically payment transactions.\r\nCan be\
            \ used with the CustomerLedger endpoint to retrieve the matched transactions."
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        NetAmount:
          description: "The net amount of the invoice (vat exclusive).\r\nThis amount\
            \ is presented in the currency used on the invoice (the currency given\
            \ by the currencyCode)."
          example: 1000.33
          format: double
          readOnly: true
          type: number
        NetPostedAmount:
          description: "The net posted amount of the invoice (vat exclusive).\r\n\
            This amount is always presented in the client currency (NOK).\r\nWill\
            \ correspond with the netAmount and the normalized currencyExchangeRate."
          example: 1000.33
          format: double
          readOnly: true
          type: number
        OrderDate:
          description: "The order date of the invoice.\r\nOrderDate will default to\
            \ the createdDate, but can be controlled and set in imports creating invoice\
            \ drafts."
          example: 2022-08-05
          format: date
          nullable: true
          readOnly: true
          type: string
        OrderNo:
          description: "The order number of the invoice.\r\nOnly present if the invoice\
            \ originated from an invoice draft created in Go.\r\nFor invoice drafts\
            \ created in Go, this value is autogenerated."
          example: 6065
          format: int64
          nullable: true
          readOnly: true
          type: integer
        PaymentTerm:
          description: "The payment term of the invoice.\r\nThis is the number of\
            \ days after an invoice is sent until it is due (days between the voucher\
            \ date and the due date)."
          example: 14
          format: int32
          nullable: true
          readOnly: true
          type: integer
        PaymentTermId:
          description: The id of the payment term of the invoice.
          format: int64
          nullable: true
          readOnly: true
          type: integer
        ProjectCode:
          description: "The project code, if set on the invoice.\r\nNote that this\
            \ is the project set in the header of the invoice.\r\nThe invoice lines\
            \ might specify other projects or no project.\r\nProjects can be queried\
            \ and identified using the Project service."
          example: "100"
          nullable: true
          readOnly: true
          type: string
        ProjectId:
          description: "The project id, if projectCode is set.\r\nProjects can be\
            \ queried and identified using the Project service."
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        PurchaseOrderReference:
          description: "The purchase order reference, if set.\r\nThe property can\
            \ be used to reference purchase order places by the customer."
          example: qwerty12345
          nullable: true
          readOnly: true
          type: string
        RelatedInvoiceNo:
          description: "The related invoice number.\r\nCan be available on credit\
            \ notes, if the credit note is created and sent from Go.\r\nIf available,\
            \ this property will reference the original invoice being credited."
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        SellersReferenceEmployeeId:
          description: "The id of the employee set as the seller reference, if SellerReferenceEmployeeNo\
            \ is set on the invoice."
          example: 756319
          format: int64
          nullable: true
          readOnly: true
          type: integer
        SellersReferenceEmployeeNo:
          description: "The employee number of the reference to the seller, if set.\r\
            \nWhen a user view the invoice information in GUI, this property is referred\
            \ to as our reference."
          example: 1
          format: int64
          nullable: true
          readOnly: true
          type: integer
        SentDateTimeOffset:
          description: "The timestamp of when the invoice was sent from Go.\r\nAvailable\
            \ only for invoice created and sent from Go.\r\nBlank if the invoice was\
            \ posted to Go using an import."
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          nullable: true
          readOnly: true
          type: string
        TotalAmount:
          description: "The total amount of the invoice (vat inclusive).\r\nThis amount\
            \ is presented in the currency used on the invoice (the currency given\
            \ by the currencyCode)."
          example: 12500.33
          format: double
          readOnly: true
          type: number
        TotalPostedAmount:
          description: "The total posted amount of the invoice (vat inclusive).\r\n\
            This amount is always presented in the client currency (NOK).\r\nWill\
            \ correspond with the totalAmount and the normalized currencyExchangeRate."
          example: 12500.33
          format: double
          readOnly: true
          type: number
        VoucherDate:
          description: "The date of the invoice voucher.\r\nThis represents the date\
            \ of the voucher and the document date of the invoice."
          example: 2022-08-05
          format: date
          readOnly: true
          type: string
        VoucherNo:
          description: "The voucher number of the invoice voucher.\r\nThis is the\
            \ voucher number assigned by Go when the voucher was posted.\r\nVoucher\
            \ numbers are assigned by Go in sequence.\r\nAlways present on invoices."
          example: 15545
          format: int64
          readOnly: true
          type: integer
        VoucherType:
          $ref: '#/components/schemas/OutgoingInvoiceVoucherType'
      type: object
    OutgoingInvoiceVoucherType:
      description: Enum defining what kind of voucher the (outgoing) voucher is<p>Members:</p><ul><li><i>OutgoingInvoice</i>
        - Outgoing invoice sent from the client to a customer.</li><li><i>OutgoingCreditNote</i>
        - Outgoing credit note sent from the client to a customer.</li></ul>
      enum:
      - OutgoingInvoice
      - OutgoingCreditNote
      nullable: true
      type: string
    SupplierLedgerEntryDto:
      additionalProperties: false
      description: Represents a supplier ledger entry.
      example:
        IsWriteOff: true
        SupplierExternalNo: 12345
        Dim3Id: 123456
        Dim2Id: 123456
        Dim1Code: dimcode111
        Dim1Id: 123456
        Dim2Code: dimcode222
        ExternalImportReference: 123abc
        CurrencyCode: USD
        VoucherDate: 2020-07-25
        ProjectCode: "100"
        CustomMatchingReference: 123-abc
        DueDate: 2021-09-28
        IsCreatedByCurrentIntegration: true
        VoucherNo: 15545
        Cid: "9235400011927001"
        DepartmentCode: "110"
        SupplierAccountNo: 20000
        Amount: 99
        LocationCode: L1337
        LocationId: 12345
        ProjectId: 123456
        InvoiceNo: "15545"
        CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        CurrencyAmount: 8.5212
        SupplierId: 123456
        Dim3Code: dimcode333
        PostingDate: 2021-09-28
        SupplierName: Coca-Cola AS
        MatchId: 123456
        VoucherId: ee373540-ca8d-4562-8fb6-6fb52de47722
        DepartmentId: 123456
        Id: 476023749
        Balance: 502.25
        CreatedFromImportJournalId: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        LastChangedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        VoucherType: Unknown
      properties:
        Amount:
          description: "The posted amount of the entry. Amount is always presented\
            \ in the client currency.\r\nAlways present on transactions."
          example: 99
          format: double
          readOnly: true
          type: number
        Balance:
          description: "The balance of the entry (remaining amount to be paid), in\
            \ the client currency on the date (openItems) / toDate (statement).\r\n\
            If balance is less than amount, the entry will have a match with at least\
            \ one other entry with the opposite amount, and those entries will share\
            \ the same matchId."
          example: 502.25
          format: double
          readOnly: true
          type: number
        Cid:
          description: "The cid number (norwegian: KID), if present.\r\nEntries with\
            \ the opposite amounts and the same cid will be matched on the sub-ledger\
            \ account, if the client use cid and the items are not already matched\
            \ out."
          example: "9235400011927001"
          nullable: true
          readOnly: true
          type: string
        CreatedDateTimeOffset:
          description: "The created timestamp.\r\nThis is the timestamp the transaction\
            \ was created, and may differ from the timestamp of accounting effect\
            \ for the transaction (ie the property PostingDate).\r\nAlways present\
            \ on transactions."
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        CreatedFromImportJournalId:
          description: "The created from import journal identifier, if present.\r\n\
            Provided if this account transaction has been created in Go by an import."
          example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
          format: uuid
          nullable: true
          readOnly: true
          type: string
        CurrencyAmount:
          description: The currency amount. Differs from Amount if the transaction
            was posted with a currency other than the client currency.
          example: 8.5212
          format: double
          readOnly: true
          type: number
        CurrencyCode:
          description: The currency code. Currencies active on the client can be queried
            using the AccountingSettings service. Currency codes follow the ISO4217
            standard.
          example: USD
          nullable: true
          readOnly: true
          type: string
        CustomMatchingReference:
          description: "The custom matching reference set on the transaction. This\
            \ property will only have value on entries created through the API or\
            \ Import with CustomMatchingReference specified.\r\nThis property is used\
            \ for matching purposes, where entries posted with a CustomMatchingReference\
            \ will be matched immediately with existing entries in the sub-ledger\
            \ that have the same CustomMatchingReference and opposite amount (unless\
            \ existing entries are already matched out)."
          example: 123-abc
          nullable: true
          readOnly: true
          type: string
        DepartmentCode:
          description: "The department code. Available if the transaction was posted\
            \ with department.\r\nDepartments can be queried and identified using\
            \ the Department service."
          example: "110"
          nullable: true
          readOnly: true
          type: string
        DepartmentId:
          description: "The department id. Available if the transaction was posted\
            \ with department.\r\nDepartments can be queried and identified using\
            \ the Department service."
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        Dim1Code:
          description: "The code of the dimension 1 associated with the entry.\r\n\
            Dimension 1-3 are customizable dimensions that can be defined and queried\
            \ using the CustomDimension- and CustomDimensionValue-services."
          example: dimcode111
          nullable: true
          readOnly: true
          type: string
        Dim1Id:
          description: The id of the dimension 1 associated with the account transaction.
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        Dim2Code:
          description: "The code of the dimension 2 associated with the account transaction.\r\
            \nDimension 1-3 are customizable dimensions that can be defined and queried\
            \ using the CustomDimension- and CustomDimensionValue-services."
          example: dimcode222
          nullable: true
          readOnly: true
          type: string
        Dim2Id:
          description: The id of the dimension 2 associated with the account transaction.
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        Dim3Code:
          description: "The code of the dimension 3 associated with the account transaction.\r\
            \nDimension 1-3 are customizable dimensions that can be defined and queried\
            \ using the CustomDimension- and CustomDimensionValue-services."
          example: dimcode333
          nullable: true
          readOnly: true
          type: string
        Dim3Id:
          description: The id of the dimension 3 associated with the account transaction.
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        DueDate:
          description: The due date of the entry. Relevant only for voucher types
            IncomingInvoice and IncomingCreditNote. The date represent when the amount
            is due to be paid to the supplier.
          example: 2021-09-28
          format: date
          nullable: true
          type: string
        ExternalImportReference:
          description: "The ExternalImportReference, if set.\r\nThis property can\
            \ be set by integrations posting vouchers in Go, in order to reference\
            \ the external system and ensure a duplicate check when posting the voucher\
            \ to Go (only one instance of the reference can exist).\r\nCan be used\
            \ to correlate/duplicate check transaction."
          example: 123abc
          nullable: true
          readOnly: true
          type: string
        Id:
          description: "A value that uniquely identifies this (ledger) entry. The\
            \ Id is assigned by Go when the transactions is posted in Go.\r\nAlways\
            \ present on transactions."
          example: 476023749
          format: int64
          readOnly: true
          type: integer
        InvoiceNo:
          description: "The invoice number, if the entry is an entry with the voucher\
            \ type IncomingInvoice or IncomingCreditNote.\r\nBe aware that the invoiceNo\
            \ is a string, so it's not necessarily a number."
          example: "15545"
          nullable: true
          readOnly: true
          type: string
        IsCreatedByCurrentIntegration:
          description: "A value indicating whether this ledger entry is created by\
            \ the integration currently communicating with the API.\r\nWill be true\
            \ for all entries that are created by the same integration user (same\
            \ Application Key) as the integration currently authorized.\r\nCan be\
            \ used in filtering if only the current integration's entries are relevant\
            \ to report (in simplified queries of payment status of invoices, for\
            \ instance)."
          example: true
          nullable: true
          readOnly: true
          type: boolean
        IsWriteOff:
          description: "A value indicating whether this entry was created by the write\
            \ off functionality in Go.\r\nSuch entries are not payments, but an accounting\
            \ routine writing off an open item."
          example: true
          nullable: true
          readOnly: true
          type: boolean
        LastChangedDateTimeOffset:
          description: "The timestamp of the last change of this entry.\r\nThe accounting\
            \ entry in itself cannot change, but the match state of the sub-ledger\
            \ entry might change.\r\nUsing last changed filtering is one way of retrieving\
            \ new matched items and as such the payment status of invoices."
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        LocationCode:
          description: "The code of the location dimension associated with the entry,\
            \ if set."
          example: L1337
          nullable: true
          readOnly: true
          type: string
        LocationId:
          description: "The id of the location dimension associated with the entry,\
            \ if location code is set."
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        MatchId:
          description: "The match identifier on the entry, if it is matched with one\
            \ or more other entries. All sub-ledger entries that are matched together\
            \ share the same matchId."
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        PostingDate:
          description: "The posting date.\r\nThis is the date of effect in the accounting\
            \ system for the Amount and CurrencyAmount (also the currency conversion\
            \ date used by Go if the currency rate was not set explicit when posted).\r\
            \nAlways present on transactions."
          example: 2021-09-28
          format: date
          readOnly: true
          type: string
        ProjectCode:
          description: "The project code. Available if the transaction was posted\
            \ with project.\r\nProjects can be queried and identified using the Project\
            \ service."
          example: "100"
          nullable: true
          readOnly: true
          type: string
        ProjectId:
          description: "The project id. Available if the transaction was posted with\
            \ project.\r\nProjects can be queried and identified using the Project\
            \ service."
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        SupplierAccountNo:
          description: "The supplier account number this sub-ledger entry is posted\
            \ on.\r\nSupplierAccountNo will also represent the Supplier number.\r\n\
            Suppliers can be queried and identified using the Supplier service."
          example: 20000
          format: int64
          nullable: true
          readOnly: true
          type: integer
        SupplierExternalNo:
          description: "The external number of the supplier of this sub-ledger entry.\r\
            \nAn external number set on the supplier is often used to reference the\
            \ supplier number in the external system, if the supplier numbers are\
            \ not kept in 1:1 sync between Go and the external system.\r\nThe field\
            \ is available in the GUI with the name External Code.\r\nSuppliers can\
            \ be queried and identified using the Supplier service."
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        SupplierId:
          description: "The id of the supplier of this sub-ledger entry.\r\nSuppliers\
            \ can be queried and identified using the Supplier service."
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        SupplierName:
          description: "The name of the supplier of this sub-ledger entry.\r\nSuppliers\
            \ can be queried and identified using the Supplier service."
          example: Coca-Cola AS
          nullable: true
          readOnly: true
          type: string
        VoucherDate:
          description: "The date of the voucher.\r\nThis represents the date of the\
            \ voucher, the document date of an invoice for instance,\r\nand may differ\
            \ from the transaction dates for the voucher.\r\nAlways present on transactions."
          example: 2020-07-25
          format: date
          readOnly: true
          type: string
        VoucherId:
          description: "The voucher identifier.\r\nThe Id is assigned by Go when the\
            \ voucher is created, and is shared by all transactions within the same\
            \ voucher.\r\nAlways present on transactions."
          example: ee373540-ca8d-4562-8fb6-6fb52de47722
          format: uuid
          readOnly: true
          type: string
        VoucherNo:
          description: "The voucher number.\r\nThis is the voucher number assigned\
            \ by Go when the voucher was posted.\r\nVoucher numbers are assigned by\
            \ Go in sequence.\r\nAlways present on transactions."
          example: 15545
          format: int64
          readOnly: true
          type: integer
        VoucherType:
          $ref: '#/components/schemas/VoucherType'
      type: object
    ClientBankAccountPostDto:
      additionalProperties: false
      description: Properties for creating a client bank account
      example:
        BankName: DNB
        CurrencyCode: NOK
        GeneralLedgerAccountId: 123456
        BicSwift: DNBANOKK
        OverdraftLimit: 12500
        IsActive: false
        AllowOverdraft: true
        IsClientTrustAccount: false
        CountryCode: "NO"
        BankAccountNumber: "12345678903"
      properties:
        AllowOverdraft:
          description: "A value indicating whether this bank account can be overdrawn\
            \ (Norwegian: Kassekreditt)."
          example: true
          nullable: true
          type: boolean
        BankAccountNumber:
          description: The bank account number.
          example: "12345678903"
          maxLength: 50
          minLength: 1
          type: string
        BankName:
          description: The name of the bank.
          example: DNB
          maxLength: 400
          nullable: true
          type: string
        BicSwift:
          description: The BIC Swift code of the bank.
          example: DNBANOKK
          maxLength: 50
          minLength: 1
          type: string
        CountryCode:
          description: The ISO 3166-1 alfa-2 country code (two characters).
          example: "NO"
          maxLength: 2
          minLength: 2
          type: string
        CurrencyCode:
          description: The standard code of the currency associated with the client
            bank account.
          example: NOK
          nullable: true
          type: string
        GeneralLedgerAccountId:
          description: The identifier of the general ledger account this bank account
            is associated with.
          example: 123456
          format: int64
          type: integer
        IsActive:
          description: A value indicating whether this bank account is active. Inactive
            bank accounts disable the usage of that bank account in the GUI.
          example: false
          nullable: true
          type: boolean
        IsClientTrustAccount:
          description: "A value indicating whether this is a bank account containing\
            \ client trust funds (example use cases: real estate brokers, lawyers)."
          example: false
          nullable: true
          type: boolean
        OverdraftLimit:
          description: "The overdraft limit for the bank account, if set. Available\
            \ only for bank accounts with overdraft enabled."
          example: 12500
          format: double
          nullable: true
          type: number
      required:
      - BankAccountNumber
      - BicSwift
      - CountryCode
      - CurrencyCode
      - GeneralLedgerAccountId
      type: object
    LocationDto:
      additionalProperties: false
      description: DTO for Location.
      example:
        IsActive: false
        Id: 12345
        Code: "10"
        CreatedDateTimeOffset: 2023-04-14T12:20:00.1234567Z
        LastChangedDateTimeOffset: 2023-04-14T12:21:00.1234567Z
        Name: Vestbyen
      properties:
        Code:
          description: The code of the location.
          example: "10"
          nullable: true
          type: string
        CreatedDateTimeOffset:
          description: The timestamp of the created date of the location.
          example: 2023-04-14T12:20:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        Id:
          description: "The identifier of the location. This identifier is unique\
            \ and assigned by PowerOffice Go when a new entity is saved, and should\
            \ be provided when an entity should be edited or deleted (PATCH or DELETE)."
          example: 12345
          format: int64
          readOnly: true
          type: integer
        IsActive:
          description: A value indicating whether this instance is active. Inactive
            locations disable the usage of that locations in the GUI. Defaults to
            false.
          example: false
          nullable: true
          type: boolean
        LastChangedDateTimeOffset:
          description: The timestamp of the last change of the location.
          example: 2023-04-14T12:21:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        Name:
          description: The name of the location
          example: Vestbyen
          nullable: true
          type: string
      type: object
    LocationPostDto:
      additionalProperties: false
      description: DTO for creating location.
      example:
        IsActive: false
        Code: "10"
        Name: Vestbyen
      properties:
        Code:
          description: The code of the location.
          example: "10"
          nullable: true
          type: string
        IsActive:
          description: A value indicating whether this instance is active. Inactive
            locations disable the usage of that locations in the GUI. Defaults to
            false.
          example: false
          nullable: true
          type: boolean
        Name:
          description: The name of the location
          example: Vestbyen
          nullable: true
          type: string
      required:
      - Name
      type: object
    OutgoingInvoiceVoucherDto:
      additionalProperties: false
      description: properties available when posting an outgoing invoice voucher
      example:
        DeliveryAddressCity: Oslo
        Description: Something credit note related
        SaftSourceId: System_123
        Dim3Id: 12345
        Dim2Id: 12345
        Dim1Id: 12345
        ExternalImportReference: 123abc
        DeliveryDate: 2020-07-25
        DeliveryAddress2: Apartment 101
        DeliveryAddress1: Street Address 1
        CurrencyCode: USD
        VoucherDate: 2020-07-25
        ContractNo: 123-ABC
        PurchaseOrderReference: PO-1337
        CustomerAccountId: 12345
        ImportedOrderNo: 23145
        CustomMatchingReference: 123ABC
        DueDate: 2027-09-28
        VoucherNo: 123456
        Cid: "9235400011927001"
        ImportedVoucherNo: 23145
        SalesPersonEmployeeId: 123456
        LocationId: 12345
        OutgoingInvoiceLines:
        - Accrual:
            BalanceAccountNo: 2970
            IsActive: true
            BalanceAccountAgricultureDepartment: None
            FromDate: 2023-01-01
            ToDate: 2023-12-31
            BalanceAccountId: 123456
          AccountId: 12345
          Description: Hello accounting world
          Dim3Id: 12345
          Dim2Id: 12345
          Dim1Id: 12345
          UnitOfMeasureType: BX
          LocationId: 12345
          ProjectId: 12345
          Quantity: 123.45
          ProductId: 12345
          VatReturnSpecification: None
          VatId: 12345
          CurrencyAmount: 99
          QuantityOrdered: 123.45
          DepartmentId: 12345
        - Accrual:
            BalanceAccountNo: 2970
            IsActive: true
            BalanceAccountAgricultureDepartment: None
            FromDate: 2023-01-01
            ToDate: 2023-12-31
            BalanceAccountId: 123456
          AccountId: 12345
          Description: Hello accounting world
          Dim3Id: 12345
          Dim2Id: 12345
          Dim1Id: 12345
          UnitOfMeasureType: BX
          LocationId: 12345
          ProjectId: 12345
          Quantity: 123.45
          ProductId: 12345
          VatReturnSpecification: None
          VatId: 12345
          CurrencyAmount: 99
          QuantityOrdered: 123.45
          DepartmentId: 12345
        ProjectId: 123456
        IsReversed: false
        CurrencyExchangeRate: 1.23
        InvoiceNo: "12345"
        CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        CurrencyAmount: 99
        CustomerReference: 123ABC
        DeliveryAddressZipCode: "1337"
        DepartmentId: 12345
        Id: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        DeliveryTermId: 12345
        DeliveryAddressCountryCode: "NO"
      properties:
        Cid:
          description: "The cid number (norwegian: KID), if applicable to the outgoing\
            \ invoice voucher."
          example: "9235400011927001"
          maxLength: 25
          minLength: 0
          nullable: true
          type: string
        ContractNo:
          description: "The contract number reference of the outgoing invoice, if\
            \ applicable."
          example: 123-ABC
          nullable: true
          type: string
        CreatedDateTimeOffset:
          description: The timestamp of when the voucher object was created..
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        CurrencyAmount:
          description: "The total amount of the outgoing voucher, in the currency\
            \ specified by the currency code of the voucher."
          example: 99
          format: double
          type: number
        CurrencyCode:
          description: The currency code of the outgoing invoice.
          example: USD
          nullable: true
          type: string
        CurrencyExchangeRate:
          description: The normalized currency exchange rate.
          example: 1.23
          format: double
          nullable: true
          type: number
        CustomMatchingReference:
          description: The custom matching reference of the customer sub-ledger transaction.
          example: 123ABC
          nullable: true
          type: string
        CustomerAccountId:
          description: The id of the customer sub-ledger account.
          example: 12345
          format: int64
          nullable: true
          type: integer
        CustomerReference:
          description: The customer reference (i.e. buyers reference) of the outgoing
            invoice.
          example: 123ABC
          nullable: true
          type: string
        DeliveryAddress1:
          description: The primary delivery address as it was set when the invoice
            was delivered.
          example: Street Address 1
          nullable: true
          type: string
        DeliveryAddress2:
          description: The secondary delivery address as it was set when the invoice
            was delivered.
          example: Apartment 101
          nullable: true
          type: string
        DeliveryAddressCity:
          description: The delivery address city as it was set when the invoice was
            delivered.
          example: Oslo
          nullable: true
          type: string
        DeliveryAddressCountryCode:
          description: The delivery address country code as it was set when the invoice
            was delivered.
          example: "NO"
          nullable: true
          type: string
        DeliveryAddressZipCode:
          description: The delivery address zip code as it was set when the invoice
            was delivered.
          example: "1337"
          nullable: true
          type: string
        DeliveryDate:
          description: The delivery date of the goods/services sold.
          example: 2020-07-25
          format: date
          nullable: true
          type: string
        DeliveryTermId:
          description: The id of the delivery term associated with the outgoing credit
            note.
          example: 12345
          format: int64
          nullable: true
          type: integer
        DepartmentId:
          description: The department Id of the voucher header and the customer sub-ledger
            transaction. Departments can be queried and identified using the Department
            service.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Description:
          description: The description of the customer sub-ledger transaction.
          example: Something credit note related
          nullable: true
          type: string
        Dim1Id:
          description: The id of the dimension 1 associated with the voucher header
            and the customer sub-ledger transaction.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim2Id:
          description: The id of the dimension 2 associated with the voucher header
            and the customer sub-ledger transaction.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim3Id:
          description: The id of the dimension 3 associated with the voucher header
            and the customer sub-ledger transaction.
          example: 12345
          format: int64
          nullable: true
          type: integer
        DueDate:
          description: The due date of the outgoing invoice.
          example: 2027-09-28
          format: date
          nullable: true
          type: string
        ExternalImportReference:
          description: "The external import reference associated with the voucher.\r\
            \nThis property can be set by integrations creating vouchers, in order\
            \ to reference the external system and ensure\r\na duplicate check (only\
            \ one instance of the reference can exist on the client). Can be used\
            \ to correlate/duplicate\r\ncheck transactions. Guid's are recommended,\
            \ or other unique references. This property is only available using\r\n\
            the api (not visible in the user interface)"
          example: 123abc
          nullable: true
          type: string
        Id:
          description: A value that uniquely identifies this voucher. The Id is assigned
            by PowerOffice when the entry is created
          example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
          format: uuid
          readOnly: true
          type: string
        ImportedOrderNo:
          description: "The imported order number. Can be used to reference the order\
            \ number in the external system. The imported order\r\nnumber is visible\
            \ on the invoice reports in the PowerOffice GUI."
          example: 23145
          format: int64
          nullable: true
          type: integer
        ImportedVoucherNo:
          description: "The external voucher number. Can be used to reference the\
            \ voucher number in the external system.\r\nThe external voucher number\
            \ is visible in PowerOffice in various reports."
          example: 23145
          format: int64
          nullable: true
          type: integer
        InvoiceNo:
          description: The invoice number of the outgoing invoice (invoice to a customer).
            Required property and must be unique for the client.
          example: "12345"
          nullable: true
          type: string
        IsReversed:
          description: "Value indicating whether this voucher has been reversed. If\
            \ an outgoing invoice voucher is reversed, the\r\ninvoiceNo and externalImportReference\
            \ properties can be reused on a new voucher"
          example: false
          nullable: true
          type: boolean
        LocationId:
          description: The id of the location dimension associated with the voucher
            header and the customer sub-ledger transaction.
          example: 12345
          format: int64
          nullable: true
          type: integer
        OutgoingInvoiceLines:
          description: outgoing invoice voucher lines
          items:
            $ref: '#/components/schemas/OutgoingInvoiceVoucherLineDto'
          nullable: true
          type: array
        ProjectId:
          description: The id of the project associated with the voucher header and
            the customer sub-ledger.
          example: 123456
          format: int64
          nullable: true
          type: integer
        PurchaseOrderReference:
          description: The purchase order reference. The property can be used to reference
            purchase orders placed by the customer.
          example: PO-1337
          nullable: true
          type: string
        SaftSourceId:
          description: "The SAF-T source id. This is the ID of the system that generated\
            \ the voucher. When this voucher is exported to\r\nSAF-T, this property\
            \ is mapped on the transactions SourceID in the SAF-T file. If the creating\
            \ system is\r\nrequired to export its own SAF-T file, this source id should\
            \ correspond with the SystemID in the SAF-T file of\r\nthe external system\
            \ to ensure an audit trail. Max length is 35 characters."
          example: System_123
          nullable: true
          type: string
        SalesPersonEmployeeId:
          description: The (employee) id of the sales person associated with the outgoing
            credit note.
          example: 123456
          format: int64
          nullable: true
          type: integer
        VoucherDate:
          description: "The voucher date. This represents the date of the voucher,\
            \ the posting date and the document date of the\r\noutgoing invoice (invoice\
            \ date)."
          example: 2020-07-25
          format: date
          type: string
        VoucherNo:
          description: "The voucher number. This is the voucher number assigned by\
            \ PowerOffice when the voucher was posted. Voucher\r\nnumbers are assigned\
            \ in sequence."
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
      type: object
    OutgoingInvoiceVoucherLineDto:
      additionalProperties: false
      description: properties available in an outgoing invoice voucher line
      example:
        Accrual:
          BalanceAccountNo: 2970
          IsActive: true
          BalanceAccountAgricultureDepartment: None
          FromDate: 2023-01-01
          ToDate: 2023-12-31
          BalanceAccountId: 123456
        AccountId: 12345
        Description: Hello accounting world
        Dim3Id: 12345
        Dim2Id: 12345
        Dim1Id: 12345
        UnitOfMeasureType: BX
        LocationId: 12345
        ProjectId: 12345
        Quantity: 123.45
        ProductId: 12345
        VatReturnSpecification: None
        VatId: 12345
        CurrencyAmount: 99
        QuantityOrdered: 123.45
        DepartmentId: 12345
      properties:
        AccountId:
          description: The id of the general ledger account for the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Accrual:
          $ref: '#/components/schemas/AccrualBase_1'
        CurrencyAmount:
          description: "The amount on the line, in the currency specified by the currency\
            \ code of the voucher."
          example: 99
          format: double
          type: number
        DepartmentId:
          description: The department id of the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Description:
          description: The description of the line.
          example: Hello accounting world
          nullable: true
          type: string
        Dim1Id:
          description: The id of the dimension 1 associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim2Id:
          description: The id of the dimension 2 associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim3Id:
          description: The id of the dimension 3 associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        LocationId:
          description: The id of the location dimension associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        ProductId:
          description: The product id associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        ProjectId:
          description: The id of the project associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Quantity:
          description: The quantity dimension set on the line.
          example: 123.45
          format: double
          nullable: true
          type: number
        QuantityOrdered:
          description: The quantity ordered by the customer.
          example: 123.45
          format: double
          nullable: true
          type: number
        UnitOfMeasureType:
          $ref: '#/components/schemas/UnitOfMeasureType'
        VatId:
          description: The id of the vat code used on the line.
          example: 12345
          format: int32
          nullable: true
          type: integer
        VatReturnSpecification:
          $ref: '#/components/schemas/VatReturnSpecification'
      type: object
    AccrualBase_1:
      additionalProperties: false
      description: "Accrual (Norwegian: Periodisering)"
      example:
        BalanceAccountNo: 2970
        IsActive: true
        BalanceAccountAgricultureDepartment: None
        FromDate: 2023-01-01
        ToDate: 2023-12-31
        BalanceAccountId: 123456
      properties:
        BalanceAccountAgricultureDepartment:
          $ref: '#/components/schemas/AgricultureDepartment'
        BalanceAccountId:
          description: "The account id of the balance account used for the accrual\
            \ balance\r\n(norwegian: balansekonto benyttet for periodiseringen)."
          example: 123456
          format: int64
          nullable: true
          type: integer
        BalanceAccountNo:
          description: "The account number of the balance account used for the accrual\
            \ balance\r\n(norwegian: balansekonto benyttet for periodiseringen)."
          example: 2970
          format: int64
          nullable: true
          type: integer
        FromDate:
          description: The start date of the accrual.
          example: 2023-01-01
          format: date
          type: string
        IsActive:
          description: Value indicating whether the accrual is active or not.
          example: true
          type: boolean
        ToDate:
          description: The end date of the accrual.
          example: 2023-12-31
          format: date
          type: string
      type: object
    EmploymentLayoffDto:
      additionalProperties: false
      description: The Employment Layoff DTO contains properties relevant to a layoff
        (line) on an employment relationship object in Go.
      example:
        StartDate: 2021-01-01
        AdjustFixedWage: false
        EndedAndReported: false
        ReportingId: POGO_123abc
        ExcludeEmployeeFromPayroll: false
        LayoffPercentage: 58.45
        Id: f575b4b0-55be-4b56-b01f-44b204df82c5
        EmployeeId: 12345
        EndDate: 2021-01-10
        CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        EmploymentId: 12345
        LastChangedDateTimeOffset: 2021-09-30T09:33:00.1234567Z
      properties:
        AdjustFixedWage:
          description: "Value indicating whether the fixed wage should be adjusted\
            \ by the layoff percentage.\r\nIf true then this layoff percentage will\
            \ be used to adjust the fixed wage."
          example: false
          nullable: true
          type: boolean
        CreatedDateTimeOffset:
          description: The timestamp when the employment layoff entity was created.
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        EmployeeId:
          description: The identifier of the employee the employment belongs to.
          example: 12345
          format: int64
          readOnly: true
          type: integer
        EmploymentId:
          description: The id of the employment (employment relationship) the layoff
            line belongs to.
          example: 12345
          format: int64
          readOnly: true
          type: integer
        EndDate:
          description: The end date of the layoff.
          example: 2021-01-10
          format: date
          nullable: true
          type: string
        EndedAndReported:
          description: "Value is set true if and when the layoff is ended and the\
            \ reporting (a-melding) is done and finalized.\r\nIf true, the layoff\
            \ will not be included in future reporting (a-melding)."
          example: false
          nullable: true
          type: boolean
        ExcludeEmployeeFromPayroll:
          description: Value is set true if the employee should be excluded from payroll's
            while the layoff is active.
          example: false
          nullable: true
          type: boolean
        Id:
          description: The id of the employment layoff (line).
          example: f575b4b0-55be-4b56-b01f-44b204df82c5
          format: uuid
          readOnly: true
          type: string
        LastChangedDateTimeOffset:
          description: The timestamp when the employment layoff entity was last changed.
          example: 2021-09-30T09:33:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        LayoffPercentage:
          description: "The percentage of layoff absence.\r\n100 represent fully absent,\r\
            \n50 represent 50% absence from the current employment."
          example: 58.45
          format: double
          nullable: true
          type: number
        ReportingId:
          description: "The id of the layoff that will be reported.\r\nIf not set,\
            \ Go will assign an id.\r\nNot to be confused with the Id property."
          example: POGO_123abc
          nullable: true
          type: string
        StartDate:
          description: The start date of the layoff.
          example: 2021-01-01
          format: date
          nullable: true
          type: string
      type: object
    IncomingInvoiceListItemDto:
      additionalProperties: false
      description: Represents an incoming invoice list item.
      example:
        Dim3Id: 34567
        Dim2Id: 23456
        Dim1Code: "1"
        Dim1Id: 12345
        Dim2Code: "2"
        ExternalImportReference: CMR-12345
        BalanceLastChangedDateTimeOffset: 2019-01-01T11:22:12.1234567Z
        CurrencyCode: EUR
        VoucherDate: 2023-01-30
        ContractNo: CN-12345
        PurchaseOrderReference: POR-123
        NetAmount: 133700
        NetPostedAmount: 133700
        ProjectCode: "10"
        CustomMatchingReference: CMR-12345
        SupplierNo: 21137
        DueDate: 2023-01-30
        VoucherNo: 42
        Cid: "9876543210"
        DepartmentCode: "10"
        LocationCode: 4A
        LocationId: 123546
        ProjectId: 123456
        IsReversed: false
        CurrencyExchangeRate: 0.8008281904610115
        InvoiceNo: "123"
        TotalAmount: 133700
        RelatedInvoiceNo: "12345"
        CreatedDateTimeOffset: 2019-01-01T11:22:12.1234567Z
        SupplierId: 123456
        TotalPostedAmount: 167125
        Dim3Code: "3"
        MatchId: 6
        DepartmentId: 1234567
        Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Balance: 10000
        LastChangedDateTimeOffset: 2023-01-30T12:47:02.1234567Z
        VoucherType: IncomingInvoice
      properties:
        Balance:
          description: "The balance of the supplier ledger entry this invoice is related\
            \ to (remaining amount to be paid), in the client currency.\r\nIf balance\
            \ is greater than totalPostedAmount, the entry will have a match in the\
            \ supplier ledger with at least one other entry with the opposite amount,\
            \ and those entries will share the same matchId. If the balance is zero,\
            \ the invoice is considered paid in the GUI."
          example: 10000
          format: double
          readOnly: true
          type: number
        BalanceLastChangedDateTimeOffset:
          description: "The timestamp of the last change of the balance property.\r\
            \nThis reflect the last changed timestamp of the supplier ledger entry\
            \ this invoice relates to, and the match state of the sub-ledger entry.\r\
            \nUsing this property as filtering is one way of retrieving the payment\
            \ status of invoices."
          example: 2019-01-01T11:22:12.1234567Z
          format: date-time
          nullable: true
          readOnly: true
          type: string
        Cid:
          description: "The cid number (norwegian: KID), if present."
          example: "9876543210"
          nullable: true
          readOnly: true
          type: string
        ContractNo:
          description: "The contract number, if set on the invoice."
          example: CN-12345
          nullable: true
          readOnly: true
          type: string
        CreatedDateTimeOffset:
          description: The created timestamp of the invoice voucher.
          example: 2019-01-01T11:22:12.1234567Z
          format: date-time
          readOnly: true
          type: string
        CurrencyCode:
          description: The standard currency code for the invoice. Currencies active
            on the client can be queried using the AccountingSettings service. Currency
            codes follow the ISO4217 standard. Defaults to *NOK*.
          example: EUR
          nullable: true
          readOnly: true
          type: string
        CurrencyExchangeRate:
          description: The normalized currency exchange rate. Always base 1.
          format: double
          nullable: true
          readOnly: true
          type: number
        CustomMatchingReference:
          description: "The custom matching reference, if set. This property will\
            \ only have value on entries created through the API or Import with CustomMatchingReference\
            \ specified. This property is used for matching purposes in the supplier\
            \ subledger account, where entries posted with a CustomMatchingReference\
            \ will be matched immediately with existing entries in the subledger that\
            \ have the same CustomMatchingReference and opposite amount (unless existing\
            \ entries are already matched out)."
          example: CMR-12345
          nullable: true
          readOnly: true
          type: string
        DepartmentCode:
          description: "The code of the department for the invoice, if set. Note that\
            \ this is the department set in the header of the invoice. The invoice\
            \ costlines might specify other departments or no department."
          example: "10"
          nullable: true
          type: string
        DepartmentId:
          description: "The id of the department, if departmentCode is set on the\
            \ invoice."
          example: 1234567
          format: int64
          nullable: true
          type: integer
        Dim1Code:
          description: "The code of the dimension 1 associated with the invoice, if\
            \ set. Note that this is the dimension 1 set in the header of the invoice.\
            \ The invoice costlines might specify other dimension 1 values or no dimension\
            \ 1. Dimension 1-3 are customizable dimensions that can be defined and\
            \ queried using the CustomDimension and CustomDimensionValue serivces."
          example: "1"
          nullable: true
          readOnly: true
          type: string
        Dim1Id:
          description: "The id of the dimension 1 associated with the invoice, if\
            \ dim1Code is set."
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        Dim2Code:
          description: The code of the dimension 2 associated with the invoice. Note
            that this is the dimension 2 set in the header of the invoice. The invoice
            costlines might specify other dimension 2 values or no dimension 2. Dimension
            1-3 are customizable dimensions that can be defined and queried using
            the CustomDimension and CustomDimensionValue serivces.
          example: "2"
          nullable: true
          readOnly: true
          type: string
        Dim2Id:
          description: "The id of the dimension 2 associated with the invoice, if\
            \ dim2Code is set."
          example: 23456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        Dim3Code:
          description: The code of the dimension 3 associated with the invoice. Note
            that this is the dimension 3 set in the header of the invoice. The invoice
            costlines might specify other dimension 3 values or no dimension 3. Dimension
            1-3 are customizable dimensions that can be defined and queried using
            the CustomDimension and CustomDimensionValue serivces.
          example: "3"
          nullable: true
          readOnly: true
          type: string
        Dim3Id:
          description: "The id of the dimension 3 associated with the invoice, if\
            \ dim3Code is set."
          example: 34567
          format: int64
          nullable: true
          readOnly: true
          type: integer
        DueDate:
          description: The due date of the invoice.
          example: 2023-01-30
          format: date
          readOnly: true
          type: string
        ExternalImportReference:
          description: "The ExternalImportReference, if set. This property can be\
            \ set by integrations posting vouchers to Go, in order to reference the\
            \ external system and ensure a duplicate check (only one instance of the\
            \ reference can exist for the object type).\r\nCan be used to correlate/duplicate\
            \ check transactions.\r\nMax 50 characters."
          example: CMR-12345
          nullable: true
          readOnly: true
          type: string
        Id:
          description: "The identifier of the invoice and the posted voucher. The\
            \ id is assigned by Go when the voucher is created, and is shared by all\
            \ transactions within the same voucher (transactions have unique id's,\
            \ but share the same property voucherId)."
          format: uuid
          readOnly: true
          type: string
        InvoiceNo:
          description: The invoice number of the invoice.
          example: "123"
          nullable: true
          readOnly: true
          type: string
        IsReversed:
          description: "Gets a flag indicating whether the invoice voucher have been\
            \ reversed. If true, the invoice voucher have been reversed with a reversal\
            \ voucher (nullifying the invoice voucher), and the invoice number can\
            \ be reused. Only possible to reverse an invoice voucher using the IncomingInvoiceVoucher\
            \ api, and only by the integration that created the invoice voucher originally\
            \ using this api."
          example: false
          nullable: true
          readOnly: true
          type: boolean
        LastChangedDateTimeOffset:
          description: "    The timestamp of the last change of the invoice.\r\nFor\
            \ posted invoices, no direct invoice information or related account transactions\
            \ can change, so this property can be expected to be equal to the CreatedDateTimeOffset\
            \ property."
          example: 2023-01-30T12:47:02.1234567Z
          format: date-time
          readOnly: true
          type: string
        LocationCode:
          description: "The code of the location dimension associated with the invoice.\r\
            \nNote that this is the location set in the header of the invoice. The\
            \ invoice lines might specify other location values or no location."
          example: 4A
          nullable: true
          readOnly: true
          type: string
        LocationId:
          description: The id of the location dimension associated with the invoice.
          example: 123546
          format: int64
          nullable: true
          readOnly: true
          type: integer
        MatchId:
          description: "The match id of the supplier ledger entry this invoice relate\
            \ to, if present. Available if the invoice have a match with other supplier\
            \ ledger entries - typically payment transactions. Can be used with the\
            \ SupplierLedger endpoint to retrive the matched transactions."
          format: int64
          nullable: true
          readOnly: true
          type: integer
        NetAmount:
          description: The net amount of the invoice (vat exclusive). This amount
            is presented in the currency used on the invoice (the currency given by
            the currencyCode).
          example: 133700
          format: double
          readOnly: true
          type: number
        NetPostedAmount:
          description: The net posted amount of the invoice (vat exclusive). This
            amount is always presented in the client currency (NOK). Will correspond
            with the netAmount and the normalized currencyExchangeRate.
          example: 133700
          format: double
          readOnly: true
          type: number
        ProjectCode:
          description: "The project code, if set on the invoice. Note that this is\
            \ the project set in the header of the invoice. The invoice costlines\
            \ might specify other projects or no project. Projects can be queried\
            \ and identified using the Project service.\r\nMax 50 characters."
          example: "10"
          nullable: true
          readOnly: true
          type: string
        ProjectId:
          description: "The project id, if projectCode is set. Projects can be queried\
            \ and identified using the Project service."
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        PurchaseOrderReference:
          description: "The purchase order reference, if set. The property can be\
            \ used to reference purchase order placed to the supplier."
          example: POR-123
          nullable: true
          readOnly: true
          type: string
        RelatedInvoiceNo:
          description: "The related invoice number. Can be available on supplier credit\
            \ notes. If available, this property will reference the original invoice\
            \ being credited."
          example: "12345"
          nullable: true
          readOnly: true
          type: string
        SupplierId:
          description: The identifier of the supplier this invoice is related to.
          example: 123456
          format: int64
          readOnly: true
          type: integer
        SupplierNo:
          description: The supplier number for the supplier this invoice relates to.
            Suppliers can be queried and identified using the Supplier service.
          example: 21137
          format: int64
          readOnly: true
          type: integer
        TotalAmount:
          description: The total amount of the invoice (vat inclusive). This amount
            is presented in the currency used on the invoice (the currency given by
            the currencyCode).
          example: 133700
          format: double
          readOnly: true
          type: number
        TotalPostedAmount:
          description: The total posted amount of the invoice (vat inclusive). This
            amount is always presented in the client currency (NOK). Will correspond
            with the totalAmount and the normalized currencyExchangeRate.
          example: 167125
          format: double
          readOnly: true
          type: number
        VoucherDate:
          description: The date of the invoice voucher. This represents the date of
            the voucher and the document date of the invoice.
          example: 2023-01-30
          format: date
          nullable: true
          readOnly: true
          type: string
        VoucherNo:
          description: The voucher number of the invoice voucher. This is the voucher
            number assigned by Go when the voucher was posted.  Voucher numbers are
            assigned by Go in sequence.  Always present on invoices.
          example: 42
          format: int64
          readOnly: true
          type: integer
        VoucherType:
          $ref: '#/components/schemas/IncomingVoucherType'
      type: object
    IncomingVoucherType:
      description: Indicates the type of incoming voucher.<p>Members:</p><ul><li><i>IncomingInvoice</i>
        - Incoming invoice sent from a supplier to the client.</li><li><i>IncomingCreditNote</i>
        - Incoming credit note sent from a supplier to the client.</li></ul>
      enum:
      - IncomingInvoice
      - IncomingCreditNote
      nullable: true
      type: string
    VatCodeDto:
      additionalProperties: false
      description: The VAT code DTO contains all properties relevant to VAT codes.
      example:
        VatBasisRatio: 0.5
        VatBasisRatioValidFrom: 2000-01-23T04:56:07.000+00:00
        Description: Utgående mva
        IsActive: false
        IsCustom: true
        Rate: 0.25
        Code: "3"
        VatBasisRatios:
        - VatBasisRatio: 42
          VatBasisRatioValidFrom: 2023-04-27
        - VatBasisRatio: 42
          VatBasisRatioValidFrom: 2023-04-27
        BaseVatCodeId: 13
        Name: Utgående mva høy sats
        ValidTo: 2022-12-31
        ValidFrom: 2022-07-01
        Id: 201600
      properties:
        BaseVatCodeId:
          description: The standard vat id the custom vat code is based upon. Relevant
            only for custom vat codes.
          example: 13
          format: int64
          nullable: true
          type: integer
        Code:
          description: "The vat code. Go use standard SAF-T codes by default. Any\
            \ custom codes, will have a notation with the letter C first.\r\nCodes\
            \ used specifically for vat compensation, are marked with the letter K\
            \ first (relevant only if the client uses vat compensation, ie the VatSetting\
            \ 'useVatCompensation' set true)."
          example: "3"
          nullable: true
          readOnly: true
          type: string
        Description:
          description: The description of the vat code.
          example: Utgående mva
          nullable: true
          readOnly: true
          type: string
        Id:
          description: The unique identifier of the vat code
          example: 201600
          format: int64
          readOnly: true
          type: integer
        IsActive:
          description: The value indicating whether this vat code is active
          example: false
          nullable: true
          readOnly: true
          type: boolean
        IsCustom:
          description: The value indicating whether this vat code is custom created.
            The code will have the letter C in the notation if true.
          example: true
          nullable: true
          readOnly: true
          type: boolean
        Name:
          description: the name of the vat code.
          example: Utgående mva høy sats
          nullable: true
          readOnly: true
          type: string
        Rate:
          description: The rate of the vat code. This is a value between 0 and 1.
            0 representing 0 % vat and 1 representing 100 % vat.
          example: 0.25
          format: double
          readOnly: true
          type: number
        ValidFrom:
          description: "The date this vat code is active from, inclusive."
          example: 2022-07-01
          format: date
          readOnly: true
          type: string
        ValidTo:
          description: The date this vat code expires. Inclusive.
          example: 2022-12-31
          format: date
          nullable: true
          readOnly: true
          type: string
        VatBasisRatio:
          description: "The vat basis ratio. Relevant for custom codes in mixed vat\
            \ conditions (Norwegian: Forholdsmessig fradrag MVA). This is a value\
            \ between 0 and 1, with 0 representing 0% vat basis ratio and 1 representing\
            \ 100% vat basis ratio.\r\nExample: A net amount of 1000 NOK with 50%\
            \ vat basis ratio and 25% vat rate, will have the vat amount calculated\
            \ as: 1000 x 0.5 x 0.25 = 125 NOK"
          example: 0.5
          format: double
          nullable: true
          readOnly: true
          type: number
        VatBasisRatioValidFrom:
          description: "The date this vat basis ratio is active from.\r\nIf no vat\
            \ basis ratio is set, this date will default to the vat code valid from\
            \ date."
          format: date-time
          nullable: true
          readOnly: true
          type: string
        VatBasisRatios:
          description: A collection of VatBasisRatios for a custom vat code.
          items:
            $ref: '#/components/schemas/VatBasisRatios'
          nullable: true
          readOnly: true
          type: array
      type: object
    VatBasisRatios:
      additionalProperties: false
      description: Custom VAT code basis ratios and valid from dates.
      example:
        VatBasisRatio: 42
        VatBasisRatioValidFrom: 2023-04-27
      properties:
        VatBasisRatio:
          description: The VAT basis ratio for a custom VatCode.
          example: 42
          format: double
          nullable: true
          readOnly: true
          type: number
        VatBasisRatioValidFrom:
          description: The from date for the VAT basis ratio.
          example: 2023-04-27
          format: date
          nullable: true
          type: string
      type: object
    PensionSchemeDto:
      additionalProperties: false
      description: The pension scheme DTO contains all properties relevant to the
        pension schemes in payroll settings in Go.
      example:
        IsActive: true
        PensionProviderOrganizationNo: "980386465"
        PensionProviderName: ABC Pension Fund
      properties:
        IsActive:
          description: Value indicating whether this pension scheme entity is active.
          example: true
          readOnly: true
          type: boolean
        PensionProviderName:
          description: The name of the pension provider.
          example: ABC Pension Fund
          nullable: true
          readOnly: true
          type: string
        PensionProviderOrganizationNo:
          description: The organization number of the pension provider.
          example: "980386465"
          nullable: true
          readOnly: true
          type: string
      type: object
    SalesOrderAttachmentDto:
      additionalProperties: false
      description: A SalesOrderAttachment DTO.
      example:
        SalesOrderId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        FileName: Timetrackingreport.pdf
        Id: 12345
        CreatedDateTimeOffset: 2023-12-20T14:32:15.1320796Z
        FileSize: 256
        LastChangedDateTimeOffset: 2023-12-20T14:32:15.1320796Z
      properties:
        CreatedDateTimeOffset:
          description: Created date time offset. Date in UTC time.
          example: 2023-12-20T14:32:15.1320796Z
          format: date-time
          readOnly: true
          type: string
        FileName:
          description: "Name of the file, including file extension. File name and\
            \ extension is extracted from the uploaded file."
          example: Timetrackingreport.pdf
          nullable: true
          type: string
        FileSize:
          description: File size in bytes.
          example: 256
          format: int64
          nullable: true
          readOnly: true
          type: integer
        Id:
          description: The identifier of the sales order attachment.
          example: 12345
          format: int64
          readOnly: true
          type: integer
        LastChangedDateTimeOffset:
          description: Last changed date time offset. Date in UTC time.
          example: 2023-12-20T14:32:15.1320796Z
          format: date-time
          readOnly: true
          type: string
        SalesOrderId:
          description: Id of the sales order the attachment belongs to.
          format: uuid
          nullable: true
          type: string
      type: object
    TrialBalanceLineDto:
      additionalProperties: false
      description: "TrialBalanceLine representing the balance on a General Ledger\
        \ Account/> (Norwegian: Saldobalanse)."
      example:
        AccountId: 123456
        AccountNo: 1920
        Balance: 502.25
        AccountName: Bankinnskudd
        AgricultureDepartment: None
      properties:
        AccountId:
          description: The general ledger account id. The chart of accounts used on
            the client can be queried using the service GeneralLedgerAccount.
          example: 123456
          format: int64
          readOnly: true
          type: integer
        AccountName:
          description: The name of the general ledger account. The chart of accounts
            used on the client can be queried using the service GeneralLedgerAccount.
          example: Bankinnskudd
          nullable: true
          readOnly: true
          type: string
        AccountNo:
          description: The general ledger account number. The chart of accounts used
            on the client can be queried using the service GeneralLedgerAccount.
          example: 1920
          format: int64
          readOnly: true
          type: integer
        AgricultureDepartment:
          $ref: '#/components/schemas/AgricultureDepartment'
        Balance:
          description: The balance amount for the Date provided. The balance includes
            transactions on that date. This amount is in the clients local currency.
          example: 502.25
          format: double
          readOnly: true
          type: number
      type: object
    AccessRoleDto:
      additionalProperties: false
      description: The available properties returned when retrieving access roles
        for a client.
      example:
        AccessRoleId: 09ab6bcf-4219-4149-8283-6b6a7342bfd9
        AccessRoleName: "980386465"
      properties:
        AccessRoleId:
          description: The identifier of the access role.
          example: 09ab6bcf-4219-4149-8283-6b6a7342bfd9
          format: uuid
          readOnly: true
          type: string
        AccessRoleName:
          description: The name of the access role.
          example: "980386465"
          nullable: true
          readOnly: true
          type: string
      type: object
    BankApproverPostDto:
      additionalProperties: false
      description: Data transfer object for the bank approver POST method.
      example:
        BankAccountId: 12345
        UserId: 09ab6bcf-4219-4149-8283-6b6a7342bfd9
        FromDate: 2024-01-01
        ToDate: 2024-01-31
      properties:
        BankAccountId:
          description: The identifier of the bank account.
          example: 12345
          format: int64
          type: integer
        FromDate:
          description: "From date, inclusive.\r\nThe user will have access to approval\
            \ on the account from this date."
          example: 2024-01-01
          format: date
          nullable: true
          type: string
        ToDate:
          description: "To date, inclusive.\r\nThe user will have access to approval\
            \ on the account until and including this date.\r\nAfterwards, the user\
            \ is deactivated on the client."
          example: 2024-01-31
          format: date
          nullable: true
          type: string
        UserId:
          description: The identifier of the user.
          example: 09ab6bcf-4219-4149-8283-6b6a7342bfd9
          format: uuid
          type: string
      required:
      - BankAccountId
      - UserId
      type: object
    YearEndVoucherPostDto:
      additionalProperties: false
      description: Represents a year end voucher post DTO.
      example:
        CurrencyCode: EUR
        SaftBatchId: "12312"
        Description: My first voucher description
        ImportedVoucherNo: 23145
        VoucherDate: 2024-03-20
        SaftSourceId: System_123
        VoucherLines:
        - ExternalLineReference: 123ABC
          AccountId: 12345
          Description: Hello accounting world!
          Dim3Id: 12345
          Dim2Id: 12345
          Dim1Id: 12345
          LocationId: 12345
          ProjectId: 12345
          Quantity: 100
          CurrencyExchangeRate: 10.78
          ProductId: 12345
          VatReturnSpecification: None
          VatId: 12345
          CurrencyAmount: 69420
          CurrencyCode: USD
          Quantity2: 200
          PostingDate: 2021-09-28
          CustomMatchingReference: 123ABC
          DepartmentId: 12345
        - ExternalLineReference: 123ABC
          AccountId: 12345
          Description: Hello accounting world!
          Dim3Id: 12345
          Dim2Id: 12345
          Dim1Id: 12345
          LocationId: 12345
          ProjectId: 12345
          Quantity: 100
          CurrencyExchangeRate: 10.78
          ProductId: 12345
          VatReturnSpecification: None
          VatId: 12345
          CurrencyAmount: 69420
          CurrencyCode: USD
          Quantity2: 200
          PostingDate: 2021-09-28
          CustomMatchingReference: 123ABC
          DepartmentId: 12345
        ExternalImportReference: 123abc
      properties:
        CurrencyCode:
          description: "The currency code of the voucher header.\r\nThe line amounts\
            \ will default be determined in the currency specified in the header.\r\
            \nFor some voucher types, different currency codes can be set on the line\
            \ level, thus overriding the currency of the head.\r\nCurrencies active\
            \ on the client can be queried using the AccountingSettings service. Currency\
            \ codes follow the ISO4217 standard."
          example: EUR
          maxLength: 3
          minLength: 0
          nullable: true
          type: string
        Description:
          description: The description field of the voucher header.
          example: My first voucher description
          nullable: true
          type: string
        ExternalImportReference:
          description: "The external import reference associated with the voucher.\
            \ This property can be set by integrations creating\r\nvouchers, in order\
            \ to reference the external system and ensure a duplicate check (only\
            \ one instance of the\r\nreference can exist on the client). Can be used\
            \ to correlate/duplicate check transactions. Guid's are\r\nrecommended,\
            \ or other unique references. This property is only available using the\
            \ api (not visible in the user\r\ninterface)"
          example: 123abc
          nullable: true
          type: string
        ImportedVoucherNo:
          description: "The external voucher number. Can be used to reference the\
            \ voucher number in the external system. The external\r\nvoucher number\
            \ is visible in Go in various reports."
          example: 23145
          format: int64
          nullable: true
          type: integer
        SaftBatchId:
          description: "The SAF-T batch id. This is the ID of the batch in the system\
            \ that transferred the voucher. Should be set if\r\nthis voucher is a\
            \ batch voucher containing the entries of multiple vouchers in the external\
            \ system. When this\r\nvoucher is exported to SAF-T, this property is\
            \ transactions BatchID in the SAF-T file. The external systems\r\nSAF-T\
            \ export should set the same BatchId on all the transactions that are\
            \ included in this Voucher to ensure\r\naudit trail. Max length 35 characters."
          example: "12312"
          nullable: true
          type: string
        SaftSourceId:
          description: "The SAF-T source id. This is the ID of the system that generated\
            \ the voucher. When this voucher is exported to\r\nSAF-T, this property\
            \ is mapped on the transactions SourceID in the SAF-T file. If the creating\
            \ system is\r\nrequired to export it's own SAF-T file, this source id\
            \ should correspond with the SystemID in the SAF-T file of\r\nthe external\
            \ system to ensure an audit trail. Max length is 35 characters."
          example: System_123
          nullable: true
          type: string
        VoucherDate:
          description: "The voucher date.\r\nThis represents the date of the voucher,\
            \ the document date of an invoice for instance,\r\nand may differ from\
            \ the transaction dates for lines the voucher, depending on the type of\
            \ voucher."
          example: 2024-03-20
          format: date
          type: string
        VoucherLines:
          description: The lines of the year end voucher
          items:
            $ref: '#/components/schemas/YearEndVoucherLinePostDto'
          nullable: true
          type: array
      required:
      - CurrencyCode
      - VoucherDate
      - VoucherLines
      type: object
    YearEndVoucherLinePostDto:
      additionalProperties: false
      description: Base journal entry voucher line properties shared among all voucher
        types.
      example:
        ExternalLineReference: 123ABC
        AccountId: 12345
        Description: Hello accounting world!
        Dim3Id: 12345
        Dim2Id: 12345
        Dim1Id: 12345
        LocationId: 12345
        ProjectId: 12345
        Quantity: 100
        CurrencyExchangeRate: 10.78
        ProductId: 12345
        VatReturnSpecification: None
        VatId: 12345
        CurrencyAmount: 69420
        CurrencyCode: USD
        Quantity2: 200
        PostingDate: 2021-09-28
        CustomMatchingReference: 123ABC
        DepartmentId: 12345
      properties:
        AccountId:
          description: The id of the general ledger account or the subledger account
            to post the amount.
          example: 12345
          format: int64
          nullable: true
          type: integer
        CurrencyAmount:
          description: "The amount on the line, in the currency specified by the currency\
            \ code of the voucher or the currency of the voucher line if available.\r\
            \nGross amounts should be provided, along with the relevant vat code.\
            \ The amount must be a positive or negative number not 0."
          example: 69420
          format: double
          type: number
        CurrencyCode:
          description: "The currency code of the voucher line. Will inherit the currency\
            \ code of the voucher head if not set.\r\nThe line currency amounts will\
            \ be determined in the currency specified on the line. Currencies active\
            \ on the\r\nclient can be queried using the AccountingSettings service.\
            \ Currency codes follow the ISO4217 standard."
          example: USD
          nullable: true
          type: string
        CurrencyExchangeRate:
          description: "The normalized currency exchange rate. Always base 1.\r\n\
            \            \r\nRelevant to set if the voucher line have a foreign currency\
            \ with a specific currency exchange rate.\r\nIf not set, the field will\
            \ inherit the rate in Go for the posting date set. The rates in Go are\
            \ retrieved\r\nfrom ECB via api."
          example: 10.78
          format: double
          nullable: true
          type: number
        CustomMatchingReference:
          description: "The custom matching reference of the line. This property may\
            \ be used for matching purposes on sub-ledger\r\naccounts, where entries\
            \ posted with a CustomMatchingReference will be matched immediately with\
            \ existing entries\r\nin the sub-ledger that have the same CustomMatchingReference\
            \ and opposite amount (unless existing entries are\r\nalready matched\
            \ out)."
          example: 123ABC
          nullable: true
          type: string
        DepartmentId:
          description: The department Id.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Description:
          description: The description of the voucher line.
          example: Hello accounting world!
          nullable: true
          type: string
        Dim1Id:
          description: The id of the dimension 1 associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim2Id:
          description: The id of the dimension 2 associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim3Id:
          description: The id of the dimension 3 associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        ExternalLineReference:
          description: "The external line reference associated with the line. This\
            \ property can only be set using the api, in order\r\nto reference the\
            \ external system's line. Can be used to correlate/duplicate check transactions."
          example: 123ABC
          nullable: true
          type: string
        LocationId:
          description: The id of the location dimension associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        PostingDate:
          description: "The posting date.\r\nThis is the date of effect in the accounting\
            \ system for the Amount and CurrencyAmount (also the currency\r\nconversion\
            \ date used by Go if the currency rate was not set explicit when posted).\r\
            \nAlways present on transactions."
          example: 2021-09-28
          format: date
          type: string
        ProductId:
          description: The product id associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        ProjectId:
          description: The id of the project associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Quantity:
          description: "The quantity dimension set on the line.\r\nUsually associated\
            \ with the product set on the line.\r\nIf the client is an agriculture\
            \ client, the quantity is associated with the unit1 of the general ledger\
            \ account."
          example: 100
          format: double
          nullable: true
          type: number
        Quantity2:
          description: "The quantity2 dimension set on the line.\r\nRelevant only\
            \ for agriculture clients, where the quantity2 is associated with the\
            \ unit2 of the general ledger account."
          example: 200
          format: double
          nullable: true
          type: number
        VatId:
          description: The id of the vat code used for the credit entry.
          example: 12345
          format: int32
          nullable: true
          type: integer
        VatReturnSpecification:
          $ref: '#/components/schemas/VatReturnSpecification'
      required:
      - AccountId
      - PostingDate
      - VatId
      type: object
    OutgoingInvoiceLineDto:
      additionalProperties: false
      description: Outgoing-invoice / Credit-note Line
      example:
        VatAmount: -71.14
        IsAccrued: true
        UnitOfMeasureCode: BX
        AccountId: 12345
        Description: Hello accounting world
        Dim3Id: 123456
        Dim2Id: 123456
        Dim1Code: dimcode111
        Dim1Id: 123456
        Dim2Code: dimcode222
        ExternalImportReference: 123abc
        ProductId: 123456
        SellersReferenceEmployeeId: 756319
        ProductUnitPrice: 200
        NetAmount: 1000.33
        NetPostedAmount: 1000.33
        ProjectCode: "100"
        Allowance: 56.75
        LineType: Normal
        DepartmentCode: 1A
        AccountNo: 3000
        ProductCode: "10"
        LocationCode: L1337
        LocationId: 12345
        ProjectId: 123456
        Quantity: 100
        SellersReferenceEmployeeNo: 1
        SortOrder: 0
        TotalAmount: 12500.33
        VatReturnSpecification: None
        VatId: 123456
        VatRate: 0.12
        AgricultureDepartment: None
        TotalPostedAmount: 12500.33
        Dim3Code: dimcode333
        VatCode: "33"
        ProductUnitCost: 300
        DepartmentId: 123456
        Id: 476023749
      properties:
        AccountId:
          description: The general ledger account id this invoice line was posted
            to.
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        AccountNo:
          description: The general ledger account code this invoice line was posted
            to.
          example: 3000
          format: int64
          nullable: true
          readOnly: true
          type: integer
        AgricultureDepartment:
          $ref: '#/components/schemas/AgricultureDepartment'
        Allowance:
          description: "The percent of allowance/discount or allowance charge for\
            \ this invoice line.\r\nThe value is between -1000 and 100 (reflects as\
            \ -1000% or 100% in the GUI).\r\nNegative percentage means the line is\
            \ set with allowance charge.\r\nPositive percentage means the line is\
            \ set up with discount/allowance."
          example: 56.75
          format: double
          nullable: true
          readOnly: true
          type: number
        DepartmentCode:
          description: The code of the department this invoice line is associated
            with.
          example: 1A
          nullable: true
          readOnly: true
          type: string
        DepartmentId:
          description: The id of the department this invoice line is associated with.
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        Description:
          description: The description set on this invoice line.
          example: Hello accounting world
          nullable: true
          readOnly: true
          type: string
        Dim1Code:
          description: The code of the dimension 1 associated with this invoice line.
          example: dimcode111
          nullable: true
          readOnly: true
          type: string
        Dim1Id:
          description: The id of the dimension 1 associated with this invoice line.
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        Dim2Code:
          description: The code of the dimension 2 associated with this invoice line.
          example: dimcode222
          nullable: true
          readOnly: true
          type: string
        Dim2Id:
          description: The id of the dimension 2 associated with this invoice line.
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        Dim3Code:
          description: The code of the dimension 3 associated with this invoice line.
          example: dimcode333
          nullable: true
          readOnly: true
          type: string
        Dim3Id:
          description: The id of the dimension 3 associated with this invoice line.
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        ExternalImportReference:
          description: "The external import reference for this invoice line.\r\nThis\
            \ property can be set by integrations posting vouchers in Go or creating\
            \ sales orders (invoice drafts), in order to reference the external system's\
            \ invoice line and ensure a duplicate check (only one instance of the\
            \ reference can exist within each invoice object).\r\nCan be used to correlate/duplicate\
            \ check transaction."
          example: 123abc
          nullable: true
          readOnly: true
          type: string
        Id:
          description: "The identifier of this invoice line.\r\nThe id is assigned\
            \ by Go when the invoice is created.\r\nNote that on the line level, the\
            \ invoice lines do not correspond with the sales order lines, if the invoice\
            \ was an sales order created in Go.\r\nThis is because the lines are recreated\
            \ in the process of sending and posting the information when an order\
            \ is transformed to an invoice."
          example: 476023749
          format: int64
          readOnly: true
          type: integer
        IsAccrued:
          description: "Value indicating whether the net posted amount was accrued\
            \ over time when the invoice voucher was posted in Go. If true, the accrual\
            \ transactions is best retrieved by getting the accounttransactions of\
            \ invoice voucher."
          example: true
          nullable: true
          readOnly: true
          type: boolean
        LineType:
          $ref: '#/components/schemas/VoucherLineType'
        LocationCode:
          description: The code of the location dimension associated with this invoice
            line.
          example: L1337
          nullable: true
          readOnly: true
          type: string
        LocationId:
          description: The id of the location dimension associated with this invoice
            line.
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        NetAmount:
          description: "The net amount of this invoice line (vat exclusive).\r\nThis\
            \ amount is presented in the currency used on the invoice (the currency\
            \ given by the currencyCode)."
          example: 1000.33
          format: double
          readOnly: true
          type: number
        NetPostedAmount:
          description: "The net posted amount of this invoice line (vat exclusive).\r\
            \nThis amount is always presented in the client currency (NOK).\r\nWill\
            \ correspond with the netAmount and the normalized currencyExchangeRate\
            \ of the invoice."
          example: 1000.33
          format: double
          readOnly: true
          type: number
        ProductCode:
          description: The code of the product associated with this invoice line.
          example: "10"
          nullable: true
          readOnly: true
          type: string
        ProductId:
          description: The id of the product associated with this invoice line.
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        ProductUnitCost:
          description: The cost per unit of the product associated with this invoice
            line.
          example: 300
          format: double
          nullable: true
          readOnly: true
          type: number
        ProductUnitPrice:
          description: The sales price per unit of the product associated with this
            invoice line.
          example: 200
          format: double
          readOnly: true
          type: number
        ProjectCode:
          description: The project code associated with this invoice line.
          example: "100"
          nullable: true
          readOnly: true
          type: string
        ProjectId:
          description: The project id associated with is invoice line.
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        Quantity:
          description: The quantity of this invoice line.
          example: 100
          format: double
          nullable: true
          readOnly: true
          type: number
        SellersReferenceEmployeeId:
          description: The id of the employee set as the seller reference.
          example: 756319
          format: int64
          nullable: true
          readOnly: true
          type: integer
        SellersReferenceEmployeeNo:
          description: The number of the employee set as the seller reference.
          example: 1
          format: int64
          nullable: true
          readOnly: true
          type: integer
        SortOrder:
          description: "The sort order of the line.\r\nSort order start at 0.\r\n\
            The first line as viewed from the GUI, will have sortOrder = 0."
          example: 0
          format: int32
          readOnly: true
          type: integer
        TotalAmount:
          description: "The total amount of this invoice line (VAT inclusive).\r\n\
            This amount is presented in the currency used on the invoice (the currency\
            \ given by the currencyCode)."
          example: 12500.33
          format: double
          readOnly: true
          type: number
        TotalPostedAmount:
          description: "The total posted amount of this invoice line (VAT inclusive).\r\
            \nThis amount is always presented in the client currency (NOK).\r\nWill\
            \ correspond with the totalAmount and the normalized currencyExchangeRate."
          example: 12500.33
          format: double
          readOnly: true
          type: number
        UnitOfMeasureCode:
          $ref: '#/components/schemas/UnitOfMeasureType'
        VatAmount:
          description: The VAT amount of this invoice line.
          example: -71.14
          format: double
          readOnly: true
          type: number
        VatCode:
          description: "The VAT code used on this invoice line.\r\nStandard codes\
            \ in Go is based on the SAF-T standard."
          example: "33"
          nullable: true
          readOnly: true
          type: string
        VatId:
          description: The VAT id for the VAT code used on this invoice line.
          example: 123456
          format: int32
          nullable: true
          readOnly: true
          type: integer
        VatRate:
          description: The VAT rate for the VAT code used on this invoice line.
          example: 0.12
          format: double
          readOnly: true
          type: number
        VatReturnSpecification:
          $ref: '#/components/schemas/VatReturnSpecification'
      type: object
    SalaryLineDto:
      additionalProperties: false
      description: The salary line DTO contains all properties relevant to a salary
        line in Go.
      example:
        AccountId: 12345
        DeductionType: Amount
        ExternalImportReference: 123abc
        CommuterPersonType: ForeignCommuterWithTaxCardWithoutStandardDeduction
        CarRegistrationNo: YE79309
        MaxAmount: 150
        HomeWorkKilometers: 99
        VatCodeId: 12345
        IsDeletedByUser: true
        Number: 12
        MinAmount: 99
        PrivateDrivenKilometers: 99
        SupplierBankAccountId: 12345
        WorkDriveExceedsKilometerLimit: true
        EmployeeId: 12345
        IncomeYear: 2023
        PayItemId: 21d4ddf1-c8bf-4874-8879-b70468fa1032
        Cid: "9235400011927001"
        Comment: Good job!
        OppositeAccountId: 12345
        Rate: 250.99
        Amount: 99
        ProjectId: 12345
        IsLocked: true
        Quantity: 12.21
        StartAmount: 99.99
        CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        TaxRule: Ordinary
        CarListPrice: 99
        IsCarPool: true
        FromDate: 2022-07-01
        ToDate: 2022-07-31
        UseRemittance: true
        DepartmentId: 12345
        Id: 12345
        CarRegistrationDate: 2022-07-01
        SupplierAccountId: 12345
        LastChangedDateTimeOffset: 2021-09-30T08:07:00.1234567Z
        MemberNo: "12345"
      properties:
        AccountId:
          description: "The identifier of the account this salary line should be posted\
            \ on.\r\nSub-ledger accounts can also be referenced in this field.\r\n\
            If not set, the account from the pay item will be used.\r\nIf set, any\
            \ account set on the pay item will be overridden for this given salary\
            \ line."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Amount:
          description: "The amount of the salary line, in the client currency.\r\n\
            The relevance of setting amount depend on the pay item set.\r\nFor a pay\
            \ item with a quantity and rate, the quantity and rate should be provided\
            \ as drivers, and the system will calculate the amount."
          example: 99
          format: double
          nullable: true
          type: number
        CarListPrice:
          description: "The list price of the car, in the client currency.\r\nRelevant\
            \ only for pay items with free car/work car processing types, where the\
            \ list price is required."
          example: 99
          format: double
          nullable: true
          type: number
        CarRegistrationDate:
          description: "The registration date of the car.\r\nRelevant to set only\
            \ for certain pay items with car/work car related processing types."
          example: 2022-07-01
          format: date
          nullable: true
          type: string
        CarRegistrationNo:
          description: "The registration number of the car.\r\nRelevant to set only\
            \ for certain pay items with car/work car related processing types."
          example: YE79309
          nullable: true
          type: string
        Cid:
          description: "The CID number (norwegian: KID), relevant if UseRemittance\
            \ and SupplierBankAccountId is set.\r\nOnly relevant to set for pay items\
            \ with the following processing types: TradeUnionDeduction and AttachmentOfEarnings."
          example: "9235400011927001"
          nullable: true
          type: string
        Comment:
          description: "A comment to the salary line.\r\nWill be shown on the employee\
            \ payslip if set."
          example: Good job!
          nullable: true
          type: string
        CommuterPersonType:
          $ref: '#/components/schemas/CommuterPersonType'
        CreatedDateTimeOffset:
          description: The timestamp when the salary line entity was created.
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        DeductionType:
          $ref: '#/components/schemas/DeductionType'
        DepartmentId:
          description: "The department identifier.\r\nRelevant to set if the salary\
            \ line should be posted with a given department dimension.\r\nIf not set,\
            \ the department will inherit the department set on the employee if/when\
            \ the salary line is included in a payroll."
          example: 12345
          format: int64
          nullable: true
          type: integer
        EmployeeId:
          description: The identifier of the employee this salary line concerns.
          example: 12345
          format: int64
          nullable: true
          type: integer
        ExternalImportReference:
          description: "The external import reference.\r\nThis property can be set\
            \ by integrations in order to reference the external system and ensure\
            \ a duplicate check when posting the salary line to Go (only one instance\
            \ of the reference can exist).\r\nCan be used to correlate/duplicate check\
            \ salary lines."
          example: 123abc
          nullable: true
          type: string
        FromDate:
          description: "The from-date.\r\nRelevant to set only for certain pay items\
            \ that have deduction processing types, and if the deduction is relevant\
            \ only for a certain time period."
          example: 2022-07-01
          format: date
          nullable: true
          type: string
        HomeWorkKilometers:
          description: "The number of kilometers driven between home and work.\r\n\
            Relevant only for pay items with the processing type FreeCarOutsideStandardRule."
          example: 99
          format: double
          nullable: true
          type: number
        Id:
          description: The identifier of the salary line.
          example: 12345
          format: int64
          readOnly: true
          type: integer
        IncomeYear:
          description: "The income year.\r\nRelevant only for pay items with certain\
            \ processing types, such as holiday pay."
          example: 2023
          format: int32
          nullable: true
          type: integer
        IsCarPool:
          description: "Value indicating whether this his salary line relate to a\
            \ car-pool or not.\r\nOnly relevant to set for pay items with the processing\
            \ type FreeCarStandardRule or FreeCarOther.\r\nWith these two processing\
            \ types, either car-pool or car registration number must be set.\r\nDefaults\
            \ to false if not set."
          example: true
          nullable: true
          type: boolean
        IsDeletedByUser:
          description: Value indicating whether this instance have been soft-deleted
            by a user in Go.
          example: true
          readOnly: true
          type: boolean
        IsLocked:
          description: "Value indicating whether this instance is locked in Go.\r\n\
            Salary lines that have been added to a payroll in Go will have this property\
            \ set true, and the lines cannot be altered by the integration if locked.\r\
            \nSalary lines are also marked as locked if they have been soft-deleted\
            \ by a user in Go."
          example: true
          readOnly: true
          type: boolean
        LastChangedDateTimeOffset:
          description: The timestamp when the salary line entity was updated.
          example: 2021-09-30T08:07:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        MaxAmount:
          description: "The maximum amount when calculating trade union deduction.\r\
            \nRelevant only for pay items with the processing type TradeUnionDeduction."
          example: 150
          format: double
          nullable: true
          type: number
        MemberNo:
          description: "The member number of the trade union or pension scheme.\r\n\
            Relevant only for pay items with the following processing types: TradeUnionDeduction,\
            \ PensionDeduction or PensionDeductionUnlimited."
          example: "12345"
          nullable: true
          type: string
        MinAmount:
          description: "The minimum amount when calculating trade union deduction.\r\
            \nRelevant only for pay items with the processing type TradeUnionDeduction."
          example: 99
          format: double
          nullable: true
          type: number
        Number:
          description: "The number field.\r\nOnly relevant for pay items with certain\
            \ processing types that require an input of the number of times an event\
            \ have occurred.\r\nFor example the number of journeys for a commuter,\
            \ if the processing type is CommuterWithNumberOfJourneys."
          example: 12
          format: int32
          nullable: true
          type: integer
        OppositeAccountId:
          description: "The identifier of the opposite account this salary line should\
            \ be posted on.\r\nSub-ledger accounts can also be referenced in this\
            \ field.\r\nIf not set, the opposite account from the pay item will be\
            \ used.\r\nIf set, any opposite account set on the pay item will be overridden\
            \ for this given salary line."
          example: 12345
          format: int64
          nullable: true
          type: integer
        PayItemId:
          description: The identifier of the pay item.
          example: 21d4ddf1-c8bf-4874-8879-b70468fa1032
          format: uuid
          nullable: true
          type: string
        PrivateDrivenKilometers:
          description: "The number of kilometers driven with private use.\r\nRelevant\
            \ only for pay items with the processing type FreeCarOutsideStandardRule\
            \ or WorkCarKilometers."
          example: 99
          format: double
          nullable: true
          type: number
        ProjectId:
          description: "The project identifier.\r\nRelevant to set if the salary line\
            \ should be posted with a given project dimension."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Quantity:
          description: "The quantity of the salary line.\r\nThe relevance of setting\
            \ quantity and the interpretation of unit depend on the pay item set.\r\
            \nFor a pay items defined with a quantity related processing types, the\
            \ quantity should be provided as the driver."
          example: 12.21
          format: double
          nullable: true
          type: number
        Rate:
          description: "The rate of the salary line.\r\nThe relevance of setting rate\
            \ depend on the pay item set.\r\nFor pay items defined with a variable\
            \ rate, the rate should be provided as the driver.\r\nFor pay items with\
            \ fixed rates, the rate is usually set on the pay item and will be overridden\
            \ if set on a salary line.\r\nAlso note that hourly wage rates are usually\
            \ calculated form the employment salary, and not needed to set on salary\
            \ lines as the system automatically calculates the rate on the payroll."
          example: 250.99
          format: double
          nullable: true
          type: number
        StartAmount:
          description: "The start amount of the salary line deduction, in the client\
            \ currency.\r\nRelevant only for pay items with the following deduction\
            \ processing types: DeductionWithBalance, AttachmentOfEarnings and AttachmentOfEarningsTax.\r\
            \nIf not set on a salary line with a pay item of one of these processing\
            \ types, the deduction will repeat until stopped.\r\nIf set, the deduction\
            \ will run until the start amount is fully covered."
          example: 99.99
          format: double
          nullable: true
          type: number
        SupplierAccountId:
          description: "The identifier of the supplier sub-ledger account to post\
            \ deductions.\r\nOnly relevant to set for pay items with the following\
            \ processing types: TradeUnionDeduction and AttachmentOfEarnings."
          example: 12345
          format: int64
          nullable: true
          type: integer
        SupplierBankAccountId:
          description: "The identifier of the supplier bank account.\r\nRelevant only\
            \ if UseRemittance is true, and for pay items with the following processing\
            \ types: TradeUnionDeduction and AttachmentOfEarnings."
          example: 12345
          format: int64
          nullable: true
          type: integer
        TaxRule:
          $ref: '#/components/schemas/TaxRuleType'
        ToDate:
          description: "The to-date.\r\nRelevant to set only for certain pay items\
            \ that have deduction processing types, and if the deduction is relevant\
            \ only for a certain time period."
          example: 2022-07-31
          format: date
          nullable: true
          type: string
        UseRemittance:
          description: "Value indicating whether to use remittance or not.\r\nOnly\
            \ relevant to set for pay items with the following processing types: TradeUnionDeduction\
            \ and AttachmentOfEarnings.\r\nDefaults to false if not set."
          example: true
          nullable: true
          type: boolean
        VatCodeId:
          description: "The VAT code identifier.\r\nRelevant to set if the salary\
            \ line is set with a pay item that have a processing type related to expense\
            \ refund subject of VAT."
          example: 12345
          format: int32
          nullable: true
          type: integer
        WorkDriveExceedsKilometerLimit:
          description: "Value indicating whether this his salary line relate to work\
            \ drive that exceeds the kilometer limit or not.\r\nRelevant only for\
            \ pay items with the processing type FreeCarStandardRule.\r\nDefault to\
            \ false if not set."
          example: true
          nullable: true
          type: boolean
      type: object
    SalaryLinePostDto:
      additionalProperties: false
      description: The salary line Post DTO contains all properties relevant to creating
        a salary line in Go.
      example:
        AccountId: 12345
        DeductionType: Amount
        ExternalImportReference: 123abc
        CommuterPersonType: ForeignCommuterWithTaxCardWithoutStandardDeduction
        CarRegistrationNo: YE79309
        MaxAmount: 150
        HomeWorkKilometers: 99
        VatCodeId: 12345
        Number: 12
        MinAmount: 99
        PrivateDrivenKilometers: 99
        SupplierBankAccountId: 12345
        WorkDriveExceedsKilometerLimit: true
        EmployeeId: 12345
        IncomeYear: 2023
        PayItemId: 21d4ddf1-c8bf-4874-8879-b70468fa1032
        Cid: "9235400011927001"
        Comment: Good job!
        OppositeAccountId: 12345
        Rate: 250.99
        Amount: 99
        ProjectId: 12345
        Quantity: 12.21
        StartAmount: 99.99
        TaxRule: Ordinary
        CarListPrice: 99
        IsCarPool: true
        FromDate: 2022-07-01
        ToDate: 2022-07-31
        UseRemittance: true
        DepartmentId: 12345
        CarRegistrationDate: 2022-07-01
        SupplierAccountId: 12345
        MemberNo: "12345"
      properties:
        AccountId:
          description: "The identifier of the account this salary line should be posted\
            \ on.\r\nSub-ledger accounts can also be referenced in this field.\r\n\
            If not set, the account from the pay item will be used.\r\nIf set, any\
            \ account set on the pay item will be overridden for this given salary\
            \ line."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Amount:
          description: "The amount of the salary line, in the client currency.\r\n\
            The relevance of setting amount depend on the pay item set.\r\nFor a pay\
            \ item with a quantity and rate, the quantity and rate should be provided\
            \ as drivers, and the system will calculate the amount."
          example: 99
          format: double
          nullable: true
          type: number
        CarListPrice:
          description: "The list price of the car, in the client currency.\r\nRelevant\
            \ only for pay items with free car/work car processing types, where the\
            \ list price is required."
          example: 99
          format: double
          nullable: true
          type: number
        CarRegistrationDate:
          description: "The registration date of the car.\r\nRelevant to set only\
            \ for certain pay items with car/work car related processing types."
          example: 2022-07-01
          format: date
          nullable: true
          type: string
        CarRegistrationNo:
          description: "The registration number of the car.\r\nRelevant to set only\
            \ for certain pay items with car/work car related processing types."
          example: YE79309
          nullable: true
          type: string
        Cid:
          description: "The CID number (norwegian: KID), relevant if UseRemittance\
            \ and SupplierBankAccountId is set.\r\nOnly relevant to set for pay items\
            \ with the following processing types: TradeUnionDeduction and AttachmentOfEarnings."
          example: "9235400011927001"
          nullable: true
          type: string
        Comment:
          description: "A comment to the salary line.\r\nWill be shown on the employee\
            \ payslip if set."
          example: Good job!
          nullable: true
          type: string
        CommuterPersonType:
          $ref: '#/components/schemas/CommuterPersonType'
        DeductionType:
          $ref: '#/components/schemas/DeductionType'
        DepartmentId:
          description: "The department identifier.\r\nRelevant to set if the salary\
            \ line should be posted with a given department dimension.\r\nIf not set,\
            \ the department will inherit the department set on the employee if/when\
            \ the salary line is included in a payroll."
          example: 12345
          format: int64
          nullable: true
          type: integer
        EmployeeId:
          description: The identifier of the employee this salary line concerns.
          example: 12345
          format: int64
          nullable: true
          type: integer
        ExternalImportReference:
          description: "The external import reference.\r\nThis property can be set\
            \ by integrations in order to reference the external system and ensure\
            \ a duplicate check when posting the salary line to Go (only one instance\
            \ of the reference can exist).\r\nCan be used to correlate/duplicate check\
            \ salary lines."
          example: 123abc
          nullable: true
          type: string
        FromDate:
          description: "The from-date.\r\nRelevant to set only for certain pay items\
            \ that have deduction processing types, and if the deduction is relevant\
            \ only for a certain time period."
          example: 2022-07-01
          format: date
          nullable: true
          type: string
        HomeWorkKilometers:
          description: "The number of kilometers driven between home and work.\r\n\
            Relevant only for pay items with the processing type FreeCarOutsideStandardRule."
          example: 99
          format: double
          nullable: true
          type: number
        IncomeYear:
          description: "The income year.\r\nRelevant only for pay items with certain\
            \ processing types, such as holiday pay."
          example: 2023
          format: int32
          nullable: true
          type: integer
        IsCarPool:
          description: "Value indicating whether this his salary line relate to a\
            \ car-pool or not.\r\nOnly relevant to set for pay items with the processing\
            \ type FreeCarStandardRule or FreeCarOther.\r\nWith these two processing\
            \ types, either car-pool or car registration number must be set.\r\nDefaults\
            \ to false if not set."
          example: true
          nullable: true
          type: boolean
        MaxAmount:
          description: "The maximum amount when calculating trade union deduction.\r\
            \nRelevant only for pay items with the processing type TradeUnionDeduction."
          example: 150
          format: double
          nullable: true
          type: number
        MemberNo:
          description: "The member number of the trade union or pension scheme.\r\n\
            Relevant only for pay items with the following processing types: TradeUnionDeduction,\
            \ PensionDeduction or PensionDeductionUnlimited."
          example: "12345"
          nullable: true
          type: string
        MinAmount:
          description: "The minimum amount when calculating trade union deduction.\r\
            \nRelevant only for pay items with the processing type TradeUnionDeduction."
          example: 99
          format: double
          nullable: true
          type: number
        Number:
          description: "The number field.\r\nOnly relevant for pay items with certain\
            \ processing types that require an input of the number of times an event\
            \ have occurred.\r\nFor example the number of journeys for a commuter,\
            \ if the processing type is CommuterWithNumberOfJourneys."
          example: 12
          format: int32
          nullable: true
          type: integer
        OppositeAccountId:
          description: "The identifier of the opposite account this salary line should\
            \ be posted on.\r\nSub-ledger accounts can also be referenced in this\
            \ field.\r\nIf not set, the opposite account from the pay item will be\
            \ used.\r\nIf set, any opposite account set on the pay item will be overridden\
            \ for this given salary line."
          example: 12345
          format: int64
          nullable: true
          type: integer
        PayItemId:
          description: The identifier of the pay item.
          example: 21d4ddf1-c8bf-4874-8879-b70468fa1032
          format: uuid
          nullable: true
          type: string
        PrivateDrivenKilometers:
          description: "The number of kilometers driven with private use.\r\nRelevant\
            \ only for pay items with the processing type FreeCarOutsideStandardRule\
            \ or WorkCarKilometers."
          example: 99
          format: double
          nullable: true
          type: number
        ProjectId:
          description: "The project identifier.\r\nRelevant to set if the salary line\
            \ should be posted with a given project dimension."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Quantity:
          description: "The quantity of the salary line.\r\nThe relevance of setting\
            \ quantity and the interpretation of unit depend on the pay item set.\r\
            \nFor a pay items defined with a quantity related processing types, the\
            \ quantity should be provided as the driver."
          example: 12.21
          format: double
          nullable: true
          type: number
        Rate:
          description: "The rate of the salary line.\r\nThe relevance of setting rate\
            \ depend on the pay item set.\r\nFor pay items defined with a variable\
            \ rate, the rate should be provided as the driver.\r\nFor pay items with\
            \ fixed rates, the rate is usually set on the pay item and will be overridden\
            \ if set on a salary line.\r\nAlso note that hourly wage rates are usually\
            \ calculated form the employment salary, and not needed to set on salary\
            \ lines as the system automatically calculates the rate on the payroll."
          example: 250.99
          format: double
          nullable: true
          type: number
        StartAmount:
          description: "The start amount of the salary line deduction, in the client\
            \ currency.\r\nRelevant only for pay items with the following deduction\
            \ processing types: DeductionWithBalance, AttachmentOfEarnings and AttachmentOfEarningsTax.\r\
            \nIf not set on a salary line with a pay item of one of these processing\
            \ types, the deduction will repeat until stopped.\r\nIf set, the deduction\
            \ will run until the start amount is fully covered."
          example: 99.99
          format: double
          nullable: true
          type: number
        SupplierAccountId:
          description: "The identifier of the supplier sub-ledger account to post\
            \ deductions.\r\nOnly relevant to set for pay items with the following\
            \ processing types: TradeUnionDeduction and AttachmentOfEarnings."
          example: 12345
          format: int64
          nullable: true
          type: integer
        SupplierBankAccountId:
          description: "The identifier of the supplier bank account.\r\nRelevant only\
            \ if UseRemittance is true, and for pay items with the following processing\
            \ types: TradeUnionDeduction and AttachmentOfEarnings."
          example: 12345
          format: int64
          nullable: true
          type: integer
        TaxRule:
          $ref: '#/components/schemas/TaxRuleType'
        ToDate:
          description: "The to-date.\r\nRelevant to set only for certain pay items\
            \ that have deduction processing types, and if the deduction is relevant\
            \ only for a certain time period."
          example: 2022-07-31
          format: date
          nullable: true
          type: string
        UseRemittance:
          description: "Value indicating whether to use remittance or not.\r\nOnly\
            \ relevant to set for pay items with the following processing types: TradeUnionDeduction\
            \ and AttachmentOfEarnings.\r\nDefaults to false if not set."
          example: true
          nullable: true
          type: boolean
        VatCodeId:
          description: "The VAT code identifier.\r\nRelevant to set if the salary\
            \ line is set with a pay item that have a processing type related to expense\
            \ refund subject of VAT."
          example: 12345
          format: int32
          nullable: true
          type: integer
        WorkDriveExceedsKilometerLimit:
          description: "Value indicating whether this his salary line relate to work\
            \ drive that exceeds the kilometer limit or not.\r\nRelevant only for\
            \ pay items with the processing type FreeCarStandardRule.\r\nDefault to\
            \ false if not set."
          example: true
          nullable: true
          type: boolean
      required:
      - EmployeeId
      - PayItemId
      type: object
    AssignmentGeneralDto:
      additionalProperties: false
      description: The available properties for the Quality Assignment General DTO
        in Go
      example:
        Status: Draft
        KeyAccountManagerSubledgerAccountId: 123456
        SubjectToAudit: "Yes"
        Description: The very best accounting assignment
        AgreementSignedDate: 2003-07-15
        AssociateSubledgerAccountId: 123456
        AuditorId: 12345
        CustomerContactPersonId: 123456
        ProjectId: 123456
        ReasonForContact: The contact needs auditing
        CustomerSubledgerAccountId: 123456
        EndDate: 2003-07-15
        NoticePeriod: 24
        StartDate: 2003-07-15
        RevisionDate: 2003-07-15
        AuditingCompanyId: 123456
        PayrollManagerSubledgerAccountId: 123456
        CurrentAgreementDate: 2003-07-15
        Id: 123456
        ManagerSubledgerAccountId: 123456
        PurposeForContact: The contact needs auditing
      properties:
        AgreementSignedDate:
          description: The date the assignment agreement was signed.
          example: 2003-07-15
          format: date
          nullable: true
          type: string
        AssociateSubledgerAccountId:
          description: "The identifier of the employee subledger account, identifying\
            \ the employee set as the assignment associate for this quality assignment.\
            \ If null, this property inherit from the assignment manager property.\
            \ Employees can be queried and identified using the Employees endpoint"
          example: 123456
          format: int64
          nullable: true
          type: integer
        AuditingCompanyId:
          description: "The id of the audit company. Relevant only the customer is\
            \ subject for audit, ie. AuditStatus is 'Yes'"
          example: 123456
          format: int64
          nullable: true
          type: integer
        AuditorId:
          description: "The id of the auditor. Relevant only the customer is subject\
            \ for audit, ie. AuditStatus is 'Yes'"
          example: 12345
          format: int64
          nullable: true
          type: integer
        CurrentAgreementDate:
          description: The current date of the quality assignment agreement.
          example: 2003-07-15
          format: date
          nullable: true
          type: string
        CustomerContactPersonId:
          description: The id of the customer's contact person associated with the
            quality assignment. Contact persons can be queried and identified using
            the ContactPersons endpoint.
          example: 123456
          format: int64
          nullable: true
          type: integer
        CustomerSubledgerAccountId:
          description: "The id of the customer subledger account, identifying the\
            \ customer associated with the quality assignment. Customers can be queried\
            \ and identified using the Customers endpoint."
          example: 123456
          format: int64
          nullable: true
          type: integer
        Description:
          description: The description of the quality assignment.
          example: The very best accounting assignment
          nullable: true
          type: string
        EndDate:
          description: The start date of the quality assignment. Date is inclusive.
          example: 2003-07-15
          format: date
          nullable: true
          type: string
        Id:
          description: The identifier of the quality assignment entity. The id is
            assigned by Go when the assignment entity is created.
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        KeyAccountManagerSubledgerAccountId:
          description: "The identifier of the employee subledger account, identifying\
            \ the employee set as the key account manager for this quality assignment.\
            \ If null, this property inherit from the assignment manager property.\
            \ Employees can be queried and identified using the Employees endpoint"
          example: 123456
          format: int64
          nullable: true
          type: integer
        ManagerSubledgerAccountId:
          description: "The identifier of the employee subledger account, identifying\
            \ the employee set as the assignment manager for this quality assignment.\
            \ Employees can be queried and identified using the Employees endpoint"
          example: 123456
          format: int64
          nullable: true
          type: integer
        NoticePeriod:
          description: "The notice period, in months, if the agreement should be resigned.\r\
            \nMust be a positive integer between 1 and 24."
          example: 24
          format: int32
          maximum: 24
          minimum: 1
          type: integer
        PayrollManagerSubledgerAccountId:
          description: "The identifier of the employee subledger account, identifying\
            \ the employee set as the assignment payroll manager for this quality\
            \ assignment. If null, this property inherit from the assignment manager\
            \ property. Employees can be queried and identified using the Employees\
            \ endpoint"
          example: 123456
          format: int64
          nullable: true
          type: integer
        ProjectId:
          description: The id of the project associated with the quality assignment.
            Projects can be queried and identified using the Project endpoint.
          example: 123456
          format: int64
          nullable: true
          type: integer
        PurposeForContact:
          description: A description of the purpose for contact.
          example: The contact needs auditing
          maxLength: 2000
          nullable: true
          type: string
        ReasonForContact:
          description: A description of the reason for contact.
          example: The contact needs auditing
          maxLength: 2000
          nullable: true
          type: string
        RevisionDate:
          description: The date of the last revision of the assignment.
          example: 2003-07-15
          format: date
          nullable: true
          type: string
        StartDate:
          description: The start date of the quality assignment. Date is inclusive.
          example: 2003-07-15
          format: date
          nullable: true
          type: string
        Status:
          $ref: '#/components/schemas/AssignmentAgreementStatus'
        SubjectToAudit:
          $ref: '#/components/schemas/SubjectToAuditType'
      type: object
    AssignmentAgreementStatus:
      description: Status of an assignment (draft vs active vs archived)<p>Members:</p><ul><li><i>Draft</i>
        - The assignment is in a draft state</li><li><i>Active</i> - The assignment
        is active</li><li><i>Archived</i> - The assigment is archived</li></ul>
      enum:
      - Draft
      - Active
      - Archived
      nullable: true
      type: string
    SubjectToAuditType:
      description: Available audit states of the customer<p>Members:</p><ul><li><i>Yes</i>
        - The customer is subject of audit</li><li><i>OptedOut</i> - The customer
        may be subject of audit but have opted out</li><li><i>No</i> - Customer is
        not subject of audit</li></ul>
      enum:
      - "Yes"
      - OptedOut
      - "No"
      nullable: true
      type: string
    InviteUserPostDto:
      additionalProperties: false
      description: The available properties when inviting users to Go.
      example:
        FirstName: Espen
        AccessRoleId: 09ab6bcf-4219-4149-8283-6b6a7342bfd9
        FromDate: 2024-01-01
        ToDate: 2024-01-31
        InviteAsEmployee: true
        LastName: Askeladd
        EmailAddress: abc@test.yxz
      properties:
        AccessRoleId:
          description: The access role id the user have on the client.
          example: 09ab6bcf-4219-4149-8283-6b6a7342bfd9
          format: uuid
          type: string
        EmailAddress:
          description: The e-mail address of the user.
          example: abc@test.yxz
          nullable: true
          type: string
        FirstName:
          description: The first name of the user.
          example: Espen
          nullable: true
          type: string
        FromDate:
          description: "From date, inclusive.\r\nThe user will have access to the\
            \ client from this date.\r\nIf not set, the user will have access from\
            \ the day the user accept the invitation."
          example: 2024-01-01
          format: date
          nullable: true
          type: string
        InviteAsEmployee:
          description: "Indicates whether the user should be added as an employee\
            \ on the client.\r\nIf true, an employee object will be created and linked\
            \ to the user after the invitation is accepted."
          example: true
          nullable: true
          type: boolean
        LastName:
          description: The last name of the user.
          example: Askeladd
          nullable: true
          type: string
        ToDate:
          description: "To date, inclusive.\r\nThe user will have access to the client\
            \ until and including this date.\r\nAfterwards, the user is deactivated\
            \ on the client.\r\nIf not set, the user will have no time restricted\
            \ access."
          example: 2024-01-31
          format: date
          nullable: true
          type: string
      required:
      - AccessRoleId
      - EmailAddress
      - FirstName
      - LastName
      type: object
    SupplierCreditNoteJournalEntryVoucherPostDto:
      additionalProperties: false
      description: Properties available for creating a journal entry supplier credit
        note.
      example:
        Description: My first voucher description
        Dim3Id: 12345
        Dim2Id: 12345
        Dim1Id: 12345
        SupplierVoucherLines:
        - DebitAccountId: 12345
          Accrual:
            BalanceAccountNo: 2970
            IsActive: true
            BalanceAccountAgricultureDepartment: None
            FromDate: 2023-01-01
            ToDate: 2023-12-31
            BalanceAccountId: 123456
          Description: Hello accounting world!
          CreditVatId: 12345
          Dim3Id: 12345
          Dim2Id: 12345
          DebitVatId: 12345
          Dim1Id: 12345
          CreditAccountType: Customer
          ProductId: 12345
          CreditVatReturnSpecification: None
          ItemDescription: ItemDescription
          CreditContactId: 123456
          DebitContactId: 123456
          DebitAccountAgricultureDepartment: null
          DebitVatReturnSpecification: null
          SellersItemIdentification: SellersItemIdentification
          ItemName: ItemName
          DebitAccountType: null
          CreditAccountId: 12345
          LocationId: 12345
          ProjectId: 12345
          Quantity: 100
          CreatedDateTimeOffset: 2024-03-20T12:52:00.1234567Z
          CurrencyAmount: 69420
          Quantity2: 200
          AgricultureDetails:
            ProductCode: 1
            ProductDetailCode: 5
            ProductQualityCode: 5
            ProductRegistrationId: ProductRegistrationId
            ProductGtinNumber: ProductGtinNumber
            ProductRacialCode: ProductRacialCode
            ProductAnimalId: ProductAnimalId
            ProductHasForestCertificationCode: true
            IsMainProductLine: true
            ProductAdditionSubtractionCode: 6
            ProductGender: Male
            AgriculturalIndustryCode: 0
            ProductMachineType: ProductMachineType
            ProductEcological: true
            ProductDateOfBirth: 2000-01-23
            ProductChassisId: ProductChassisId
          DepartmentId: 12345
          Id: 12345
          CreditAccountAgricultureDepartment: None
          LastChangedDateTimeOffset: 2024-03-20T13:13:00.1234567Z
        - DebitAccountId: 12345
          Accrual:
            BalanceAccountNo: 2970
            IsActive: true
            BalanceAccountAgricultureDepartment: None
            FromDate: 2023-01-01
            ToDate: 2023-12-31
            BalanceAccountId: 123456
          Description: Hello accounting world!
          CreditVatId: 12345
          Dim3Id: 12345
          Dim2Id: 12345
          DebitVatId: 12345
          Dim1Id: 12345
          CreditAccountType: Customer
          ProductId: 12345
          CreditVatReturnSpecification: None
          ItemDescription: ItemDescription
          CreditContactId: 123456
          DebitContactId: 123456
          DebitAccountAgricultureDepartment: null
          DebitVatReturnSpecification: null
          SellersItemIdentification: SellersItemIdentification
          ItemName: ItemName
          DebitAccountType: null
          CreditAccountId: 12345
          LocationId: 12345
          ProjectId: 12345
          Quantity: 100
          CreatedDateTimeOffset: 2024-03-20T12:52:00.1234567Z
          CurrencyAmount: 69420
          Quantity2: 200
          AgricultureDetails:
            ProductCode: 1
            ProductDetailCode: 5
            ProductQualityCode: 5
            ProductRegistrationId: ProductRegistrationId
            ProductGtinNumber: ProductGtinNumber
            ProductRacialCode: ProductRacialCode
            ProductAnimalId: ProductAnimalId
            ProductHasForestCertificationCode: true
            IsMainProductLine: true
            ProductAdditionSubtractionCode: 6
            ProductGender: Male
            AgriculturalIndustryCode: 0
            ProductMachineType: ProductMachineType
            ProductEcological: true
            ProductDateOfBirth: 2000-01-23
            ProductChassisId: ProductChassisId
          DepartmentId: 12345
          Id: 12345
          CreditAccountAgricultureDepartment: None
          LastChangedDateTimeOffset: 2024-03-20T13:13:00.1234567Z
        CurrencyCode: EUR
        VoucherDate: 2024-03-20
        Payout: false
        SupplierBankAccountId: 12345
        ClientBankAccountId: 12345
        Cid: "9235400011927001"
        Comment: My first supplier credit note comment.
        PaymentDate: 2024-03-31
        LocationId: 12345
        ProjectId: 12345
        CreditNoteNo: CN-1234
        CurrencyExchangeRate: 10.78
        AppliesInvoiceId: 032fbead-2c9b-4521-9ff8-158a0baefdd8
        CurrencyAmount: 69420
        AppliesInvoiceNo: SI-1234
        CurrencyRegistryText: EUR
        PaymentOnHold: false
        DepartmentId: 12345
        CurrencyRegistryCode: None
        SupplierAccountId: 12345
      properties:
        AppliesInvoiceId:
          description: "Identifier of the supplier invoice being credited by the credit\
            \ note.\r\nThe supplierAccountId must be the same as the supplierAccountId\
            \ of the invoice that is being credited."
          example: 032fbead-2c9b-4521-9ff8-158a0baefdd8
          format: uuid
          nullable: true
          type: string
        AppliesInvoiceNo:
          description: "Reference to the invoice being credited by the credit note.\r\
            \nThe supplierAccountId must be the same as the supplierAccountId of the\
            \ invoice that is being credited."
          example: SI-1234
          nullable: true
          type: string
        Cid:
          description: "The cid number (norwegian: KID), if applicable to the voucher."
          example: "9235400011927001"
          nullable: true
          type: string
        ClientBankAccountId:
          description: "The identifier of the client bank account used for payment/remittance.\r\
            \nRelevant if payout is true. If not set, the default client bank account\
            \ will be used for any remittance."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Comment:
          description: "Optional comment that will be shown in the journal entry history\
            \ in Go.\r\nOnly new vouchers will get the comment as part of the initial\
            \ history.\r\nIt is thus not possible to change the comment later, and\
            \ it will not be returned in API-calls.\r\nThe comment text should be\
            \ human-readable. If necessary, use newline characters (\\n) to format\
            \ the text for better readability"
          example: My first supplier credit note comment.
          maxLength: 1000
          nullable: true
          type: string
        CreditNoteNo:
          description: The credit note number of the supplier credit note.
          example: CN-1234
          maxLength: 40
          nullable: true
          type: string
        CurrencyAmount:
          description: "The total amount of the supplier voucher, in the currency\
            \ specified by the currency code of the voucher."
          example: 69420
          format: double
          type: number
        CurrencyCode:
          description: "The currency code of the voucher header.\r\nThe line amounts\
            \ will default be determined in the currency specified in the header.\r\
            \nFor some voucher types, different currency codes can be set on the line\
            \ level, thus overriding the currency of the head.\r\nCurrencies active\
            \ on the client can be queried using the AccountingSettings service. Currency\
            \ codes follow the ISO4217 standard."
          example: EUR
          maxLength: 3
          minLength: 0
          nullable: true
          type: string
        CurrencyExchangeRate:
          description: "The normalized currency exchange rate.\r\nAlways base 1.\r\
            \nRelevant to set if the voucher have a foreign currency with a specific\
            \ currency exchange rate.\r\nIf not set, the field will inherit the rate\
            \ in Go for the voucher date set.\r\nThe rates in Go are retrieved from\
            \ ECB via API."
          example: 10.78
          format: double
          nullable: true
          type: number
        CurrencyRegistryCode:
          $ref: '#/components/schemas/CurrencyRegistryCode'
        CurrencyRegistryText:
          description: The currency registry text of the supplier invoice.
          example: EUR
          nullable: true
          type: string
        DepartmentId:
          description: "The department Id of the voucher header.\r\nThe lines will\
            \ inherit the department from the voucher head if not specified on the\
            \ lines.\r\nDepartments can be queried and identified using the Department\
            \ service."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Description:
          description: The description field of the voucher header.
          example: My first voucher description
          nullable: true
          type: string
        Dim1Id:
          description: "The id of the dimension 1 associated with the voucher header.\r\
            \nThe lines will inherit the dim1 from the voucher head if not specified\
            \ on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim2Id:
          description: "The id of the dimension 2 associated with the voucher header.\r\
            \nThe lines will inherit the dim2 from the voucher head if not specified\
            \ on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim3Id:
          description: "The id of the dimension 3 associated with the voucher header.\r\
            \nThe lines will inherit the dim3 from the voucher head if not specified\
            \ on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        LocationId:
          description: "The id of the location dimension associated with the voucher\
            \ header.\r\nThe lines will inherit the location from the voucher head\
            \ if not specified on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        PaymentDate:
          description: "The suggested payment date if this voucher is to be subject\
            \ of remittance.\r\nRelevant if payout is set true.\r\nIf not set in POST\
            \ or PATCH operations, the field will default to the due date of supplier\
            \ invoices and the voucher date of supplier credit notes.\r\nTo remove\
            \ any value from PaymentDate in PATCH, both PaymentDate and DueDate must\
            \ be removed."
          example: 2024-03-31
          format: date
          nullable: true
          type: string
        PaymentOnHold:
          description: "Property indicating whether the voucher remittance should\
            \ be on hold.\r\nDefault false, and if true a remittance draft will be\
            \ created when the voucher is posted, but with no payment date suggested\
            \ - rather the state 'on hold'."
          example: false
          nullable: true
          type: boolean
        Payout:
          description: "Property indicating whether the voucher should be paid using\
            \ remittance.\r\nDefault true, and if true a remittance draft will be\
            \ created when the voucher is posted."
          example: false
          nullable: true
          type: boolean
        ProjectId:
          description: "The id of the project associated with the voucher header.\r\
            \nThe lines will inherit the project from the voucher head if not specified\
            \ on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        SupplierAccountId:
          description: The id of the supplier subledger account.
          example: 12345
          format: int64
          nullable: true
          type: integer
        SupplierBankAccountId:
          description: The identifier of the supplier bank account associated with
            the voucher.
          example: 12345
          format: int64
          nullable: true
          type: integer
        SupplierVoucherLines:
          description: The lines of the supplier credit note.
          items:
            $ref: '#/components/schemas/SupplierVoucherLineDto'
          nullable: true
          type: array
        VoucherDate:
          description: "The voucher date.\r\nThis represents the date of the voucher,\
            \ the document date of an invoice for instance,\r\nand may differ from\
            \ the transaction dates for lines the voucher, depending on the type of\
            \ voucher."
          example: 2024-03-20
          format: date
          nullable: true
          type: string
      required:
      - CreditNoteNo
      - CurrencyCode
      - VoucherDate
      type: object
    ClientPostDto:
      additionalProperties: false
      description: "The available properties for the client organization settings,\
        \ when creating new clients"
      example:
        ClientName: Office Power
        LegalName: PowerOffice AS
        OrganizationNumber: "980386465"
        MailAddress:
          AddressLine2: "Att: Ola Nordmann"
          AddressLine1: Postboks 404
          ZipCode: "0161"
          City: Oslo
          CountryCode: "NO"
        IsVatRegistered: true
        AdminUserId: 09ab6bcf-4219-4149-8283-6b6a7342bfd9
        UseVatCompensation: true
        ConversionDate: 2024-01-01
        FinancialYearEndMonth: January
        TemplateClientId: 09ab6bcf-4219-4149-8283-6b6a7342bfd9
      properties:
        AdminUserId:
          description: "The identifier of the user that will be the client subscription\
            \ administrator.\r\nThis user will automatically be added to the client\
            \ as an administrator."
          example: 09ab6bcf-4219-4149-8283-6b6a7342bfd9
          format: uuid
          type: string
        ClientName:
          description: The name of the client.
          example: Office Power
          nullable: true
          type: string
        ConversionDate:
          description: "The start date of processing in Go.\r\nThe start day will\
            \ always be set as the first day of the month provided, in the year provided.\r\
            \nThe conversion date is the date the client started using Go.\r\nTransactions\
            \ can only be posted on or after this date.\r\nThe date can also be used\
            \ to identify the date of the start-balance in Go, which will be this\
            \ date -1 day.\r\nIf not set, the conversion date will default to January\
            \ of the current year."
          example: 2024-01-01
          format: date
          nullable: true
          type: string
        FinancialYearEndMonth:
          $ref: '#/components/schemas/Months'
        IsVatRegistered:
          description: "Information on whether this this client is registered for\
            \ Value Added Tax (VAT, norwegian: mva-registrert).\r\nIf false, vat is\
            \ not applied to outgoing invoices."
          example: true
          nullable: true
          type: boolean
        LegalName:
          description: "The legal name of the client.\r\nThe legal name is the formal\
            \ name, and might differ from the marketing name."
          example: PowerOffice AS
          nullable: true
          type: string
        MailAddress:
          $ref: '#/components/schemas/AddressPostDto'
        OrganizationNumber:
          description: The organization number of the client.
          example: "980386465"
          nullable: true
          type: string
        TemplateClientId:
          description: "The unique identifier of the template client to be used, if\
            \ applicable.\r\nIf set, the new client will inherit the setup of general\
            \ ledger accounts, activities, roles and Altinn settings.\r\nIf not provided,\
            \ a standard Go template is used for the new client."
          example: 09ab6bcf-4219-4149-8283-6b6a7342bfd9
          format: uuid
          nullable: true
          type: string
        UseVatCompensation:
          description: "Information on whether this client are entitled to and uses\
            \ vat compensation.\r\nIf true, vat codes with first letter notation K\
            \ can be used when relevant for the client."
          example: true
          nullable: true
          type: boolean
      required:
      - AdminUserId
      - ClientName
      - LegalName
      - MailAddress
      - OrganizationNumber
      type: object
    AddressPostDto:
      additionalProperties: false
      description: "The address post DTO contains all properties relevant to creating\
        \ a new address object in Go.\r\nAddress representing a physical location."
      example:
        AddressLine2: "Att: Ola Nordmann"
        AddressLine1: Postboks 404
        ZipCode: "0161"
        City: Oslo
        CountryCode: "NO"
      properties:
        AddressLine1:
          description: The first (main) address line.
          example: Postboks 404
          maxLength: 200
          nullable: true
          type: string
        AddressLine2:
          description: The second address line.
          example: "Att: Ola Nordmann"
          maxLength: 200
          nullable: true
          type: string
        City:
          description: The city.
          example: Oslo
          maxLength: 100
          nullable: true
          type: string
        CountryCode:
          description: "The ISO 3166-1 alfa-2 country code (two characters).\r\nDefaults\
            \ to \"NO\" if not set."
          example: "NO"
          nullable: true
          type: string
        ZipCode:
          description: The zip code (postal code).
          example: "0161"
          maxLength: 50
          nullable: true
          type: string
      required:
      - City
      - ZipCode
      type: object
    EmploymentPostDto:
      additionalProperties: false
      description: The Employment post DTO contains properties relevant to creating
        a new employment relationship object in Go.
      example:
        IsDefault: true
        FullTimeHoursPerWeek: 37.5
        ReportingId: POGO_24677
        TaxCountryCode: SE
        EmploymentType: Ordinary
        EndDate: 2022-07-31
        EnterpriseId: 12345
        StartDate: 2021-01-01
        EmploymentSpecification: None
        EmploymentForm: Permanent
        TaxRule: Ordinary
        ProfessionCode: "5163121"
        EndDateReason: EmploymentRelationshipShouldNeverHaveBeenReported
        WorkingHoursArrangement: NonShift
      properties:
        EmploymentForm:
          $ref: '#/components/schemas/EmploymentFormType'
        EmploymentSpecification:
          $ref: '#/components/schemas/EmploymentSpecificationType'
        EmploymentType:
          $ref: '#/components/schemas/EmploymentType'
        EndDate:
          description: The end date of the employment.
          example: 2022-07-31
          format: date
          nullable: true
          type: string
        EndDateReason:
          $ref: '#/components/schemas/EndDateReasonType'
        EnterpriseId:
          description: The identifier of the enterprise for the employment.
          example: 12345
          format: int64
          nullable: true
          type: integer
        FullTimeHoursPerWeek:
          description: The number of hours that would represent full time week of
            employment.
          example: 37.5
          format: double
          nullable: true
          type: number
        IsDefault:
          description: Indicates if the employment is the default employment for the
            employee.
          example: true
          nullable: true
          type: boolean
        ProfessionCode:
          description: "The profession code of the employment.\r\nThe code follow\
            \ SSB's STYRK-98 standard with 7 digits."
          example: "5163121"
          nullable: true
          type: string
        ReportingId:
          description: "The id of the employment that will be reported.\r\nCan be\
            \ set to match the id of the previous payroll system.\r\nIf not set, Go\
            \ will assign an id."
          example: POGO_24677
          nullable: true
          type: string
        StartDate:
          description: The start date of the employment.
          example: 2021-01-01
          format: date
          nullable: true
          type: string
        TaxCountryCode:
          description: "The ISO 3166-1 alfa-2 country code (two characters).\r\nCan\
            \ only be set to Finland (FI) or Sweden (SE) if employment specification\
            \ is set to cross border commuter."
          example: SE
          nullable: true
          type: string
        TaxRule:
          $ref: '#/components/schemas/TaxRuleType'
        WorkingHoursArrangement:
          $ref: '#/components/schemas/WorkingHoursArrangementType'
      required:
      - EmploymentForm
      - EmploymentType
      - EnterpriseId
      - FullTimeHoursPerWeek
      - IsDefault
      - ProfessionCode
      - StartDate
      - WorkingHoursArrangement
      type: object
    SalesOrderDto:
      additionalProperties: false
      description: The sales order DTO contains all properties relevant to a sales
        order (invoice draft) in Go without sales order lines.
      example:
        SalesOrderStatus: Draft
        SalesPersonEmployeeNumber: 3
        Dim3Id: 123456
        Dim2Id: 123456
        Dim1Code: dim1
        Dim1Id: 123456
        Dim2Code: dim2
        ExternalImportReference: 123abc
        DeliveryDate: 2022-08-05
        SalesOrderNo: 6065
        LineCount: 3
        CustomerNo: 10010
        CurrencyCode: NOK
        DeliveryTerm: DAP
        ContractNo: 123-244A
        PurchaseOrderReference: qwerty12345
        NetAmount: 1000.33
        ImportedOrderNo: 23145
        ProjectCode: "100"
        CustomMatchingReference: 123ABC
        SalesOrderDate: 2022-08-05
        IsCreatedByCurrentIntegration: true
        DepartmentCode: 1A
        BrandingThemeId: 123456
        PaymentTermId: 123456
        SalesPersonEmployeeId: 123456
        LocationCode: "123546"
        LocationId: 123456
        ProjectId: 123456
        CurrencyExchangeRate: 6.027456183070403
        CustomerId: 123456
        PaymentTerm: 14
        TotalAmount: 12500.33
        RelatedInvoiceNo: 12345
        CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        CustomerReference: 123ABC
        CustomerReferenceContactPersonId: 1
        ContactDeliveryAddressId: 0
        Dim3Code: dim3
        BrandingThemeCode: "4"
        DepartmentId: 123456
        Id: ee373540-ca8d-4562-8fb6-6fb52de47722
        DeliveryTermId: 47001
        LastChangedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
      properties:
        BrandingThemeCode:
          description: "The code of the branding theme associated with the sales order.\r\
            \nBranding themes can be queried and identified using the Sales Settings\
            \ endpoint."
          example: "4"
          nullable: true
          readOnly: true
          type: string
        BrandingThemeId:
          description: "The id of the branding theme associated with the sales order.\r\
            \nIf null in the header, the value may inherit from any project set on\
            \ the sales order, or from the clients default branding theme.\r\nBranding\
            \ themes can be queried and identified using the Sales Settings endpoint."
          example: 123456
          format: int64
          nullable: true
          type: integer
        ContactDeliveryAddressId:
          description: "The id of the contact delivery address associated with the\
            \ sales order.\r\nContact delivery addresses can be queries and identified\
            \ using the Contact Delivery Addresses endpoint."
          format: int64
          nullable: true
          type: integer
        ContractNo:
          description: The contract number.
          example: 123-244A
          nullable: true
          type: string
        CreatedDateTimeOffset:
          description: The timestamp when the sales order was created.
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        CurrencyCode:
          description: "The standard currency code for the sales order.\r\nCurrencies\
            \ active on the client can be queried using the AccountingSettings service.\r\
            \nCurrency codes follow the ISO4217 standard.\r\nDefaults to NOK, but\
            \ may inherit the value set on the Customer entity if null."
          example: NOK
          nullable: true
          type: string
        CurrencyExchangeRate:
          description: "The normalized currency exchange rate.\r\nAlways base 1."
          format: double
          nullable: true
          type: number
        CustomMatchingReference:
          description: "The custom matching reference of the sales order.\r\nThis\
            \ property will only have value on entries created through the API or\
            \ Import with CustomMatchingReference specified.\r\nThis property is used\
            \ for matching purposes in the customer sub-ledger account, where entries\
            \ posted with a CustomMatchingReference will be matched immediately with\
            \ existing entries in the sub-ledger that have the same CustomMatchingReference\
            \ and opposite amount (unless existing entries are already matched out)."
          example: 123ABC
          nullable: true
          type: string
        CustomerId:
          description: "The id of the customer associated with the sales order.\r\n\
            Customers can be queried and identified using the Customers endpoint."
          example: 123456
          format: int64
          nullable: true
          type: integer
        CustomerNo:
          description: "The number of the customer associated with the sales order.\r\
            \nCustomers can be queried and identified using the Customers endpoint."
          example: 10010
          format: int64
          nullable: true
          readOnly: true
          type: integer
        CustomerReference:
          description: "The customer reference (ie buyers reference) of the sales\
            \ order.\r\nThis property is often used to give the receiver of the (eventual)\
            \ invoice a reference they are familiar with.\r\nIf CustomerReferenceContactPersonId\
            \ has value, the name of the customers contact person is returned on get,\r\
            \notherwise the \"Your Reference\" text used on the (eventual) invoice\
            \ will be returned."
          example: 123ABC
          nullable: true
          type: string
        CustomerReferenceContactPersonId:
          description: "The id of the customer reference contact person (ie buyers\
            \ reference) of the sales order.\r\nIf null, the value will be inherited\
            \ from the project or the customer associated with the sales order.\r\n\
            If set, the contact persons name will be set as the CustomerReference\
            \ on the sales order.\r\nContact persons can be queried and identified\
            \ using the Contact person endpoint."
          format: int64
          nullable: true
          type: integer
        DeliveryDate:
          description: "The delivery date of the sales order.\r\nWill default to the\
            \ date when the sales order is sent (converted to invoice) if not set\
            \ via import or api."
          example: 2022-08-05
          format: date
          nullable: true
          type: string
        DeliveryTerm:
          description: "The delivery term of the sales order.\r\nIf null, the value\
            \ will be inherited from project, customer or the client delivery term\
            \ settings.\r\nDelivery terms can be queried and identified using the\
            \ Delivery terms endpoint."
          example: DAP
          nullable: true
          readOnly: true
          type: string
        DeliveryTermId:
          description: "The id of the delivery term of the sales order.\r\nIf null,\
            \ the value will be inherited from project, customer or the client delivery\
            \ term settings.\r\nDelivery terms can be queried and identified using\
            \ the Delivery terms endpoint."
          example: 47001
          format: int64
          nullable: true
          type: integer
        DepartmentCode:
          description: "The code of the department associated with the sales order.\r\
            \nThis is the department set in the header of the sales order.\r\nIf null\
            \ in the header, the value may inherit from the project, customer or the\
            \ employee creating the sales order (if created using the GUI) - in that\
            \ order.\r\nThe sales order lines will inherit this value if no other\
            \ department (or no department) is specified on the line.\r\nDepartmentCode\
            \ = -1 means no department.\r\nDepartments can be queried and identified\
            \ using the Departments endpoint."
          example: 1A
          nullable: true
          readOnly: true
          type: string
        DepartmentId:
          description: "The id of the department associated with the sales order.\r\
            \nThis is the department set in the header of the sales order.\r\nIf null\
            \ in the header, the value may inherit from the project, customer or the\
            \ employee creating the sales order (if created using the GUI) - in that\
            \ order.\r\nThe sales order lines will inherit this value if no other\
            \ department (or no department) is specified on the line.\r\nDepartmentId\
            \ = -1 means no department.\r\nDepartments can be queried and identified\
            \ using the Departments endpoint."
          example: 123456
          format: int64
          nullable: true
          type: integer
        Dim1Code:
          description: "The code of the dimension 1 associated with the sales order.\r\
            \nDim1Code = -1 means no dimension 1.\r\nDimension 1-3 are customizable\
            \ dimensions that can be defined and queried using the Custom Dimensions\
            \ endpoint."
          example: dim1
          nullable: true
          readOnly: true
          type: string
        Dim1Id:
          description: "The id of the dimension 1 associated with the sales order.\r\
            \nThis is the dimension 1 set in the header of the sales order.\r\nThe\
            \ sales order lines might specify other dimension 1 values or no dimension\
            \ 1.\r\nDimension 1-3 are customizable dimensions that can be defined\
            \ and queried using the Custom Dimensions endpoint.\r\nDim1Id = -1 means\
            \ no dimension 1."
          example: 123456
          format: int64
          nullable: true
          type: integer
        Dim2Code:
          description: "The code of the dimension 2 associated with the sales order.\r\
            \nDim2Code = -1 means no dimension 2.\r\nDimension 1-3 are customizable\
            \ dimensions that can be defined and queried using the Custom Dimensions\
            \ endpoint."
          example: dim2
          nullable: true
          readOnly: true
          type: string
        Dim2Id:
          description: "The id of the dimension 2 associated with the sales order.\r\
            \nThis is the dimension 2 set in the header of the sales order.\r\nThe\
            \ sales order lines might specify other dimension 2 values or no dimension\
            \ 2.\r\nDimension 1-3 are customizable dimensions that can be defined\
            \ and queried using the Custom Dimensions endpoint.\r\nDim2Id = -1 means\
            \ no dimension 2."
          example: 123456
          format: int64
          nullable: true
          type: integer
        Dim3Code:
          description: "The code of the dimension 3 associated with the sales order.\r\
            \nDim3Code = -1 means no dimension 3.\r\nDimension 1-3 are customizable\
            \ dimensions that can be defined and queried using the Custom Dimensions\
            \ endpoint."
          example: dim3
          nullable: true
          readOnly: true
          type: string
        Dim3Id:
          description: "The id of the dimension 3 associated with the sales order.\r\
            \nThis is the dimension 3 set in the header of the sales order.\r\nThe\
            \ sales order lines might specify other dimension 3 values or no dimension\
            \ 3.\r\nDimension 1-3 are customizable dimensions that can be defined\
            \ and queried using the Custom Dimensions endpoint.\r\nDim3Id = -1 means\
            \ no dimension 3."
          example: 123456
          format: int64
          nullable: true
          type: integer
        ExternalImportReference:
          description: "The ExternalImportReference associated with the sales order.\r\
            \nThis property can be set by integrations creating sales orders, in order\
            \ to reference the external system and ensure a duplicate check (only\
            \ one instance of the reference can exist for the object type).\r\nCan\
            \ be used to correlate/duplicate check transactions."
          example: 123abc
          nullable: true
          type: string
        Id:
          description: "The identifier of the sales order.\r\nThe id is assigned by\
            \ Go when the sales order is created.\r\nThis id will persist on sent\
            \ invoices and the voucher of sent invoices, if the sales order (invoice\
            \ draft) is sent. // todo: er dette riktig?"
          example: ee373540-ca8d-4562-8fb6-6fb52de47722
          format: uuid
          readOnly: true
          type: string
        ImportedOrderNo:
          description: "The imported order number.\r\nCan only be set on sales orders\
            \ created using the api or import, and on vouchers posted directly using\
            \ the api or an import.\r\nCan be used to reference the order number in\
            \ the external system.\r\nThe imported order number is visible on the\
            \ sales order in the Go GUI."
          example: 23145
          format: int64
          nullable: true
          type: integer
        IsCreatedByCurrentIntegration:
          description: "Value indicating whether the sales order is created by the\
            \ integration currently communicating with the API.\r\nWill be true for\
            \ all entries that are created by the same integration user (same Application\
            \ Key) as the integration currently authorized.\r\nCan be used in filtering\
            \ if only the current integration's entries are relevant to report."
          example: true
          nullable: true
          readOnly: true
          type: boolean
        LastChangedDateTimeOffset:
          description: The timestamp of the last change of the sales order.
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        LineCount:
          description: The number of lines on this sales order.
          example: 3
          format: int64
          readOnly: true
          type: integer
        LocationCode:
          description: "The code of the location dimension associated with the sales\
            \ order.\r\nLocations can be queried and identified using the Locations\
            \ endpoint."
          example: "123546"
          nullable: true
          readOnly: true
          type: string
        LocationId:
          description: "The id of the location dimension associated with the sales\
            \ order.\r\nThis is the location set in the header of the sales order.\r\
            \nThe sales order lines will inherit this value if no other location (or\
            \ no location) is specified on the line.\r\nLocations can be queried and\
            \ identified using the Locations endpoint.\r\nLocationId = -1 means no\
            \ location."
          example: 123456
          format: int64
          nullable: true
          type: integer
        NetAmount:
          description: "The net amount of the order (vat exclusive).\r\nThis amount\
            \ is presented in the currency used on the order (the currency given by\
            \ the currencyCode)."
          example: 1000.33
          format: double
          readOnly: true
          type: number
        PaymentTerm:
          description: "The payment term of the sales order.\r\nThis is the default\
            \ number of days after an invoice is sent until it is due.\r\nIf null,\
            \ the value will be inherited from project, customer or the client payment\
            \ term settings.\r\nPayment terms can be queried and identified using\
            \ the Payment terms endpoint."
          example: 14
          format: int32
          nullable: true
          readOnly: true
          type: integer
        PaymentTermId:
          description: "The id of the payment term of the sales order.\r\nThis is\
            \ the default number of days after an invoice is sent until it is due.\r\
            \nIf null, the value will be inherited from project, customer or the client\
            \ payment term settings.\r\nPayment terms can be queried and identified\
            \ using the Payment terms endpoint."
          example: 123456
          format: int64
          nullable: true
          type: integer
        ProjectCode:
          description: "The code of the project associated with the sales order.\r\
            \nThis is the project set in the header of the order.\r\nThe sales order\
            \ lines will inherit this value if no other project (or no project) is\
            \ specified on the line.\r\nProjectCode = -1 means no project.\r\nProjects\
            \ can be queried and identified using the Projects endpoint."
          example: "100"
          nullable: true
          readOnly: true
          type: string
        ProjectId:
          description: "The id of the project associated with the sales order.\r\n\
            This is the project set in the header of the order.\r\nThe sales order\
            \ lines will inherit this value if no other project (or no project) is\
            \ specified on the line.\r\nProjects can be queried and identified using\
            \ the Projects endpoint.\r\nProjectId = -1 means no project."
          example: 123456
          format: int64
          nullable: true
          type: integer
        PurchaseOrderReference:
          description: "The purchase order reference on the sales order.\r\nThe property\
            \ can be used to reference purchase order places by the customer."
          example: qwerty12345
          nullable: true
          type: string
        RelatedInvoiceNo:
          description: "The related invoice number.\r\nCan only be set for sales orders\
            \ that are credit note drafts.\r\nIf set, this property will reference\
            \ the original invoice being credited."
          example: 12345
          format: int64
          nullable: true
          type: integer
        SalesOrderDate:
          description: "The sales order date.\r\nWill default to the date when the\
            \ sales order is sent (converted to invoice) if not set via import or\
            \ api."
          example: 2022-08-05
          format: date
          nullable: true
          type: string
        SalesOrderNo:
          description: "The sales order number.\r\nThis value is autogenerated by\
            \ Go."
          example: 6065
          format: int64
          nullable: true
          readOnly: true
          type: integer
        SalesOrderStatus:
          $ref: '#/components/schemas/OrderStatus'
        SalesPersonEmployeeId:
          description: "The (employee) id of the sales person associated with the\
            \ sales order.\r\nIf null, the sales person on the customer this sales\
            \ order relates to is used or the default sales person from the SalesSettings.\r\
            \nEmployees can be queried and identified using the Employees endpoint."
          example: 123456
          format: int64
          nullable: true
          type: integer
        SalesPersonEmployeeNumber:
          description: "The employee number of the sales person associated with the\
            \ sales order.\r\nIf null, the sales person on the customer this sales\
            \ order relates to is used or the default sales person from the SalesSettings.\r\
            \nEmployees can be queried and identified using the Employees endpoint."
          example: 3
          format: int64
          nullable: true
          readOnly: true
          type: integer
        TotalAmount:
          description: "The total amount of the sales order (VAT inclusive).\r\nThis\
            \ amount is presented in the currency used on the sales order (the currency\
            \ given by the currencyCode)."
          example: 12500.33
          format: double
          readOnly: true
          type: number
      type: object
    AddPartnerUserPostDto:
      additionalProperties: false
      description: The available properties for adding a partner user to a client.
      example:
        AccessRoleId: 09ab6bcf-4219-4149-8283-6b6a7342bfd9
        FromDate: 2024-01-01
        ToDate: 2024-01-31
        PartnerUserId: ee373540-ca8d-4562-8fb6-6fb52de47722
      properties:
        AccessRoleId:
          description: The access role id the user should have on the client.
          example: 09ab6bcf-4219-4149-8283-6b6a7342bfd9
          format: uuid
          type: string
        FromDate:
          description: "From date, inclusive.\r\nThe user will have access to the\
            \ client from this date."
          example: 2024-01-01
          format: date
          nullable: true
          type: string
        PartnerUserId:
          description: The existing partner user that should be added to the client.
          example: ee373540-ca8d-4562-8fb6-6fb52de47722
          format: uuid
          type: string
        ToDate:
          description: "To date, inclusive.\r\nThe user will have access to the client\
            \ until and including this date.\r\nAfterwards, the user is deactivated\
            \ on the client."
          example: 2024-01-31
          format: date
          nullable: true
          type: string
      required:
      - AccessRoleId
      - PartnerUserId
      type: object
    ContactPersonDto:
      additionalProperties: false
      description: Contact person data transfer object.
      example:
        IsDefault: true
        MailAddress:
          AddressLine2: "Att: Ola Nordmann"
          AddressLine1: Postboks 404
          ZipCode: "0161"
          City: Oslo
          CountryCode: "NO"
        FirstName: Espen
        IsActive: true
        Title: CEO
        ContactId: 12345
        CreatedDateTimeOffset: 2023-10-19T11:05:00.1234567Z
        EmailAddress: api@example.com
        PhoneNumber: "+4712345678"
        Id: 12345
        LastName: Askeladd
        ExternalCode: 123xyz
        LastChangedDateTimeOffset: 2023-10-19T11:05:00.1234567Z
      properties:
        ContactId:
          description: The identifier of the contact (customer or supplier) this contact
            person is assigned to.
          example: 12345
          format: int64
          readOnly: true
          type: integer
        CreatedDateTimeOffset:
          description: The timestamp of the created date of the contact person.UTC
            time.
          example: 2023-10-19T11:05:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        EmailAddress:
          description: "The e-mail address registered for the contact person.\r\n\
            This field is validated for typos in POST/PATCH calls."
          example: api@example.com
          nullable: true
          type: string
        ExternalCode:
          description: "The external code. This field is not available in the GUI,\r\
            \nbut can be used by the integrating party to reference the contact\r\n\
            person in the external system. The field must be unique (for each contact\
            \ person)."
          example: 123xyz
          maxLength: 50
          nullable: true
          type: string
        FirstName:
          description: The first name of the contact person.
          example: Espen
          nullable: true
          type: string
        Id:
          description: "The identifier of the contact person. This identifier\r\n\
            is unique and assigned by PowerOffice Go when a new entity is saved,\r\
            \nand should be provided when an entity should be edited or deleted (PATCH\
            \ or DELETE)."
          example: 12345
          format: int64
          readOnly: true
          type: integer
        IsActive:
          description: A value indicating whether this instance is active. Inactive
            contact persons disable the usage of that in the GUI.
          example: true
          nullable: true
          type: boolean
        IsDefault:
          description: A bool indicating whether this contact person is the default
            contact person.
          example: true
          nullable: true
          type: boolean
        LastChangedDateTimeOffset:
          description: The timestamp of the last change of the contact person. UTC
            time.
          example: 2023-10-19T11:05:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        LastName:
          description: The last name of the contact person.
          example: Askeladd
          nullable: true
          type: string
        MailAddress:
          $ref: '#/components/schemas/AddressDto'
        PhoneNumber:
          description: The phone number of the contact person.
          example: "+4712345678"
          nullable: true
          type: string
        Title:
          description: The title of the contact person. This might for instance be
            the job title of the person.
          example: CEO
          nullable: true
          type: string
      type: object
    ContactPersonPostDto:
      additionalProperties: false
      description: Properties for creating a new contact person.
      example:
        IsDefault: true
        MailAddress:
          AddressLine2: "Att: Ola Nordmann"
          AddressLine1: Postboks 404
          ZipCode: "0161"
          City: Oslo
          CountryCode: "NO"
        FirstName: Espen
        IsActive: true
        PhoneNumber: "+4712345678"
        Title: CEO
        LastName: Askeladd
        EmailAddress: api@example.com
        ExternalCode: 123xyz
      properties:
        EmailAddress:
          description: "The e-mail address registered for the contact person.\r\n\
            This field is validated for typos in POST/PATCH calls."
          example: api@example.com
          nullable: true
          type: string
        ExternalCode:
          description: "The external code. This field is not available in the GUI,\r\
            \nbut can be used by the integrating party to reference the contact\r\n\
            person in the external system. The field must be unique (for each contact\
            \ person)."
          example: 123xyz
          maxLength: 50
          nullable: true
          type: string
        FirstName:
          description: The first name of the contact person.
          example: Espen
          nullable: true
          type: string
        IsActive:
          description: A value indicating whether this instance is active. Inactive
            contact persons disable the usage of that in the GUI.
          example: true
          nullable: true
          type: boolean
        IsDefault:
          description: A bool indicating whether this contact person is the default
            contact person.
          example: true
          nullable: true
          type: boolean
        LastName:
          description: The last name of the contact person.
          example: Askeladd
          nullable: true
          type: string
        MailAddress:
          $ref: '#/components/schemas/AddressPostDto'
        PhoneNumber:
          description: The phone number of the contact person.
          example: "+4712345678"
          nullable: true
          type: string
        Title:
          description: The title of the contact person. This might for instance be
            the job title of the person.
          example: CEO
          nullable: true
          type: string
      required:
      - FirstName
      - LastName
      type: object
    OrganizationSettingDto:
      additionalProperties: false
      description: Properties related to Organization Settings in PowerOffice Go.
      example:
        LegalName: PowerOffice AS
        OrganizationNumber: "980386465"
        InvoiceInboxEmailAddress: abc-as@faktura.poweroffice.net
        MailAddress:
          AddressLine2: "Att: Ola Nordmann"
          AddressLine1: Postboks 404
          ZipCode: "0161"
          City: Oslo
          CountryCode: "NO"
        InvoiceInboxEhf: true
        IsAgricultureClient: true
        WebsiteUrl: www.example.com
        DeliveryAddress:
          AddressLine2: "Att: Ola Nordmann"
          AddressLine1: Postboks 404
          ZipCode: "0161"
          City: Oslo
          CountryCode: "NO"
        EmailAddress: mail@example.com
        DefaultAgricultureDepartment: None
        Name: PowerOffice
        InvoiceInboxEmail: true
        PhoneNumber: "81549300"
        Id: 09ab6bcf-4219-4149-8283-6b6a7342bfd9
        MailAddressIsDeliveryAddress: false
        LastChangedDateTimeOffset: 2022-07-11T11:32:59.1234567Z
      properties:
        DefaultAgricultureDepartment:
          $ref: '#/components/schemas/AgricultureDepartment'
        DeliveryAddress:
          $ref: '#/components/schemas/Address'
        EmailAddress:
          description: The e-mail address registered for the client.
          example: mail@example.com
          nullable: true
          readOnly: true
          type: string
        Id:
          description: The unique id the client have in PowerOffice Go.
          example: 09ab6bcf-4219-4149-8283-6b6a7342bfd9
          format: uuid
          readOnly: true
          type: string
        InvoiceInboxEhf:
          description: Indicates whether the client is registered in ELMA and can
            receive incoming invoices by EHF.
          example: true
          readOnly: true
          type: boolean
        InvoiceInboxEmail:
          description: Indicates whether the client have an e-mail set for receiving
            invoices by e-mail directly to the client.
          example: true
          readOnly: true
          type: boolean
        InvoiceInboxEmailAddress:
          description: "The voucher e-mail of the client, if set.\r\nUsed only if\
            \ invoiceInboxEmail is true.\r\nThis e-mail can be used to send vouchers\
            \ (supplier invoices etc) to the client.\r\nOften used by suppliers, if\
            \ they are unable to send EHF invoices to this client.\r\nFor a client\
            \ in production the address will always be in the form @faktura.poweroffice.net."
          example: abc-as@faktura.poweroffice.net
          nullable: true
          readOnly: true
          type: string
        IsAgricultureClient:
          description: Indicates whether this client is an agriculture client and
            therefore uses NIBIO's agricultural chart of accounts requiring agricultural
            department on it's accounts.
          example: true
          nullable: true
          readOnly: true
          type: boolean
        LastChangedDateTimeOffset:
          description: "The timestamp of the last change. Last changed will update\
            \ when the settings are created, or whenever the settings are changed."
          example: 2022-07-11T11:32:59.1234567Z
          format: date-time
          readOnly: true
          type: string
        LegalName:
          description: "The legal name of the client. The legal name is the formal\
            \ name, and might differ from the marketing name."
          example: PowerOffice AS
          nullable: true
          readOnly: true
          type: string
        MailAddress:
          $ref: '#/components/schemas/Address'
        MailAddressIsDeliveryAddress:
          description: "A property indicating whether the client have set the delivery\
            \ address equal to the mail address. If so, the content of the property\
            \ deliveryAddress can be ignored."
          example: false
          readOnly: true
          type: boolean
        Name:
          description: The name of the client.
          example: PowerOffice
          nullable: true
          readOnly: true
          type: string
        OrganizationNumber:
          description: The organization number of the client.
          example: "980386465"
          nullable: true
          readOnly: true
          type: string
        PhoneNumber:
          description: The phone number registered on the client.
          example: "81549300"
          nullable: true
          readOnly: true
          type: string
        WebsiteUrl:
          description: The website url registered on the client.
          example: www.example.com
          nullable: true
          readOnly: true
          type: string
      type: object
    Address:
      additionalProperties: false
      description: Address representing a physical location.
      example:
        AddressLine2: "Att: Ola Nordmann"
        AddressLine1: Postboks 404
        ZipCode: "0161"
        City: Oslo
        CountryCode: "NO"
      properties:
        AddressLine1:
          description: The first (main) address line.
          example: Postboks 404
          maxLength: 200
          nullable: true
          type: string
        AddressLine2:
          description: The second address line.
          example: "Att: Ola Nordmann"
          maxLength: 200
          nullable: true
          type: string
        City:
          description: The city.
          example: Oslo
          maxLength: 100
          nullable: true
          type: string
        CountryCode:
          description: "The ISO 3166-1 alfa-2 country code (two characters).\r\nDefaults\
            \ to \"NO\" if not set."
          example: "NO"
          nullable: true
          type: string
        ZipCode:
          description: The zip code (postal code).
          example: "0161"
          maxLength: 50
          nullable: true
          type: string
      type: object
    CurrencyRateDto:
      additionalProperties: false
      example:
        CurrencyCode: EUR
        RateDate: 2024-10-17
        ReverseExchangeRate: 0.842
        ExchangeRate: 10.78
        ExchangeBase: 0
      properties:
        CurrencyCode:
          description: The currency code.
          example: EUR
          nullable: true
          readOnly: true
          type: string
        ExchangeBase:
          description: "The base amount used for calculating the exchange rate. Typically,\
            \ this is a fixed amount like 1 or 100 units of the base currency."
          format: int32
          readOnly: true
          type: integer
        ExchangeRate:
          description: The currency exchange rate
          example: 10.78
          format: double
          readOnly: true
          type: number
        RateDate:
          description: The date of the currency rate
          example: 2024-10-17
          format: date
          readOnly: true
          type: string
        ReverseExchangeRate:
          description: The reverse exchange rate
          example: 0.842
          format: double
          readOnly: true
          type: number
      type: object
    PayItemDto:
      additionalProperties: false
      description: The pay item DTO contains all properties relevant to a pay item
        in Go.
      example:
        EarnedContinentalShelf: true
        AccountId: 12345
        Benefit: Cash
        IsActive: true
        TaxCountryCode: "NO"
        PensionBasis: true
        Name: Timelønn
        EarnedSupportVessel: true
        TradeUnionBasis: true
        BenefitDescription: AdministrativForpleining
        IncludeInIncomeReport: true
        SpecialIncomeCondition: HyreTilMannskapPaaFiskeSmaahvalfangstOgSelfangstfartoey
        EmployerContributionBasis: true
        HolidayPayBasis: true
        OppositeAccountId: 12345
        Percentage: -100
        Rate: 250
        Code: "10"
        CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        EarningsCountryCode: "NO"
        RoundingPrecision: OneUnit
        PostingType: GeneralLedgerAccount
        FnoReporting: VariableSalary
        FullTaxOnHalfTaxPayrolls: true
        ProcessingType: AttachmentOfEarnings
        TaxDeduction: NoTax
        DeductionPayItemId: 21d4ddf1-c8bf-4874-8879-b70468fa1032
        Id: 21d4ddf1-c8bf-4874-8879-b70468fa1032
        LastChangedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
      properties:
        AccountId:
          description: "The Id of the general ledger account used, if the posting\
            \ type is set to general ledger account."
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        Benefit:
          $ref: '#/components/schemas/BenefitType'
        BenefitDescription:
          $ref: '#/components/schemas/BenefitDescriptionType'
        Code:
          description: The code of the pay item.
          example: "10"
          maxLength: 200
          nullable: true
          readOnly: true
          type: string
        CreatedDateTimeOffset:
          description: The timestamp the pay item entity was created.
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        DeductionPayItemId:
          description: "The identifier of the separate pay item this instance is linked\
            \ to,\r\nif this pay item instance have a processing type that link to\
            \ a deduction pay item."
          example: 21d4ddf1-c8bf-4874-8879-b70468fa1032
          format: uuid
          nullable: true
          readOnly: true
          type: string
        EarnedContinentalShelf:
          description: "The continental shelf reporting of the pay item.\r\nNull if\
            \ no continental shelf reporting is relevant for the pay item (benefit),\
            \ and it should not be reported to Altinn.\r\nTrue if the benefit is earned\
            \ on continental shelf.\r\nFalse if the benefit is not earned on continental\
            \ shelf."
          nullable: true
          readOnly: true
          type: boolean
        EarnedSupportVessel:
          description: "Defines the support vessel reporting type of the pay item.\r\
            \n The support vessel reporting of the pay item.\r\n Null if no support\
            \ vessel reporting is relevant for the pay item (benefit), and it should\
            \ not be reported to Altinn.\r\n True if the benefit is earned on support\
            \ vessel.\r\n False if the benefit is not earned on support vessel."
          example: true
          nullable: true
          readOnly: true
          type: boolean
        EarningsCountryCode:
          description: "The earnings country code, relevant if report earnings country\
            \ is to be reported on this pay item.\r\nISO 3166-1 alfa-2 country code\
            \ (two characters)."
          example: "NO"
          nullable: true
          readOnly: true
          type: string
        EmployerContributionBasis:
          description: Value indicating whether this pay item should be included in
            the calculation of employer's contribution.
          example: true
          readOnly: true
          type: boolean
        FnoReporting:
          $ref: '#/components/schemas/FnoReportingType'
        FullTaxOnHalfTaxPayrolls:
          description: Value indicating whether this pay item should calculate ordinary
            tax when used in a half tax payroll.
          example: true
          readOnly: true
          type: boolean
        HolidayPayBasis:
          description: Value indicating whether this pay item should be included in
            the calculation of holiday pay.
          example: true
          readOnly: true
          type: boolean
        Id:
          description: The identifier of the pay item.
          example: 21d4ddf1-c8bf-4874-8879-b70468fa1032
          format: uuid
          readOnly: true
          type: string
        IncludeInIncomeReport:
          description: Value indicating whether this pay item should be included in
            the income reporting.
          example: true
          readOnly: true
          type: boolean
        IsActive:
          description: "Value indicating whether this instance is active.\r\nInactive\
            \ pay items disable the usage of that pay item on salary lines."
          example: true
          readOnly: true
          type: boolean
        LastChangedDateTimeOffset:
          description: The timestamp of the last change of the pay item.
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        Name:
          description: The name of the pay item.
          example: Timelønn
          maxLength: 400
          nullable: true
          readOnly: true
          type: string
        OppositeAccountId:
          description: The id of the general ledger account to post opposite transaction.
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        PensionBasis:
          description: Value indicating whether this pay item should be included in
            the calculation of pension.
          example: true
          readOnly: true
          type: boolean
        Percentage:
          description: "The percentage, relevant for pay items with percentage processing\
            \ type.\r\nExamples: A value of 50 reflect as 50% in the GUI, and a value\
            \ of -50 reflect as -50% in the GUI.\r\nExample of use case: Pay item\
            \ for 50% overtime will have 150 set, in order to calculate the correct\
            \ hourly wage when used."
          example: -100
          format: double
          nullable: true
          readOnly: true
          type: number
        PostingType:
          $ref: '#/components/schemas/PostingType'
        ProcessingType:
          $ref: '#/components/schemas/ProcessingType'
        Rate:
          description: "The rate for of the pay item, relevant if the processing type\
            \ include a fixed rate.\r\nRates set on the pay item will be overridden\
            \ if a rate is set on the salary line using the pay item."
          example: 250
          format: double
          nullable: true
          readOnly: true
          type: number
        RoundingPrecision:
          $ref: '#/components/schemas/RoundingPrecisionType'
        SpecialIncomeCondition:
          $ref: '#/components/schemas/SpecialIncomeConditionType'
        TaxCountryCode:
          description: "The tax country code, relevant if tax country is to be reported\
            \ on this pay item.\r\nISO 3166-1 alfa-2 country code (two characters)."
          example: "NO"
          nullable: true
          readOnly: true
          type: string
        TaxDeduction:
          $ref: '#/components/schemas/TaxDeductionType'
        TradeUnionBasis:
          description: Value indicating whether this pay item should be included in
            the calculation of trade union basis.
          example: true
          readOnly: true
          type: boolean
      type: object
    BenefitType:
      description: |-
        Enum defining the benefit types. (Norwegian: Fordelstype)<p>Members:</p><ul><li><i>Cash</i> - Monetary benefit in cash or cash equivalents.
                        (Norwegian: kontantytelse)</li><li><i>Deduction</i> - Deductions, for instance pension premiums or union fees.
                        (Norwegian: fradrag)</li><li><i>ExpenseAllowance</i> - Expense allowance, for instance allowance for the use of hand tools.
                        (Norwegian: utgiftsgodtgjoerelse)</li><li><i>None</i> - None, no benefit to report.
                        (Norwegian: ingen)</li><li><i>PaymentInKind</i> - Payment in kind, non monetary benefit.
                        Benefits an employee receives from their employer in any form other than money.
                        They are sometimes also known as ‘perks’.
                        (Norwegian: naturalytelse)</li></ul>
      enum:
      - Cash
      - Deduction
      - ExpenseAllowance
      - None
      - PaymentInKind
      nullable: true
      type: string
    BenefitDescriptionType:
      description: |-
        Enum defining the benefit description types. (Norwegian: Lønnsbeskrivelse)<p>Members:</p><ul><li><i>AdministrativForpleining</i> - Subsistence expenses covered directly by the employer
                        (Norwegian: Administrativ forpleining)
                        (Invalid from 2016-01)</li><li><i>AksjerGrunnfondsbevisTilUnderkurs</i> - Shares/primary capital certificates at a discount.
                        (Norwegian: Aksjer/grunnfondsbevis til underkurs)</li><li><i>Annet</i> - Other.
                        (Norwegian: Annet)</li><li><i>ArbeidsinntektUnderGrensenForOpplysningsplikt</i> - Income below the threshold for reporting duty.
                        (Norwegian: Inntekt under grensen for opplysningsplikt)</li><li><i>ArbeidsoppholdKost</i> - Work stay board.
                        (Norwegian: Arbeidsopphold kost)</li><li><i>ArbeidsoppholdLosji</i> - Work stay lodging.
                        (Norwegian: Arbeidsopphold losji)</li><li><i>Barnepensjon</i> - Children’s pension from the national insurance scheme.
                        (Norwegian: Barnepensjon fra folketrygden)</li><li><i>BarnepensjonFraAndreEnnFolketrygdenFra2024</i> - Children’s pension from parties other than the national insurance scheme from 2024.
                        (Norwegian: Barnepensjon fra andre enn folketrygden fra 2024)</li><li><i>Bedriftsbarnehageplass</i> - Company day care centre.
                        (Norwegian: Bedriftsbarnehageplass)
                        (Invalid from 2019-01)</li><li><i>BeregnetSkatt</i> - Calculated tax.
                        (Norwegian: Beregnet skatt)</li><li><i>BesoeksreiserHjemmetAnnet</i> - Home visits – other.
                        (Norwegian: Besøksreiser hjemmet annet)</li><li><i>BesoeksreiserHjemmetKilometergodtgjoerelseBil</i> - Home visits kilometre allowance - car.
                        (Norwegian: Besøksreiser hjemmet kilometergodtgjørelse bil)</li><li><i>BesoeksreiserHjemmetKost</i> - Home visits - board.
                        (Norwegian: Besøksreiser hjemmet kost)</li><li><i>BetaltTrygdeavgift</i> - National insurance contributions.
                        (Norwegian: Betalt trygdeavgift)</li><li><i>Bil</i> - Car.
                        (Norwegian: Bil)</li><li><i>Bolig</i> - Housing.
                        (Norwegian: Bolig)</li><li><i>Bonus</i> - Bonus.
                        (Norwegian: Bonus)</li><li><i>BonusFraForsvaret</i> - Bonus from the armed forces.
                        (Norwegian: Bonus fra forsvaret)</li><li><i>Brakkeleie</i> - Port cabin rent.
                        (Norwegian: Brakkeleie)</li><li><i>ElektroniskKommunikasjon</i> - Electronic communications.
                        (Norwegian: Elektronisk kommunikasjon)</li><li><i>Etterloenn</i> - Back payment of wages.
                        (Norwegian: Etterlønn)</li><li><i>EtterloennOgEtterpensjon</i> - Back payment of wages and pension.
                        (Norwegian: Etterlønn og etterpensjon)</li><li><i>Fagforeningskontingent</i> - Trade union dues.
                        (Norwegian: Fagforeningskontingent)</li><li><i>FastBilgodtgjoerelse</i> - Fixed car allowance.
                        (Norwegian: Fast bilgodtgjørelse)</li><li><i>Fastloenn</i> - Fixed salary.
                        (Norwegian: Fast Fastlønn)</li><li><i>FastTillegg</i> - Fixed supplements.
                        (Norwegian: Faste tillegg)</li><li><i>Feriepenger</i> - Holiday pay.
                        (Norwegian: Feriepenger)</li><li><i>Flyttegodtgjoerelse</i> - House moving allowance.
                        (Norwegian: Flyttegodtgjørelse mv)</li><li><i>Foederaad</i> - Benefit derived from surrendered property.
                        (Norwegian: Føderåd)</li><li><i>FondForIdrettsutoevere</i> - Fund for athletes.
                        (Norwegian: Fond for idrettsutøvere)</li><li><i>Forskuddstrekk</i> - Advance tax deductions.
                        (Norwegian: Forskuddstrekk)</li><li><i>KorrigeringAvForskuddstrekk</i> - Correction of advance tax deductions.
                        (Norwegian: Korrigering av forskuddstrekk)</li><li><i>FriTransport</i> - Free transport.
                        (Norwegian: Fri transport)</li><li><i>GodtgjoerelseIHhtSaeravtalerUtland</i> - Allowance acc. to special agreements abroad.
                        (Norwegian: Godtgjørelse i henhold til særavtale utland)</li><li><i>GodtgjoerelseSaeravtaleUtland</i> - Allowances pursuant to special agreements - abroad.
                        (Norwegian: Godtgjørelse i henhold til særavtale utland)</li><li><i>Helligdagstillegg</i> - Public holiday supplement.
                        (Norwegian: Helligdagstillegg)</li><li><i>HonorarAkkordProsentProvisjon</i> - Fees, paid for piecework, commission or by percentage.
                        (Norwegian: Honorar, akkord, prosent eller provisjonslønn)</li><li><i>Hyretillegg</i> - Seafarers’ wage supplement.
                        (Norwegian: Hyretillegg)</li><li><i>IkkeSkattepliktigLoennFraUtenlandskDiplomKonsulStasjon</i> - Pay etc. from foreign diplomatic or consular missions that are not liable for tax in Norway.
                        (Norwegian: Lønn mv som ikke er skattepliktig i Norge fra utenlandsk diplomatisk eller konsulær stasjon)</li><li><i>InnbetalingTilUtenlandskPensjonsordning</i> - Payment to foreign pension scheme.
                        (Norwegian: Innbetaling til utenlandsk pensjonsordning)</li><li><i>IpaEllerIpsBarnepensjonFra2024</i> - IPA or IPS children's pension from 2024.
                        (Norwegian: IPA eller IPS barnepensjon fra 2024)</li><li><i>KapitalInntekt</i> - Capital income.
                        (Norwegian: Kapitalinntekt)</li><li><i>KildeskattPaaPensjon</i> - Tax deducted at source on pensions.
                        (Norwegian: Kildeskatt på pensjoner)</li><li><i>KilometergodtgjoerelseAndreFremkomstmidler</i> - Kilometre allowance - other conveyances.
                        (Norwegian: Kilometergodtgjørelse andre fremkomstmidler)</li><li><i>KilometergodtgjoerelseBil</i> - Kilometre allowance - car.
                        (Norwegian: Kilometergodtgjørelse bil)</li><li><i>KilometergodtgjoerelseElBil</i> - Kilometre allowance - electric car.
                        (Norwegian: Kilometergodtgjørelse el-bil)
                        (Invalid from 2019-01)</li><li><i>KilometergodtgjoerelsePassasjertillegg</i> - Kilometre allowance - passenger supplement.
                        (Norwegian: Kilometergodtgjørelse passasjertillegg)</li><li><i>KommunalOmsorgsloennOgFosterhjemsgodtgjoerelse</i> - Municipal care pay and foster home remuneration.
                        (Norwegian: Kommunal omsorgslønn og fosterhjemsgodtgjørelse)</li><li><i>KompensasjonstilleggBolig</i> - Housing compensation supplement.
                        (Norwegian: Kompensasjonstillegg bolig)</li><li><i>KorrigeringAvEkstraArbeidsgiveravgift</i> - Correction of additional employers contribution.
                        (Norwegian: Korrigering av ekstra arbeidsgiveravgift)</li><li><i>KorrigeringAvArbeidsgiveravgift</i> - Correction of employers contribution.
                        (Norwegian: Korrigering av arbeidsgiveravgift)</li><li><i>KorrigeringAvFeriepengeavsetning</i> - Correction of allotted holiday pay.
                        (Norwegian: Korrigering av feriepengeavsetning)</li><li><i>KostbesparelseIHjemmet</i> - Savings on household costs.
                        (Norwegian: Kostbesparelse i hjemmet)</li><li><i>KostDager</i> - Board (days).
                        (Norwegian: Kost (dager))</li><li><i>KostDoegn</i> - Board (day and night).
                        (Norwegian: Kost (døgn))</li><li><i>LoennEtterDoedsfall</i> - Pay after death.
                        (Norwegian: Lønn etter dødsfall)</li><li><i>LoennForBarnepassIBarnetsHjem</i> - Pay and remuneration to child-minder or nanny who minds a child in the child’s home.
                        (Norwegian: Lønn og godtgjørelse til dagmamma eller praktikant som passer barn i barnets hjem)</li><li><i>Loennsforskudd</i> - Salary advance.
                        (Norwegian: Lønnsforskudd)</li><li><i>LoennTilPrivatpersonerForArbeidIHjemmet</i> - Pay and remuneration to child-minder in own home.
                        (Norwegian: Lønn og godtgjørelse til privatpersoner for arbeidsoppdrag i oppdragsgivers hjem)</li><li><i>LoennUtbetaltAvVeldedigEllerAllmennyttigInstitusjonEllerOrganisasjon</i> - Pay and remuneration from charitable or benevolent institutions or organisations.
                        (Norwegian: Lønn og godtgjørelse utbetalt av veldedig eller allmennyttig institusjon eller organisasjon)</li><li><i>LoennUtenlandskArtist</i> - Pay to foreign artist.
                        (Norwegian: Lønn utenlandsk artist)</li><li><i>Losji</i> - Lodging.
                        (Norwegian: Losji)</li><li><i>LosjiEgenBrakkeCampingvogn</i> - Lodging in own port cabin/caravan.
                        (Norwegian: Losji egen brakke/campingvogn)</li><li><i>LosjiEgenBrakkeEllerCampingvogn</i> - Lodging private barrack or caravan.
                        (Norwegian: Losji egen brakke eller campingvogn)</li><li><i>LottKunTrygdeavgift</i> - Share of catch EEC fishermen (regarding social security contribution).
                        (Norwegian: Lott det skal beregnes trygdeavgift av)</li><li><i>Oppgrossingstabellnummer</i> - Table for recalculation from net to gross salary.
                        (Norwegian: Oppgrossingstabellnummer)</li><li><i>Opsjoner</i> - Options.
                        (Norwegian: Opsjoner)</li><li><i>Overtidsgodtgjoerelse</i> - Overtime payment.
                        (Norwegian: Overtidsgodtgjørelse)</li><li><i>Overtidsmat</i> - Overtime subsistence.
                        (Norwegian: Overtidsmat)</li><li><i>PensjonOgLivrenterIArbeidsforhold</i> - Pensions and employment-related annuities etc.
                        (Norwegian: Pensjon og livrenter i arbeidsforhold)</li><li><i>PremieTilFondOgTrygd</i> - National Insurance premiums and education and development fund premiums.
                        (Norwegian: Premie til fond og trygd)</li><li><i>PremieTilPensjonsordninger</i> - Premium for pension schemes.
                        (Norwegian: Premie til pensjonsordninger)</li><li><i>RefusjonNegativeEtteroppgjoer</i> - Reimbursement of negative after-settlements.
                        (Norwegian: Refusjon negative etteroppgjør)</li><li><i>RefusjonNegativeEtteroppgjoerKildeskatt</i> - Reimbursement of negative after-settlements tax withholding.
                        (Norwegian: Refusjon negative etteroppgjør kildeskatt)</li><li><i>RefusjonSykepenger</i> - Refund of sick-pay etc.
                        (Norwegian: Refusjon sykepenger)</li><li><i>RefusjonUtlegg</i> - Expense reimbursement.
                        (Norwegian: Refusjon utlegg)</li><li><i>ReiseAnnet</i> - Travel other.
                        (Norwegian: Reise annet)</li><li><i>ReiseKost</i> - Travel subsistence.
                        (Norwegian: Reise kost)</li><li><i>ReiseKostMedOvernattingPaaHotell</i> - Travel subsistence with overnight stay in a hotel.
                        (Norwegian: Reise kost med overnatting på hotell)</li><li><i>ReiseKostMedOvernattingPaaHotellBeordringUtover28Doegn</i> - Travel subsistence overnight stays at hotel compulsory posting exceeding 28 days.
                        (Norwegian: Reise kost med overnatting på hotell beordring utover 28 døgn)</li><li><i>ReiseKostMedOvernattingPaaHybelMedKokEllerPrivat</i> - Travel subsistence with overnight stay in bedsit with cooking or private accomodation.
                        (Norwegian: Reise kost med overnatting på hybel med kok eller privat)</li><li><i>ReiseKostMedOvernattingPaaHybelUtenKokEllerPensjonatEllerBrakke</i> - Travel subsistence with overnight stay in bedsit without cooking or guesthouse or portcabin.
                        (Norwegian: Reise kost med overnatting på hybel uten kok eller pensjonat eller brakke)</li><li><i>ReiseKostMedOvernattingTilLangtransportsjaafoerForKjoeringInnenlands</i> - Travel subsistence with overnight stay to long-distance drivers for driving domestic.
                        (Norwegian: Reise kost med overnatting til langtransport sjåfør for kjøring innenlands)</li><li><i>ReiseKostMedOvernattingTilLangtransportsjaafoerForKjoeringIUtlandet</i> - Travel subsistence with overnight stay to long-distance drivers for driving abroad.
                        (Norwegian: Reise kost med overnatting til langtransportsjåfør for kjøring i utlandet)</li><li><i>ReiseKostOvernattingPaaHotellBeordringUtover28Doegn</i> - Travel subsistence overnight stays at hotel compulsory posting exceeding 28 days.
                        (Norwegian: Reise kost med overnatting på hotell beordring utover 28 døgn)</li><li><i>ReiseKostUtenOvernatting</i> - Travel subsistence without overnight stay.
                        (Norwegian: Reise kost uten overnatting)</li><li><i>ReiseLosji</i> - Business travel lodging.
                        (Norwegian: Reise losji)</li><li><i>ReiseNattillegg</i> - Travel overnight supplement.
                        (Norwegian: Reise nattillegg)</li><li><i>RentefordelLaan</i> - Benefit on loan interest.
                        (Norwegian: Rentefordel lån)</li><li><i>SaerskiltFradragForSjoefolk</i> - Special allowance for seafarers.
                        (Norwegian: Særskilt fradrag for sjøfolk)</li><li><i>SjoefolkAntallDagerOmBord</i> - Seafarers' allowance days at sea.
                        (Norwegian: Sjøfolks antall dager ombord)</li><li><i>SkattefriErstatning</i> - Tax-free compensation.
                        (Norwegian: Skattefri erstatning)</li><li><i>SkattefrieUtbetalinger</i> - Tax-free payments.
                        (Norwegian: Skattefrie utbetalinger)</li><li><i>SkattepliktigDelForsikringer</i> - Taxable part of certain types of insurance premium.
                        (Norwegian: Skattepliktig del av visse typer forsikringer)</li><li><i>SkattepliktigPersonalrabatt</i> - Taxable part of staff discount.
                        (Norwegian: Skattepliktig personalrabatt)</li><li><i>Sluttvederlag</i> - Severance pay.
                        (Norwegian: Sluttvederlag)</li><li><i>Smusstillegg</i> - Nuisance bonus.
                        (Norwegian: Smusstillegg)</li><li><i>Stipend</i> - Scholarships.
                        (Norwegian: Stipend)</li><li><i>StyrehonorarOgGodtgjoerelseVerv</i> - Directors' fees og godtgjørelse i forbindelse med verv.
                        (Norwegian: Styrehonorar og godtgjørelse i forbindelse med verv)</li><li><i>Svalbardinntekt</i> - Svalbard income.
                        (Norwegian: Svalbardinntekt)</li><li><i>TilskuddBarnehageplass</i> - Contribution for day care centre.
                        (Norwegian: Tilskudd barnehageplass)
                        (Invalid from 2019-01)</li><li><i>TilskuddOgPremieTilPensjon</i> - Contribution and premium for pension.
                        (Norwegian: Tilskudd og premie til pensjon)</li><li><i>Timeloenn</i> - Hourly wage.
                        (Norwegian: Timelønn)</li><li><i>Tips</i> - Tip.
                        (Norwegian: Tips)</li><li><i>Trekk</i> - Deduction.
                        (Norwegian: Trekk)</li><li><i>TrekkILoennForFerie</i> - Wage deduction due to holiday.
                        (Norwegian: Trekk i lønn for ferie)</li><li><i>TrekkTilFordringshaver</i> - Attachment of earnings.
                        (Norwegian: Trekk til fordringshaver)</li><li><i>UregelmessigeTilleggKnyttetTilArbeidetTid</i> - Irregular supplements linked to worked hours.
                        (Norwegian: Uregelmessige tillegg knyttet til arbeidet tid)</li><li><i>UregelmessigeTilleggKnyttetTilIkkeArbeidetTid</i> - Irregular supplement linked to non-worked hours.
                        (Norwegian: Uregelmessige tillegg knyttet til ikke- arbeidet tid)</li><li><i>UtleggstrekkSkatt</i> - Attachment of earnings to cover taxes.
                        (Norwegian: Utleggstrekk til dekning av skatt)</li><li><i>Vederlag</i> - Remuneration.
                        (Norwegian: Vederlag)</li><li><i>VederlagTilDagmammaIEgetHjem</i> - Compensation to a childminder in their own home.
                        (Norwegian: Vederlag til dagmamma i eget hjem)</li><li><i>YrkebilTjenestligbehovKilometer</i> - Company car,  work related use, kilometres.
                        (Norwegian: Yrkebil tjenestligbehov kilometer)</li><li><i>YrkebilTjenestligbehovListepris</i> - Company car,  work related use, list price.
                        (Norwegian: Yrkebil tjenestligbehov listepris)</li></ul>
      enum:
      - AdministrativForpleining
      - AksjerGrunnfondsbevisTilUnderkurs
      - Annet
      - ArbeidsinntektUnderGrensenForOpplysningsplikt
      - ArbeidsoppholdKost
      - ArbeidsoppholdLosji
      - Barnepensjon
      - BarnepensjonFraAndreEnnFolketrygdenFra2024
      - Bedriftsbarnehageplass
      - BeregnetSkatt
      - BesoeksreiserHjemmetAnnet
      - BesoeksreiserHjemmetKilometergodtgjoerelseBil
      - BesoeksreiserHjemmetKost
      - BetaltTrygdeavgift
      - Bil
      - Bolig
      - Bonus
      - BonusFraForsvaret
      - Brakkeleie
      - ElektroniskKommunikasjon
      - Etterloenn
      - EtterloennOgEtterpensjon
      - Fagforeningskontingent
      - FastBilgodtgjoerelse
      - Fastloenn
      - FastTillegg
      - Feriepenger
      - Flyttegodtgjoerelse
      - Foederaad
      - FondForIdrettsutoevere
      - Forskuddstrekk
      - KorrigeringAvForskuddstrekk
      - FriTransport
      - GodtgjoerelseIHhtSaeravtalerUtland
      - GodtgjoerelseSaeravtaleUtland
      - Helligdagstillegg
      - HonorarAkkordProsentProvisjon
      - Hyretillegg
      - IkkeSkattepliktigLoennFraUtenlandskDiplomKonsulStasjon
      - InnbetalingTilUtenlandskPensjonsordning
      - IpaEllerIpsBarnepensjonFra2024
      - KapitalInntekt
      - KildeskattPaaPensjon
      - KilometergodtgjoerelseAndreFremkomstmidler
      - KilometergodtgjoerelseBil
      - KilometergodtgjoerelseElBil
      - KilometergodtgjoerelsePassasjertillegg
      - KommunalOmsorgsloennOgFosterhjemsgodtgjoerelse
      - KompensasjonstilleggBolig
      - KorrigeringAvEkstraArbeidsgiveravgift
      - KorrigeringAvArbeidsgiveravgift
      - KorrigeringAvFeriepengeavsetning
      - KostbesparelseIHjemmet
      - KostDager
      - KostDoegn
      - LoennEtterDoedsfall
      - LoennForBarnepassIBarnetsHjem
      - Loennsforskudd
      - LoennTilPrivatpersonerForArbeidIHjemmet
      - LoennUtbetaltAvVeldedigEllerAllmennyttigInstitusjonEllerOrganisasjon
      - LoennUtenlandskArtist
      - Losji
      - LosjiEgenBrakkeCampingvogn
      - LosjiEgenBrakkeEllerCampingvogn
      - LottKunTrygdeavgift
      - Oppgrossingstabellnummer
      - Opsjoner
      - Overtidsgodtgjoerelse
      - Overtidsmat
      - PensjonOgLivrenterIArbeidsforhold
      - PremieTilFondOgTrygd
      - PremieTilPensjonsordninger
      - RefusjonNegativeEtteroppgjoer
      - RefusjonNegativeEtteroppgjoerKildeskatt
      - RefusjonSykepenger
      - RefusjonUtlegg
      - ReiseAnnet
      - ReiseKost
      - ReiseKostMedOvernattingPaaHotell
      - ReiseKostMedOvernattingPaaHotellBeordringUtover28Doegn
      - ReiseKostMedOvernattingPaaHybelMedKokEllerPrivat
      - ReiseKostMedOvernattingPaaHybelUtenKokEllerPensjonatEllerBrakke
      - ReiseKostMedOvernattingTilLangtransportsjaafoerForKjoeringInnenlands
      - ReiseKostMedOvernattingTilLangtransportsjaafoerForKjoeringIUtlandet
      - ReiseKostOvernattingPaaHotellBeordringUtover28Doegn
      - ReiseKostUtenOvernatting
      - ReiseLosji
      - ReiseNattillegg
      - RentefordelLaan
      - SaerskiltFradragForSjoefolk
      - SjoefolkAntallDagerOmBord
      - SkattefriErstatning
      - SkattefrieUtbetalinger
      - SkattepliktigDelForsikringer
      - SkattepliktigPersonalrabatt
      - Sluttvederlag
      - Smusstillegg
      - Stipend
      - StyrehonorarOgGodtgjoerelseVerv
      - Svalbardinntekt
      - TilskuddBarnehageplass
      - TilskuddOgPremieTilPensjon
      - Timeloenn
      - Tips
      - Trekk
      - TrekkILoennForFerie
      - TrekkTilFordringshaver
      - UregelmessigeTilleggKnyttetTilArbeidetTid
      - UregelmessigeTilleggKnyttetTilIkkeArbeidetTid
      - UtleggstrekkSkatt
      - Vederlag
      - VederlagTilDagmammaIEgetHjem
      - YrkebilTjenestligbehovKilometer
      - YrkebilTjenestligbehovListepris
      nullable: true
      type: string
    FnoReportingType:
      description: Enum representing FNO (Finans Norge) reporting types.<p>Members:</p><ul><li><i>VariableSalary</i>
        - Report variable salary type to FNO.</li><li><i>AdditionalSalary</i> - Report
        additional salary type to FNO.</li></ul>
      enum:
      - VariableSalary
      - AdditionalSalary
      nullable: true
      type: string
    PostingType:
      description: |-
        Enum defining the posting types of a pay item.<p>Members:</p><ul><li><i>GeneralLedgerAccount</i> - Posting on a general ledger account.</li><li><i>EmployeeLedgerAccount</i> - Posting on a employee ledger account.
                        If set, only the opposite account id is relevant to set.</li></ul>
      enum:
      - GeneralLedgerAccount
      - EmployeeLedgerAccount
      nullable: true
      type: string
    ProcessingType:
      description: |-
        Enum defining the processing type of a pay item.<p>Members:</p><ul><li><i>AttachmentOfEarnings</i> - Attachment of earnings.
                         This processing type require the deduction type field and the supplier id field to be set on a salary line.
                         Allows for setting the amount or the rate on salary lines depending on the deduction type.
                         Also allow for setting the following fields on salary lines - the start amount, supplier bank account, from and to date, use remittance and cid.</li><li><i>AttachmentOfEarningsTax</i> - Attachment of earnings to cover taxes.
                        Note that this processing type needs to be done after trade union and pension deduction.
                        This processing type require the deduction type field and the income year field to be set on a salary line.
                        Allows for setting the amount or the rate on salary lines depending on the deduction type.
                        Also allow for setting the following fields on salary lines - the start amount, from date and to date.</li><li><i>BackPaymentOfPensionAndAnnuities</i> - Post-payment of pension and annuity. Requires from / until date.
                        (Norwegian - Etterbetaling av pensjon og livrente).
                        This processing type require the amount field to be set on a salary line, and allows for the from and to date fields to be set.</li><li><i>CommuterWithNumberOfJourneys</i> - Travel cost and lodging (often commuters) that will report number of journeys.
                        This processing type require the amount field and number field to be set on a salary line.</li><li><i>CommuterWithPersonType</i> - Travel cost and lodging (often commuters) that will report type of commuter.
                        This processing type require the amount field and the person type field to be set on a salary line.</li><li><i>CommuterWithPersonTypeAndQuantity</i> - Travel cost and lodging (often commuters) that will report type of commuter and quantity.
                        This processing type require the amount field, the quantity field and the person type field to be set on a salary line.</li><li><i>CommuterWithPersonTypeQuantityAndRate</i> - Travel cost and lodging (often commuters) that will report type of commuter, quantity and calculate with a rate.
                        This processing type require the quantity field and the person type field to be set on a salary line, and allows for setting the rate field on a salary line.</li><li><i>CorrectionOfAdditionalEmployersContribution</i> - Correction of additional employer's contribution.
                        This processing type require the amount field to be set on salary lines, and the amount should be considered as the bases amount, not the direct employer contribution amount.</li><li><i>CorrectionOfEmployersContribution</i> - Correction of employer's contribution.
                        This processing type require the amount field to be set on salary lines, and the amount should be considered as the bases amount, not the direct employer contribution amount.</li><li><i>DeductionWithBalance</i> - Deduction that has a start balance that should be reduced each payroll.
                        This processing type require setting the field deduction type on salary lines, and the deduction type allows for either amount or rate to be set.
                        Also allows for setting the fields from date and to date.</li><li><i>ElectronicCommunications</i> - The electronic communications.
                        This processing type allow for the amount field to be set on a salary line.</li><li><i>ExpenseRefund</i> - An expense refund.
                        This processing type require the amount field on a salary line, and allows for the vatcode id to be set on the salary line.
                        Vatcode will default to the vatcode of the account used, if not set.</li><li><i>FixedAmount</i> - Fixed amount.
                        This processing type require the amount field to be set on a salary line.</li><li><i>FixedAmountWithQuantity</i> - Fixed amount with variable quantity.
                        This processing type require both the amount field and the quantity field to be set on a salary line.</li><li><i>FixedAmountWithQuantitySubjectToWithholdingTax</i> - Fixed amount with quantity subject to withholding tax.
                        Link to another pay item. This processing type require both the amount field and the quantity field to be set on a salary line.</li><li><i>FixedSalary</i> - Fixed salary.
                        This processing type allows for the amount field to be set on salary lines.
                        For employees with employments that have fixed pay as the remuneration type, the amount field will default inherit the monthly pay calculated from the annal salary, unless overriden in the amount field on salary lines.</li><li><i>FiveDayWeek</i> - Daily wage, 5 day week.
                        This processing type require the quantity field to be set on salary lines.
                        Allow for the rate field to be set on salary lines.
                        The system will calculate a rate if not set/overridden on the salary line.</li><li><i>FreeCarOther</i> - Used when the car is very expensive and the benefit becomes unreasonably high.
                        This processing type require the car list price field to be set on a salary line, and either car registration number or car pool need to be set.
                        Also allows for setting the amount field.</li><li><i>FreeCarOutsideStandardRule</i> - Used on larger vehicles (more than 7500kg) or buses with more than 15 passenger seats.
                        This processing type require both the car registration date field and the car list price field to be set on a salary line,
                        and also allows for setting the fields for amount, home to work kilometers, and private driven kilometers.</li><li><i>FreeCarStandardRule</i> - The free car standard rule.
                        This processing type require both the car registration date field and the car list price field to be set on a salary line,
                        and either car registration number or car pool need to be set.
                        Also allows for setting the field work drive exceeds kilometer limit.</li><li><i>HolidayPay</i> - Holiday pay.
                        No tax should be calculated from this amount.
                        This processing type allow for the amount field to be set on a salary line.</li><li><i>HolidayPayCorrection</i> - Correction of holiday pay under 60.
                        This processing type require the amount field on a salary line, and allows for the income year field to be set on a salary line.</li><li><i>HolidayPayCorrectionOver60</i> - Correction of holiday pay over 60.
                        This processing type require the amount field on a salary line, and allows for the income year field to be set on a salary line.</li><li><i>HolidayPayFinalSettlement</i> - The holiday pay final settlement.
                        Used when an employee quits their job and want all of this years holiday pay paid.
                        Taxes should be calculated from this amount.
                        This must be calculated after all pay items that have IncludeInHolidayPay set to true.
                        This processing type require the amount field to be set on a salary line.</li><li><i>HolidayPayForSpecifiedYear</i> - Same as Holiday Pay, except the user is allowed to select the holiday pay year.
                        This processing type allow for the amount field and the income year field to be set on a salary line.</li><li><i>HolidayPayOver60Years</i> - The holiday pay for employees that are 60 years or older.
                        Taxes should be calculated from this amount.
                        This processing type allow for the amount field and the income year field to be set on a salary line.</li><li><i>HomeVisitsForCommuters</i> - Home visits for commuters.
                        This processing type require the amount field, the number field and the person type field to be set on a salary line.</li><li><i>HourlyWage</i> - Hourly wage.
                        This processing type require the quantity field to be set on a salary line, and allows for the rate field to be set on a salary line.
                        If the rate is not set/overridden on a salary line, the rate will inherit the hourly wage set or calculated from the current active employment salary of the employee.</li><li><i>Lott</i> - Lott that will report number of days.
                        This processing type require the amount field and the number field to be set on a salary line.</li><li><i>PensionDeduction</i> - Pension deduction limited to 2% of 1G.
                        This processing type require the deduction type field to be set on a salary line.
                        Allows for setting the amount or the rate on salary lines depending on the deduction type, as well as the member number.</li><li><i>PensionDeductionUnlimited</i> - Pension deduction not limited to 2% of 1G.
                        This processing type require the deduction type field to be set on a salary line.
                        Allows for setting the amount or the rate on salary lines depending on the deduction type, as well as the member number.</li><li><i>PercentOfFixedSalary</i> - Percent of fixed salary.
                        This processing type allows for the fields amount and rate to be set on a salary line.
                        The amount field is calculated by the system if not set/overriden on the salary line.
                        The rate will be given by the pay item, if not set/overridden on the salary line.</li><li><i>PercentOfHourlyWage</i> - Percent of hourly wage (overtime).
                        Allows the percentage property to be set on the pay item.
                        This processing type require the quantity field to be set on a salary line, and allows for the rate field to be set on a salary line.
                        If the rate is not set/overridden on a salary line, the rate will inherit the hourly wage set or calculated from the current active employment salary of the employee.
                        The percentage of the pay item will increase/decrease the rate accordingly.</li><li><i>QuantityAndFixedRate</i> - Rate based with quantity and a fixed rate specified on pay item level.
                        This processing type require the quantity field to be set on a salary line, the rate will be given by the pay item.
                        If rate is set on the salary line, it will override the rate set on the pay item.</li><li><i>QuantityAndFixedRateReportingZeroAsQuantity</i> - Rate based with quantity and a fixed rate specified on pay item level, that always reports 0 as quantity in A-melding (A02).
                        This processing type require the quantity field to be set on a salary line, the rate will be given by the pay item.
                        If rate is set on the salary line, it will override the rate set on the pay item.</li><li><i>QuantityAndRate</i> - Based on quantity and rate.
                        This processing type require both the quantity field and the rate field to be set on a salary line.</li><li><i>QuantityAndRateReportingZeroAsQuantity</i> - Rate based with quantity and rate, that always reports 0 as quantity in A02.
                        This processing type require both the quantity field and the rate field to be set on a salary line.</li><li><i>QuantityAndRateSubjectToWithholdingTax</i> - Pay items with this processing type is the same as "quantity and rate" but have a link to another pay item where extra tax should be withheld.
                        This processing type require both the quantity field and the rate field to be set on a salary line.</li><li><i>RetroactivePaymentFixedSalary</i> - Retroactive payment fixed salary.
                    This processing type calculates the difference between the expected amount and the amount given for each month in the payroll year.
                    It requires the amount field to be set on a salary line.</li><li><i>RetroactivePaymentHourlyRate</i> - Retroactive payment hourly rate.
                    This processing type calculates the difference between the expected amount and the amount given for each month in the payroll year.
                    It requires the amount field to be set on a salary line.</li><li><i>RetroactivePaymentOvertime</i> - Retroactive payment overtime.
                    This processing type calculates the difference between the expected amount and the amount given for each month in the payroll year.
                    It requires the amount field to be set on a salary line.</li><li><i>RetroactivePaymentDeductionForHoliday</i> - Retroactive payment deduction for holiday.
                    This processing type calculates the difference between the expected amount and the amount given for each month in the payroll year.
                    It requires the amount field to be set on a salary line.</li><li><i>SalaryAdvance</i> - Used when giving an employee a salary advance.
                        This processing type require the amount field to be set on a salary line.</li><li><i>SeafarersAllowanceDaysAtSea</i> - Special allowance for seafarers, based on the number of days at sea.
                        This processing type require the number field to be set on a salary line.</li><li><i>SeafarersAllowanceDeduction</i> - Special allowance for seafarers, with tax deduction.
                        Note that this processing type needs to be done after trade union and pension deduction.
                        No variables needed on a salary line with a pay item using this processing type.</li><li><i>SixDayWeek</i> - Daily wage, 6 day week.
                        This processing type require the quantity field to be set on salary lines.
                        Allow for the rate field to be set on salary lines.
                        The system will calculate a rate if not set/overridden on the salary line.</li><li><i>TradeUnionDeduction</i> - Trade union deduction.
                        This processing type require the supplier field to be set on a salary line.
                        Also allows for setting the following fields on a salary line - the amount, the rate, the minimum amount, the member number, the maximum amount, the supplier bank account id, the use remittance, and the cid.</li><li><i>WageDeductionForHoliday</i> - Deduction in fixed pay for taking a holiday.
                        This processing type allow for the amount field to be set on a salary line.</li><li><i>WageDeductionForHolidayOver60Years</i> - Deduction in fixed pay for taking a holiday.
                        This processing type allow for the amount field to be set on a salary line.</li><li><i>WorkCarKilometers</i> - Used for small commercial trucks less than 7501kg based on the number of km driven privately by the employee.
                        This processing type require both the car list price field and the private driven kilometers field to be set on a salary line, and also allows for setting the field amount.</li><li><i>WorkCarListPrice</i> - Used for small commercial trucks less than 7501kg based on the list price.
                        This processing type require setting the fields for car registration date, car list price and car registration number on a salary line.Also allows for setting the field amount.</li></ul>
      enum:
      - AttachmentOfEarnings
      - AttachmentOfEarningsTax
      - BackPaymentOfPensionAndAnnuities
      - CommuterWithNumberOfJourneys
      - CommuterWithPersonType
      - CommuterWithPersonTypeAndQuantity
      - CommuterWithPersonTypeQuantityAndRate
      - CorrectionOfAdditionalEmployersContribution
      - CorrectionOfEmployersContribution
      - DeductionWithBalance
      - ElectronicCommunications
      - ExpenseRefund
      - FixedAmount
      - FixedAmountWithQuantity
      - FixedAmountWithQuantitySubjectToWithholdingTax
      - FixedSalary
      - FiveDayWeek
      - FreeCarOther
      - FreeCarOutsideStandardRule
      - FreeCarStandardRule
      - HolidayPay
      - HolidayPayCorrection
      - HolidayPayCorrectionOver60
      - HolidayPayFinalSettlement
      - HolidayPayForSpecifiedYear
      - HolidayPayOver60Years
      - HomeVisitsForCommuters
      - HourlyWage
      - Lott
      - PensionDeduction
      - PensionDeductionUnlimited
      - PercentOfFixedSalary
      - PercentOfHourlyWage
      - QuantityAndFixedRate
      - QuantityAndFixedRateReportingZeroAsQuantity
      - QuantityAndRate
      - QuantityAndRateReportingZeroAsQuantity
      - QuantityAndRateSubjectToWithholdingTax
      - RetroactivePaymentFixedSalary
      - RetroactivePaymentHourlyRate
      - RetroactivePaymentOvertime
      - RetroactivePaymentDeductionForHoliday
      - SalaryAdvance
      - SeafarersAllowanceDaysAtSea
      - SeafarersAllowanceDeduction
      - SixDayWeek
      - TradeUnionDeduction
      - WageDeductionForHoliday
      - WageDeductionForHolidayOver60Years
      - WorkCarKilometers
      - WorkCarListPrice
      nullable: true
      type: string
    RoundingPrecisionType:
      description: Enum representing rounding precision types.<p>Members:</p><ul><li><i>OneUnit</i>
        - Posted amount is rounded to whole units (i.e. rounded to amount 1.0).</li><li><i>HalfUnit</i>
        - Posted amount is rounded to half units (i.e. rounded to amount 0.5).</li></ul>
      enum:
      - OneUnit
      - HalfUnit
      nullable: true
      type: string
    SpecialIncomeConditionType:
      description: |-
        Enum representing special income condition types.<p>Members:</p><ul><li><i>HyreTilMannskapPaaFiskeSmaahvalfangstOgSelfangstfartoey</i> - Seafarers’ wages paid to crew members on fishing, small whaling and sealing vessels.</li><li><i>LoennOgAnnenGodtgjoerelseSomIkkeErSkattepliktig</i> - Pay and other remuneration not liable for tax.</li><li><i>LoennUtbetaltFraDenNorskeStatOpptjentIUtlandet</i> - Pay from the Norwegian State earned abroad.</li><li><i>LoennVedArbeidsmarkedstiltak</i> - Pay from labour market schemes.</li><li><i>LoennVedKonkursEllerStatsgarantiOsv</i> - Pay in the event of compulsory liquidation – State guarantee.</li><li><i>SkattefriArbeidsinntektBarnUnderTrettenAar</i> - Tax-free income from employment for children under the age of 13.</li><li><i>UtenlandskeSjoefolkSomIkkeErSkattepliktig</i> - Foreign seafarers who are not liable for tax.</li><li><i>HavMineralFornybarKarbon</i> - Special earning conditions related to Ocean, mineral, renewable, carbon.
                    This value will only be reported on the A02 from 2025 and onwards.</li></ul>
      enum:
      - HyreTilMannskapPaaFiskeSmaahvalfangstOgSelfangstfartoey
      - LoennOgAnnenGodtgjoerelseSomIkkeErSkattepliktig
      - LoennUtbetaltFraDenNorskeStatOpptjentIUtlandet
      - LoennVedArbeidsmarkedstiltak
      - LoennVedKonkursEllerStatsgarantiOsv
      - SkattefriArbeidsinntektBarnUnderTrettenAar
      - UtenlandskeSjoefolkSomIkkeErSkattepliktig
      - HavMineralFornybarKarbon
      nullable: true
      type: string
    ContactGroupDto:
      additionalProperties: false
      description: Properties of contact group.
      example:
        Id: 0
        CreatedDateTimeOffset: 2023-09-18T14:47:00.1234567Z
        LastChangedDateTimeOffset: 2023-09-18T14:47:00.1234567Z
        Name: Top revenue customers
      properties:
        CreatedDateTimeOffset:
          description: The timestamp of the created date of the contact group. UTC
            time.
          example: 2023-09-18T14:47:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        Id:
          description: The identifier of the contact group.
          format: int64
          readOnly: true
          type: integer
        LastChangedDateTimeOffset:
          description: The timestamp of the last change of the contact group. UTC
            time.
          example: 2023-09-18T14:47:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        Name:
          description: The name of the contact group
          example: Top revenue customers
          maxLength: 400
          nullable: true
          type: string
      type: object
    ContactGroupPostDto:
      additionalProperties: false
      description: Properties for creating a new contact group.
      example:
        Name: Top revenue customers
      properties:
        Name:
          description: The name of the contact group
          example: Top revenue customers
          maxLength: 400
          nullable: true
          type: string
      required:
      - Name
      type: object
    EmploymentLayoffPostDto:
      additionalProperties: false
      description: The Employment Layoff post DTO contains all properties relevant
        to creating a new layoff (line) on an employment relationship object in Go.
      example:
        StartDate: 2021-01-01
        AdjustFixedWage: false
        EndedAndReported: false
        ReportingId: POGO_123abc
        ExcludeEmployeeFromPayroll: false
        LayoffPercentage: 58.45
        EndDate: 2021-01-10
      properties:
        AdjustFixedWage:
          description: "Value indicating whether the fixed wage should be adjusted\
            \ by the layoff percentage.\r\nIf true then this layoff percentage will\
            \ be used to adjust the fixed wage."
          example: false
          nullable: true
          type: boolean
        EndDate:
          description: The end date of the layoff.
          example: 2021-01-10
          format: date
          nullable: true
          type: string
        EndedAndReported:
          description: "Value is set true if and when the layoff is ended and the\
            \ reporting (a-melding) is done and finalized.\r\nIf true, the layoff\
            \ will not be included in future reporting (a-melding)."
          example: false
          nullable: true
          type: boolean
        ExcludeEmployeeFromPayroll:
          description: Value is set true if the employee should be excluded from payroll's
            while the layoff is active.
          example: false
          nullable: true
          type: boolean
        LayoffPercentage:
          description: "The percentage of layoff absence.\r\n100 represent fully absent,\r\
            \n50 represent 50% absence from the current employment."
          example: 58.45
          format: double
          nullable: true
          type: number
        ReportingId:
          description: "The id of the layoff that will be reported.\r\nIf not set,\
            \ Go will assign an id.\r\nNot to be confused with the Id property."
          example: POGO_123abc
          nullable: true
          type: string
        StartDate:
          description: The start date of the layoff.
          example: 2021-01-01
          format: date
          nullable: true
          type: string
      required:
      - LayoffPercentage
      - StartDate
      type: object
    LockDateSettingsDto:
      additionalProperties: false
      description: Represents the lock date settings of a client.
      example:
        LockDate: 2023-01-01
      properties:
        LockDate:
          description: The lock date on the client. It's not possible to create accounting
            entries on this date or any previous date on this client.
          example: 2023-01-01
          format: date
          readOnly: true
          type: string
      type: object
    EmployeePayrollSettingsDto:
      additionalProperties: false
      description: The Employee payroll settings DTO contains properties relevant
        for payroll settings on an employee in Go.
      example:
        HolidayPayPercentage: 12.8
        OmitECOnHolidayPayProvision: true
        PayslipDeliveryType: App
        RemunerationPeriodType: Monthly
        NumberOfHolidaysAbove60: 5
        PayslipEmailAddress: abc@online.no
        PayslipLanguageType: Unknown
        HolidayPayAbove60Percentage: 2.3
        LimitHolidayPayAbove60To6G: true
        NumberOfHolidays: 25
      properties:
        HolidayPayAbove60Percentage:
          description: "The holiday pay percentage above 60 years for this employee.\r\
            \nIf null, the general payroll settings will be used.\r\nNote that only\
            \ 1 decimal is allowed, if more than 1 decimal is provided, the value\
            \ will be rounded to nearest 1 decimal."
          example: 2.3
          format: double
          nullable: true
          type: number
        HolidayPayPercentage:
          description: "The holiday pay percentage for the employee.\r\nIf null, the\
            \ general payroll settings will be used.\r\nNote that only 1 decimal is\
            \ allowed, if more than 1 decimal is provided, the value will be rounded\
            \ to nearest 1 decimal."
          example: 12.8
          format: double
          nullable: true
          type: number
        LimitHolidayPayAbove60To6G:
          description: "Property indicating whether holiday pay above 60 years is\
            \ limited to 6G for the employee.\r\nIf null, the general payroll settings\
            \ will be used."
          example: true
          nullable: true
          type: boolean
        NumberOfHolidays:
          description: "The number of holidays for the employee.\r\nIf null, the general\
            \ payroll settings will be used."
          example: 25
          format: int32
          nullable: true
          type: integer
        NumberOfHolidaysAbove60:
          description: "The number of holidays above 60 years for the employee.\r\n\
            If null, the general payroll settings will be used."
          example: 5
          format: int32
          nullable: true
          type: integer
        OmitECOnHolidayPayProvision:
          description: "Property indicating whether employer contribution should be\
            \ used or not for holiday pay provisions for this employee.\r\nThe typical\
            \ case to set true, is for foreign employees subject of a foreign social\
            \ security legislation."
          example: true
          nullable: true
          type: boolean
        PayslipDeliveryType:
          $ref: '#/components/schemas/PayslipDeliveryType'
        PayslipEmailAddress:
          description: "The e-mail address of the employee that the payslip will be\
            \ sent to.\r\nRelevant only if the payslip type is set to e-mail and app.\r\
            \nIf this property is null, the general e-mail address of the employee\
            \ will be used if payslips are delivered by e-mail."
          example: abc@online.no
          nullable: true
          type: string
        PayslipLanguageType:
          $ref: '#/components/schemas/PayslipLanguageType'
        RemunerationPeriodType:
          $ref: '#/components/schemas/RemunerationPeriodType'
      type: object
    PayslipDeliveryType:
      description: "The payslip delivery type.<p>Members:</p><ul><li><i>App</i> -\
        \ Payslip is delivered to the PowerOffice mobile application.</li><li><i>EmailAndApp</i>\
        \ - The payslip is delivered by e-mail to the employee, and to the PowerOffice\
        \ mobile application.</li><li><i>PrintAndApp</i> - A pdf of the payslip is\
        \ generated for download for user managing the payroll, and the payslip is\
        \ delivered to the PowerOffice mobile application.</li></ul>"
      enum:
      - App
      - EmailAndApp
      - PrintAndApp
      nullable: true
      type: string
    PayslipLanguageType:
      description: |-
        The payslip language type.<p>Members:</p><ul><li><i>Unknown</i> - The payslip language is unknown.
                       (this should never be used, contact api-support if you see this)</li><li><i>En_US</i> - Payslip is delivered in English (United States) language.</li><li><i>Nb_NO</i> - The payslip is delivered in Norwegian Bokmål (Norway) language.</li><li><i>Nn_NO</i> - The payslip is delivered in Norwegian Nynorsk (Norway) language.</li><li><i>Sv_SE</i> - The payslip is delivered in Swedish (Sweden) language.</li><li><i>Da_DK</i> - The payslip is delivered in Danish (Denmark) language.</li></ul>
      enum:
      - Unknown
      - En_US
      - Nb_NO
      - Nn_NO
      - Sv_SE
      - Da_DK
      nullable: true
      type: string
    RemunerationPeriodType:
      description: The remuneration period of the employment salary.<p>Members:</p><ul><li><i>Monthly</i>
        - Remuneration on a monthly basis.</li><li><i>TwoWeeks</i> - Remuneration
        every 14 days.</li></ul>
      enum:
      - Monthly
      - TwoWeeks
      nullable: true
      type: string
    InvoiceSentStateDto:
      additionalProperties: false
      description: Represents the sent status of a sales order.
      example:
        LastErrorMessage: ABC AS no longer support the receival of EHF invoice
        SentDateTimeOffset: 2024-09-03T11:35:00.8674476Z
        InvoiceNo: 10003
        Id: af290c8f-b54f-4a0a-998b-0bf879bf1bf7
        DueDate: 2024-09-16
        InvoiceDeliveryType: PdfByEmail
        IsInvoiceBeingProcessed: false
      properties:
        DueDate:
          description: The actual due date of the invoice or credit note.
          example: 2024-09-16
          format: date
          nullable: true
          readOnly: true
          type: string
        Id:
          description: "The identifier of a sales order, outgoing invoice or outgoing\
            \ credit note."
          example: af290c8f-b54f-4a0a-998b-0bf879bf1bf7
          format: uuid
          readOnly: true
          type: string
        InvoiceDeliveryType:
          $ref: '#/components/schemas/InvoiceDeliveryType'
        InvoiceNo:
          description: The invoice number in number format. Available only for sent
            and posted invoices.
          example: 10003
          format: int64
          nullable: true
          readOnly: true
          type: integer
        IsInvoiceBeingProcessed:
          description: "A flag indicating whether the send request was successfully\
            \ queued.\r\nWill be true while the invoice is in transit.\r\nAfter the\
            \ invoice is delivered to the customer, IsInvoiceBeingProcessed will be\
            \ set to false."
          example: false
          nullable: true
          readOnly: true
          type: boolean
        LastErrorMessage:
          description: If invoice delivery fails this property will contain the last
            error message.
          example: ABC AS no longer support the receival of EHF invoice
          nullable: true
          readOnly: true
          type: string
        SentDateTimeOffset:
          description: "The date this sales order was invoiced using Go. Will only\
            \ be set if the order was successfully invoiced.\r\nFor integrations using\
            \ the createAndSendInvoice request, this property having a value will\
            \ confirm the delivery.\r\nTo retrieve any further invoice information,\
            \ the OutgoingInvoices reporting endpoint should be used."
          example: 2024-09-03T11:35:00.8674476Z
          format: date-time
          nullable: true
          readOnly: true
          type: string
      type: object
    CashVoucherPostDto:
      additionalProperties: false
      description: Dto for cash bank voucher type
      example:
        CurrencyCode: EUR
        SaftBatchId: "12312"
        Description: My first voucher description
        ImportedVoucherNo: 23145
        VoucherDate: 2024-03-20
        SaftSourceId: System_123
        VoucherLines:
        - ExternalLineReference: 123ABC
          AccountId: 12345
          Description: Hello accounting world!
          Dim3Id: 12345
          Dim2Id: 12345
          Dim1Id: 12345
          LocationId: 12345
          ProjectId: 12345
          Quantity: 100
          CurrencyExchangeRate: 10.78
          ProductId: 12345
          VatReturnSpecification: None
          VatId: 12345
          CurrencyAmount: 69420
          CurrencyCode: USD
          Quantity2: 200
          PostingDate: 2021-09-28
          CustomMatchingReference: 123ABC
          DepartmentId: 12345
        - ExternalLineReference: 123ABC
          AccountId: 12345
          Description: Hello accounting world!
          Dim3Id: 12345
          Dim2Id: 12345
          Dim1Id: 12345
          LocationId: 12345
          ProjectId: 12345
          Quantity: 100
          CurrencyExchangeRate: 10.78
          ProductId: 12345
          VatReturnSpecification: None
          VatId: 12345
          CurrencyAmount: 69420
          CurrencyCode: USD
          Quantity2: 200
          PostingDate: 2021-09-28
          CustomMatchingReference: 123ABC
          DepartmentId: 12345
        ExternalImportReference: 123abc
      properties:
        CurrencyCode:
          description: "The currency code of the voucher header.\r\nThe line amounts\
            \ will default be determined in the currency specified in the header.\r\
            \nFor some voucher types, different currency codes can be set on the line\
            \ level, thus overriding the currency of the head.\r\nCurrencies active\
            \ on the client can be queried using the AccountingSettings service. Currency\
            \ codes follow the ISO4217 standard."
          example: EUR
          maxLength: 3
          minLength: 0
          nullable: true
          type: string
        Description:
          description: The description field of the voucher header.
          example: My first voucher description
          nullable: true
          type: string
        ExternalImportReference:
          description: "The external import reference associated with the voucher.\
            \ This property can be set by integrations creating\r\nvouchers, in order\
            \ to reference the external system and ensure a duplicate check (only\
            \ one instance of the\r\nreference can exist on the client). Can be used\
            \ to correlate/duplicate check transactions. Guid's are\r\nrecommended,\
            \ or other unique references. This property is only available using the\
            \ api (not visible in the user\r\ninterface)"
          example: 123abc
          nullable: true
          type: string
        ImportedVoucherNo:
          description: "The external voucher number. Can be used to reference the\
            \ voucher number in the external system. The external\r\nvoucher number\
            \ is visible in Go in various reports."
          example: 23145
          format: int64
          nullable: true
          type: integer
        SaftBatchId:
          description: "The SAF-T batch id. This is the ID of the batch in the system\
            \ that transferred the voucher. Should be set if\r\nthis voucher is a\
            \ batch voucher containing the entries of multiple vouchers in the external\
            \ system. When this\r\nvoucher is exported to SAF-T, this property is\
            \ transactions BatchID in the SAF-T file. The external systems\r\nSAF-T\
            \ export should set the same BatchId on all the transactions that are\
            \ included in this Voucher to ensure\r\naudit trail. Max length 35 characters."
          example: "12312"
          nullable: true
          type: string
        SaftSourceId:
          description: "The SAF-T source id. This is the ID of the system that generated\
            \ the voucher. When this voucher is exported to\r\nSAF-T, this property\
            \ is mapped on the transactions SourceID in the SAF-T file. If the creating\
            \ system is\r\nrequired to export it's own SAF-T file, this source id\
            \ should correspond with the SystemID in the SAF-T file of\r\nthe external\
            \ system to ensure an audit trail. Max length is 35 characters."
          example: System_123
          nullable: true
          type: string
        VoucherDate:
          description: "The voucher date.\r\nThis represents the date of the voucher,\
            \ the document date of an invoice for instance,\r\nand may differ from\
            \ the transaction dates for lines the voucher, depending on the type of\
            \ voucher."
          example: 2024-03-20
          format: date
          type: string
        VoucherLines:
          description: The lines of the cash voucher to be posted
          items:
            $ref: '#/components/schemas/CashVoucherLinePostDto'
          nullable: true
          type: array
      required:
      - CurrencyCode
      - VoucherDate
      type: object
    CashVoucherLinePostDto:
      additionalProperties: false
      description: The lines of the cash voucher to be posted
      example:
        ExternalLineReference: 123ABC
        AccountId: 12345
        Description: Hello accounting world!
        Dim3Id: 12345
        Dim2Id: 12345
        Dim1Id: 12345
        LocationId: 12345
        ProjectId: 12345
        Quantity: 100
        CurrencyExchangeRate: 10.78
        ProductId: 12345
        VatReturnSpecification: None
        VatId: 12345
        CurrencyAmount: 69420
        CurrencyCode: USD
        Quantity2: 200
        PostingDate: 2021-09-28
        CustomMatchingReference: 123ABC
        DepartmentId: 12345
      properties:
        AccountId:
          description: The id of the general ledger account or the subledger account
            to post the amount.
          example: 12345
          format: int64
          nullable: true
          type: integer
        CurrencyAmount:
          description: "The amount on the line, in the currency specified by the currency\
            \ code of the voucher or the currency of the voucher line if available.\r\
            \nGross amounts should be provided, along with the relevant vat code.\
            \ The amount must be a positive or negative number not 0."
          example: 69420
          format: double
          type: number
        CurrencyCode:
          description: "The currency code of the voucher line. Will inherit the currency\
            \ code of the voucher head if not set.\r\nThe line currency amounts will\
            \ be determined in the currency specified on the line. Currencies active\
            \ on the\r\nclient can be queried using the AccountingSettings service.\
            \ Currency codes follow the ISO4217 standard."
          example: USD
          nullable: true
          type: string
        CurrencyExchangeRate:
          description: "The normalized currency exchange rate. Always base 1.\r\n\
            \            \r\nRelevant to set if the voucher line have a foreign currency\
            \ with a specific currency exchange rate.\r\nIf not set, the field will\
            \ inherit the rate in Go for the posting date set. The rates in Go are\
            \ retrieved\r\nfrom ECB via api."
          example: 10.78
          format: double
          nullable: true
          type: number
        CustomMatchingReference:
          description: "The custom matching reference of the line. This property may\
            \ be used for matching purposes on sub-ledger\r\naccounts, where entries\
            \ posted with a CustomMatchingReference will be matched immediately with\
            \ existing entries\r\nin the sub-ledger that have the same CustomMatchingReference\
            \ and opposite amount (unless existing entries are\r\nalready matched\
            \ out)."
          example: 123ABC
          nullable: true
          type: string
        DepartmentId:
          description: The department Id.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Description:
          description: The description of the voucher line.
          example: Hello accounting world!
          nullable: true
          type: string
        Dim1Id:
          description: The id of the dimension 1 associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim2Id:
          description: The id of the dimension 2 associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim3Id:
          description: The id of the dimension 3 associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        ExternalLineReference:
          description: "The external line reference associated with the line. This\
            \ property can only be set using the api, in order\r\nto reference the\
            \ external system's line. Can be used to correlate/duplicate check transactions."
          example: 123ABC
          nullable: true
          type: string
        LocationId:
          description: The id of the location dimension associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        PostingDate:
          description: "The posting date.\r\nThis is the date of effect in the accounting\
            \ system for the Amount and CurrencyAmount (also the currency\r\nconversion\
            \ date used by Go if the currency rate was not set explicit when posted).\r\
            \nAlways present on transactions."
          example: 2021-09-28
          format: date
          type: string
        ProductId:
          description: The product id associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        ProjectId:
          description: The id of the project associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Quantity:
          description: "The quantity dimension set on the line.\r\nUsually associated\
            \ with the product set on the line.\r\nIf the client is an agriculture\
            \ client, the quantity is associated with the unit1 of the general ledger\
            \ account."
          example: 100
          format: double
          nullable: true
          type: number
        Quantity2:
          description: "The quantity2 dimension set on the line.\r\nRelevant only\
            \ for agriculture clients, where the quantity2 is associated with the\
            \ unit2 of the general ledger account."
          example: 200
          format: double
          nullable: true
          type: number
        VatId:
          description: The id of the vat code used for the credit entry.
          example: 12345
          format: int32
          nullable: true
          type: integer
        VatReturnSpecification:
          $ref: '#/components/schemas/VatReturnSpecification'
      required:
      - AccountId
      - PostingDate
      - VatId
      type: object
    SupplierInvoiceJournalEntryVoucherPostDto:
      additionalProperties: false
      description: Properties available for creating a journal entry supplier invoice.
      example:
        Description: My first voucher description
        Dim3Id: 12345
        Dim2Id: 12345
        Dim1Id: 12345
        SupplierVoucherLines:
        - DebitAccountId: 12345
          Accrual:
            BalanceAccountNo: 2970
            IsActive: true
            BalanceAccountAgricultureDepartment: None
            FromDate: 2023-01-01
            ToDate: 2023-12-31
            BalanceAccountId: 123456
          Description: Hello accounting world!
          CreditVatId: 12345
          Dim3Id: 12345
          Dim2Id: 12345
          DebitVatId: 12345
          Dim1Id: 12345
          CreditAccountType: Customer
          ProductId: 12345
          CreditVatReturnSpecification: None
          ItemDescription: ItemDescription
          CreditContactId: 123456
          DebitContactId: 123456
          DebitAccountAgricultureDepartment: null
          DebitVatReturnSpecification: null
          SellersItemIdentification: SellersItemIdentification
          ItemName: ItemName
          DebitAccountType: null
          CreditAccountId: 12345
          LocationId: 12345
          ProjectId: 12345
          Quantity: 100
          CreatedDateTimeOffset: 2024-03-20T12:52:00.1234567Z
          CurrencyAmount: 69420
          Quantity2: 200
          AgricultureDetails:
            ProductCode: 1
            ProductDetailCode: 5
            ProductQualityCode: 5
            ProductRegistrationId: ProductRegistrationId
            ProductGtinNumber: ProductGtinNumber
            ProductRacialCode: ProductRacialCode
            ProductAnimalId: ProductAnimalId
            ProductHasForestCertificationCode: true
            IsMainProductLine: true
            ProductAdditionSubtractionCode: 6
            ProductGender: Male
            AgriculturalIndustryCode: 0
            ProductMachineType: ProductMachineType
            ProductEcological: true
            ProductDateOfBirth: 2000-01-23
            ProductChassisId: ProductChassisId
          DepartmentId: 12345
          Id: 12345
          CreditAccountAgricultureDepartment: None
          LastChangedDateTimeOffset: 2024-03-20T13:13:00.1234567Z
        - DebitAccountId: 12345
          Accrual:
            BalanceAccountNo: 2970
            IsActive: true
            BalanceAccountAgricultureDepartment: None
            FromDate: 2023-01-01
            ToDate: 2023-12-31
            BalanceAccountId: 123456
          Description: Hello accounting world!
          CreditVatId: 12345
          Dim3Id: 12345
          Dim2Id: 12345
          DebitVatId: 12345
          Dim1Id: 12345
          CreditAccountType: Customer
          ProductId: 12345
          CreditVatReturnSpecification: None
          ItemDescription: ItemDescription
          CreditContactId: 123456
          DebitContactId: 123456
          DebitAccountAgricultureDepartment: null
          DebitVatReturnSpecification: null
          SellersItemIdentification: SellersItemIdentification
          ItemName: ItemName
          DebitAccountType: null
          CreditAccountId: 12345
          LocationId: 12345
          ProjectId: 12345
          Quantity: 100
          CreatedDateTimeOffset: 2024-03-20T12:52:00.1234567Z
          CurrencyAmount: 69420
          Quantity2: 200
          AgricultureDetails:
            ProductCode: 1
            ProductDetailCode: 5
            ProductQualityCode: 5
            ProductRegistrationId: ProductRegistrationId
            ProductGtinNumber: ProductGtinNumber
            ProductRacialCode: ProductRacialCode
            ProductAnimalId: ProductAnimalId
            ProductHasForestCertificationCode: true
            IsMainProductLine: true
            ProductAdditionSubtractionCode: 6
            ProductGender: Male
            AgriculturalIndustryCode: 0
            ProductMachineType: ProductMachineType
            ProductEcological: true
            ProductDateOfBirth: 2000-01-23
            ProductChassisId: ProductChassisId
          DepartmentId: 12345
          Id: 12345
          CreditAccountAgricultureDepartment: None
          LastChangedDateTimeOffset: 2024-03-20T13:13:00.1234567Z
        CurrencyCode: EUR
        VoucherDate: 2024-03-20
        ContractNo: CO-1234
        Payout: false
        PurchaseOrderReference: PO-1337
        SupplierBankAccountId: 12345
        DueDate: 2024-03-21
        ClientBankAccountId: 12345
        Cid: "9235400011927001"
        Comment: My first supplier invoice comment.
        PaymentDate: 2024-03-31
        LocationId: 12345
        ProjectId: 12345
        CurrencyExchangeRate: 10.78
        InvoiceNo: "12345"
        CurrencyAmount: 69420
        CurrencyRegistryText: EUR
        PaymentOnHold: false
        DepartmentId: 12345
        CurrencyRegistryCode: None
        SupplierAccountId: 12345
      properties:
        Cid:
          description: "The cid number (norwegian: KID), if applicable to the voucher."
          example: "9235400011927001"
          nullable: true
          type: string
        ClientBankAccountId:
          description: "The identifier of the client bank account used for payment/remittance.\r\
            \nRelevant if payout is true. If not set, the default client bank account\
            \ will be used for any remittance."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Comment:
          description: "Optional comment that will be shown in the journal entry history\
            \ in Go.\r\nOnly new vouchers will get the comment as part of the initial\
            \ history.\r\nIt is thus not possible to change the comment later, and\
            \ it will not be returned in API-calls.\r\nThe comment text should be\
            \ human-readable. If necessary, use newline characters (\\n) to format\
            \ the text for better readability"
          example: My first supplier invoice comment.
          maxLength: 1000
          nullable: true
          type: string
        ContractNo:
          description: The contract number of the supplier invoice.
          example: CO-1234
          nullable: true
          type: string
        CurrencyAmount:
          description: "The total amount of the supplier voucher, in the currency\
            \ specified by the currency code of the voucher."
          example: 69420
          format: double
          type: number
        CurrencyCode:
          description: "The currency code of the voucher header.\r\nThe line amounts\
            \ will default be determined in the currency specified in the header.\r\
            \nFor some voucher types, different currency codes can be set on the line\
            \ level, thus overriding the currency of the head.\r\nCurrencies active\
            \ on the client can be queried using the AccountingSettings service. Currency\
            \ codes follow the ISO4217 standard."
          example: EUR
          maxLength: 3
          minLength: 0
          nullable: true
          type: string
        CurrencyExchangeRate:
          description: "The normalized currency exchange rate.\r\nAlways base 1.\r\
            \nRelevant to set if the voucher have a foreign currency with a specific\
            \ currency exchange rate.\r\nIf not set, the field will inherit the rate\
            \ in Go for the voucher date set.\r\nThe rates in Go are retrieved from\
            \ ECB via API."
          example: 10.78
          format: double
          nullable: true
          type: number
        CurrencyRegistryCode:
          $ref: '#/components/schemas/CurrencyRegistryCode'
        CurrencyRegistryText:
          description: The currency registry text of the supplier invoice.
          example: EUR
          nullable: true
          type: string
        DepartmentId:
          description: "The department Id of the voucher header.\r\nThe lines will\
            \ inherit the department from the voucher head if not specified on the\
            \ lines.\r\nDepartments can be queried and identified using the Department\
            \ service."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Description:
          description: The description field of the voucher header.
          example: My first voucher description
          nullable: true
          type: string
        Dim1Id:
          description: "The id of the dimension 1 associated with the voucher header.\r\
            \nThe lines will inherit the dim1 from the voucher head if not specified\
            \ on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim2Id:
          description: "The id of the dimension 2 associated with the voucher header.\r\
            \nThe lines will inherit the dim2 from the voucher head if not specified\
            \ on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim3Id:
          description: "The id of the dimension 3 associated with the voucher header.\r\
            \nThe lines will inherit the dim3 from the voucher head if not specified\
            \ on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        DueDate:
          description: "The due date of the supplier invoice (i.e. when it is due\
            \ paid).\r\nMust be greater or equal to the voucher date."
          example: 2024-03-21
          format: date
          nullable: true
          type: string
        InvoiceNo:
          description: The invoice number of the supplier invoice.
          example: "12345"
          maxLength: 40
          nullable: true
          type: string
        LocationId:
          description: "The id of the location dimension associated with the voucher\
            \ header.\r\nThe lines will inherit the location from the voucher head\
            \ if not specified on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        PaymentDate:
          description: "The suggested payment date if this voucher is to be subject\
            \ of remittance.\r\nRelevant if payout is set true.\r\nIf not set in POST\
            \ or PATCH operations, the field will default to the due date of supplier\
            \ invoices and the voucher date of supplier credit notes.\r\nTo remove\
            \ any value from PaymentDate in PATCH, both PaymentDate and DueDate must\
            \ be removed."
          example: 2024-03-31
          format: date
          nullable: true
          type: string
        PaymentOnHold:
          description: "Property indicating whether the voucher remittance should\
            \ be on hold.\r\nDefault false, and if true a remittance draft will be\
            \ created when the voucher is posted, but with no payment date suggested\
            \ - rather the state 'on hold'."
          example: false
          nullable: true
          type: boolean
        Payout:
          description: "Property indicating whether the voucher should be paid using\
            \ remittance.\r\nDefault true, and if true a remittance draft will be\
            \ created when the voucher is posted."
          example: false
          nullable: true
          type: boolean
        ProjectId:
          description: "The id of the project associated with the voucher header.\r\
            \nThe lines will inherit the project from the voucher head if not specified\
            \ on the lines."
          example: 12345
          format: int64
          nullable: true
          type: integer
        PurchaseOrderReference:
          description: The purchase order reference. The property can be used to reference
            purchase order placed to the supplier.
          example: PO-1337
          nullable: true
          type: string
        SupplierAccountId:
          description: The id of the supplier subledger account.
          example: 12345
          format: int64
          nullable: true
          type: integer
        SupplierBankAccountId:
          description: The identifier of the supplier bank account associated with
            the voucher.
          example: 12345
          format: int64
          nullable: true
          type: integer
        SupplierVoucherLines:
          description: The lines of the supplier invoice.
          items:
            $ref: '#/components/schemas/SupplierVoucherLineDto'
          nullable: true
          type: array
        VoucherDate:
          description: "The voucher date.\r\nThis represents the date of the voucher,\
            \ the document date of an invoice for instance,\r\nand may differ from\
            \ the transaction dates for lines the voucher, depending on the type of\
            \ voucher."
          example: 2024-03-20
          format: date
          nullable: true
          type: string
      required:
      - CurrencyCode
      - InvoiceNo
      - VoucherDate
      type: object
    CustomDimensionSettingsDto:
      additionalProperties: false
      description: "DTO for CustomDimensionSettings, used for getting the client settings\
        \ of the custom dimensions."
      example:
        IsActive: true
        Ordinal: 1
        Name: Machines
      properties:
        IsActive:
          description: A value indicating whether this dimension ordinal is active
            and in use. Inactive sets disable the usage of that custom dimension set
            in the GUI.
          example: true
          nullable: true
          readOnly: true
          type: boolean
        Name:
          description: "The the name of the custom dimension set of the given ordinal.\r\
            \nProvide information that indicate what the dimension set is used for.\
            \ An example could be a client that has defined Dim1 to be \"Machines\"\
            , where custom dimension values of Dim1 are the machine registration codes."
          example: Machines
          nullable: true
          readOnly: true
          type: string
        Ordinal:
          description: "The custom dimension set ordinal (1=Dim1, 2=Dim3, 3=Dim3)."
          example: 1
          format: int32
          readOnly: true
          type: integer
      type: object
    VoucherApprovalPostDto:
      additionalProperties: false
      description: Dto for available information to set when updating the approval
        state back to the Go client
      example:
        Comment: "\r\n                \"External system feature:\\n\r\n          \
          \      - Added project to lines. \\n\r\n                - Project code corrected\
          \ in line 2.\\n\r\n                Approved in external system by:\\n\r\n\
          \                - Project Manager Espen Askeladd\\n\r\n               \
          \ - Department Manager Ola Nordmann.\"\r\n            "
        VoucherApprovalStatus: Approve
      properties:
        Comment:
          description: "Comment associated with the approval status. We recommend\
            \ that you provide a comment that reflects\r\nthe previous events in the\
            \ external system and/or information that is relevant for the accounting\r\
            \nentries. The comment will be visible in the user interface in Go and\
            \ added as a voucher history entry.\r\n            \r\nThe comment text\
            \ should be human-readable. If necessary, use newline characters (\\n)\
            \ to format the text for better readability."
          example: "\r\n                \"External system feature:\\n\r\n        \
            \        - Added project to lines. \\n\r\n                - Project code\
            \ corrected in line 2.\\n\r\n                Approved in external system\
            \ by:\\n\r\n                - Project Manager Espen Askeladd\\n\r\n  \
            \              - Department Manager Ola Nordmann.\"\r\n            "
          maxLength: 1000
          minLength: 1
          type: string
        VoucherApprovalStatus:
          $ref: '#/components/schemas/VoucherApprovalStatus'
      required:
      - Comment
      - VoucherApprovalStatus
      type: object
    VoucherApprovalStatus:
      description: Enum defining what kind of status to post back to Go for the voucher
        workflow<p>Members:</p><ul><li><i>Approve</i> - The voucher is approved by
        the integration</li><li><i>Reject</i> - Reject the voucher. This will return
        the voucher to the initial journal entry workflow in draft state</li></ul>
      enum:
      - Approve
      - Reject
      nullable: true
      type: string
    CustomDimensionDto:
      additionalProperties: false
      description: DTO for CustomDimensions
      example:
        IsActive: true
        Ordinal: 1
        ExternalImportReference: abc123-def567
        Id: 12345
        Code: 4A
        CreatedDateTimeOffset: 2023-06-05T12:31:00.1234567Z
        CreatedFromImportJournalId: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        LastChangedDateTimeOffset: 2023-06-05T12:31:00.1234567Z
        Name: Tickers
      properties:
        Code:
          description: "The code of the custom dimension. The code must be unique\
            \ for each ordinal (within dim1, dim2 and dim3 respectively).\r\nGo will\
            \ assign a code automatically, if not provided."
          example: 4A
          maxLength: 40
          nullable: true
          type: string
        CreatedDateTimeOffset:
          description: The timestamp of the created date of the custom dimension.
            UTC time.
          example: 2023-06-05T12:31:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        CreatedFromImportJournalId:
          description: "The created from import journal identifier, if present. Provided\
            \ if this custom dimension was been created in Go by an import."
          example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
          format: uuid
          nullable: true
          readOnly: true
          type: string
        ExternalImportReference:
          description: "The external import reference. This field is not available\
            \ in the GUI, but can be used by the integrating party to reference the\
            \ external system.\r\nThe field must be unique within each set of custom\
            \ dimension (unique for dim1, dim2 or dim3).\r\nAny integration with access\
            \ can set the field (and change it)."
          example: abc123-def567
          maxLength: 50
          nullable: true
          type: string
        Id:
          description: "The identifier of the custom dimension.\r\nThis identifier\
            \ is unique and assigned by PowerOffice Go when a new entity is saved,\
            \ and should be provided when an entity should be edited or deleted (PATCH\
            \ or DELETE)."
          example: 12345
          format: int64
          readOnly: true
          type: integer
        IsActive:
          description: A value indicating whether this instance is active. Inactive
            custom dimensions disable the usage of that custom dimension in the GUI.
          example: true
          nullable: true
          type: boolean
        LastChangedDateTimeOffset:
          description: The timestamp of the last change of the custom dimension. UTC
            time.
          example: 2023-06-05T12:31:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        Name:
          description: The name of the custom dimension
          example: Tickers
          maxLength: 200
          nullable: true
          type: string
        Ordinal:
          description: "The custom dimension ordinal, providing information on which\
            \ of the available custom dimension sets this custom dimension belong\
            \ to (1=Dim1, 2=Dim3, 3=Dim3)."
          example: 1
          format: int32
          maximum: 3
          minimum: 1
          type: integer
      type: object
    FinalizeOnboardingResponseDto:
      additionalProperties: false
      description: The finalize onboarding response DTO contains properties necessary
        for finalizing the onboarding processes in external system.
      example:
        UserEmail: jon.doe@company.no
        OnboardedClientsInformation:
        - ClientName: ABC AS
          ClientOrganizationNumber: "980386465"
          ClientKey: f1ba4158-7bbc-4ecc-a68d-1a8ac42c5480
        - ClientName: ABC AS
          ClientOrganizationNumber: "980386465"
          ClientKey: f1ba4158-7bbc-4ecc-a68d-1a8ac42c5480
      properties:
        OnboardedClientsInformation:
          description: A collection of the onboarded clients information.
          items:
            $ref: '#/components/schemas/OnboardedClientInformation'
          nullable: true
          readOnly: true
          type: array
        UserEmail:
          description: The email of the user that authenticated and onboarded the
            integrated application.
          example: jon.doe@company.no
          nullable: true
          readOnly: true
          type: string
      type: object
    OnboardedClientInformation:
      additionalProperties: false
      description: Contains information about the onboarded client.
      example:
        ClientName: ABC AS
        ClientOrganizationNumber: "980386465"
        ClientKey: f1ba4158-7bbc-4ecc-a68d-1a8ac42c5480
      properties:
        ClientKey:
          description: "The clientkey for the specific client.\r\nThis key is a secret,\
            \ and must be stored and handled as such.\r\nThe clientkey is unique per\
            \ instance of a client integration - i.e. unique per client.\r\nPlease\
            \ refer to our documentation for all the details on the client credentials\
            \ grant flow."
          example: f1ba4158-7bbc-4ecc-a68d-1a8ac42c5480
          format: uuid
          readOnly: true
          type: string
        ClientName:
          description: The name of the client that onboarded the integrated application.
          example: ABC AS
          nullable: true
          readOnly: true
          type: string
        ClientOrganizationNumber:
          description: The organization number of the client that onboarded the integrated
            application and the related clientkey.
          example: "980386465"
          nullable: true
          readOnly: true
          type: string
      type: object
    FinalizeOnboardingPostDto:
      additionalProperties: false
      description: The finalize onboarding post DTO contains properties necessary
        for finalizing the onboarding processes in GO.
      example:
        OnboardingToken: iQcF9czVruLZQbhXyMTt7a11IyTDwZEwU1MifUbYN5RTy4I6sfoOX3HM2u5huwc7hz7SqRTLMIKkuiktiU1bWglYJd48uVv5QIZe2lhqPSGxJBQMMn9yTGWzn6I8BqKK
      properties:
        OnboardingToken:
          description: Include the token received after the user have authenticated
            and authorized the integrated application.
          example: iQcF9czVruLZQbhXyMTt7a11IyTDwZEwU1MifUbYN5RTy4I6sfoOX3HM2u5huwc7hz7SqRTLMIKkuiktiU1bWglYJd48uVv5QIZe2lhqPSGxJBQMMn9yTGWzn6I8BqKK
          nullable: true
          type: string
      type: object
    AssignmentLightWeightDto:
      additionalProperties: false
      description: The available properties for the Quality Assignment Light DTO
      example:
        Status: Draft
        KeyAccountManagerSubledgerAccountId: 123456
        Description: The very best accounting assignment
        AgreementSignedDate: 2000-01-23T04:56:07.000+00:00
        AssociateSubledgerAccountId: 123456
        CustomerContactPersonId: 123456
        ProjectId: 123456
        CustomerSubledgerAccountId: 123456
        EndDate: 2000-01-23T04:56:07.000+00:00
        StartDate: 2000-01-23T04:56:07.000+00:00
        RevisionDate: 2000-01-23T04:56:07.000+00:00
        PayrollManagerSubledgerAccountId: 123456
        CurrentAgreementDate: 2000-01-23T04:56:07.000+00:00
        Id: 123456
        ManagerSubledgerAccountId: 123456
      properties:
        AgreementSignedDate:
          description: The date the assignment agreement was signed.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        AssociateSubledgerAccountId:
          description: "The identifier of the employee subledger account, identifying\
            \ the employee set as the assignment associate for this quality assignment.\
            \ If null, this property inherit from the assignment manager property.\
            \ Employees can be queried and identified using the Employees endpoint"
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        CurrentAgreementDate:
          description: The current date of the quality assignment agreement.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        CustomerContactPersonId:
          description: The id of the customer's contact person associated with the
            quality assignment. Contact persons can be queried and identified using
            the ContactPersons endpoint.
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        CustomerSubledgerAccountId:
          description: "The id of the customer subledger account, identifying the\
            \ customer associated with the quality assignment. Customers can be queried\
            \ and identified using the Customers endpoint."
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        Description:
          description: The description of the quality assignment.
          example: The very best accounting assignment
          nullable: true
          readOnly: true
          type: string
        EndDate:
          description: The start date of the quality assignment. Date is inclusive.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        Id:
          description: The identifier of the quality assignment entity. The id is
            assigned by Go when the assignment entity is created.
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        KeyAccountManagerSubledgerAccountId:
          description: "The identifier of the employee subledger account, identifying\
            \ the employee set as the key account manager for this quality assignment.\
            \ If null, this property inherit from the assignment manager property.\
            \ Employees can be queried and identified using the Employees endpoint"
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        ManagerSubledgerAccountId:
          description: "The identifier of the employee subledger account, identifying\
            \ the employee set as the assignment manager for this quality assignment.\
            \ Employees can be queried and identified using the Employees endpoint"
          example: 123456
          format: int64
          type: integer
        PayrollManagerSubledgerAccountId:
          description: "The identifier of the employee subledger account, identifying\
            \ the employee set as the assignment payroll manager for this quality\
            \ assignment. If null, this property inherit from the assignment manager\
            \ property. Employees can be queried and identified using the Employees\
            \ endpoint"
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        ProjectId:
          description: The id of the project associated with the quality assignment.
            Projects can be queried and identified using the Project endpoint.
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        RevisionDate:
          description: The date of the last revision of the assignment.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        StartDate:
          description: The start date of the quality assignment. Date is inclusive.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        Status:
          $ref: '#/components/schemas/AssignmentAgreementStatus'
      required:
      - ManagerSubledgerAccountId
      type: object
    BankVoucherDto:
      additionalProperties: false
      description: Dto for bank voucher type
      example:
        CurrencyCode: EUR
        SaftBatchId: "12312"
        Description: My first voucher description
        ImportedVoucherNo: 23145
        VoucherDate: 2024-03-20
        SaftSourceId: System_123
        VoucherLines:
        - ExternalLineReference: 123ABC
          AccountId: 12345
          Description: Hello accounting world!
          Dim3Id: 12345
          Dim2Id: 12345
          Dim1Id: 12345
          LocationId: 12345
          ProjectId: 12345
          Quantity: 100
          CurrencyExchangeRate: 10.78
          InvoiceNo: "753159"
          ProductId: 12345
          VatReturnSpecification: None
          VatId: 12345
          CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
          CurrencyAmount: 69420
          CurrencyCode: USD
          Quantity2: 200
          PostingDate: 2021-09-28
          CustomMatchingReference: 123ABC
          DepartmentId: 12345
          Id: 0
          Cid: "9235400011927001"
        - ExternalLineReference: 123ABC
          AccountId: 12345
          Description: Hello accounting world!
          Dim3Id: 12345
          Dim2Id: 12345
          Dim1Id: 12345
          LocationId: 12345
          ProjectId: 12345
          Quantity: 100
          CurrencyExchangeRate: 10.78
          InvoiceNo: "753159"
          ProductId: 12345
          VatReturnSpecification: None
          VatId: 12345
          CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
          CurrencyAmount: 69420
          CurrencyCode: USD
          Quantity2: 200
          PostingDate: 2021-09-28
          CustomMatchingReference: 123ABC
          DepartmentId: 12345
          Id: 0
          Cid: "9235400011927001"
        IsReversed: false
        ExternalImportReference: 123abc
        Id: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        VoucherNo: 123456
      properties:
        CreatedDateTimeOffset:
          description: The timestamp the year end voucher entity was created.
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        CurrencyCode:
          description: "The currency code of the voucher header.\r\nThe line amounts\
            \ will default be determined in the currency specified in the header.\r\
            \nFor some voucher types, different currency codes can be set on the line\
            \ level, thus overriding the currency of the head.\r\nCurrencies active\
            \ on the client can be queried using the AccountingSettings service. Currency\
            \ codes follow the ISO4217 standard."
          example: EUR
          maxLength: 3
          minLength: 0
          nullable: true
          type: string
        Description:
          description: The description field of the voucher header.
          example: My first voucher description
          nullable: true
          type: string
        ExternalImportReference:
          description: "The external import reference associated with the voucher.\
            \ This property can be set by integrations creating\r\nvouchers, in order\
            \ to reference the external system and ensure a duplicate check (only\
            \ one instance of the\r\nreference can exist on the client). Can be used\
            \ to correlate/duplicate check transactions. Guid's are\r\nrecommended,\
            \ or other unique references. This property is only available using the\
            \ api (not visible in the user\r\ninterface)"
          example: 123abc
          nullable: true
          type: string
        Id:
          description: A value that uniquely identifies this voucher. The Id is assigned
            by Go when the entry is created
          example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
          format: uuid
          readOnly: true
          type: string
        ImportedVoucherNo:
          description: "The external voucher number. Can be used to reference the\
            \ voucher number in the external system. The external\r\nvoucher number\
            \ is visible in Go in various reports."
          example: 23145
          format: int64
          nullable: true
          type: integer
        IsReversed:
          description: Value indicating whether this voucher has been reversed.
          example: false
          nullable: true
          readOnly: true
          type: boolean
        SaftBatchId:
          description: "The SAF-T batch id. This is the ID of the batch in the system\
            \ that transferred the voucher. Should be set if\r\nthis voucher is a\
            \ batch voucher containing the entries of multiple vouchers in the external\
            \ system. When this\r\nvoucher is exported to SAF-T, this property is\
            \ transactions BatchID in the SAF-T file. The external systems\r\nSAF-T\
            \ export should set the same BatchId on all the transactions that are\
            \ included in this Voucher to ensure\r\naudit trail. Max length 35 characters."
          example: "12312"
          nullable: true
          type: string
        SaftSourceId:
          description: "The SAF-T source id. This is the ID of the system that generated\
            \ the voucher. When this voucher is exported to\r\nSAF-T, this property\
            \ is mapped on the transactions SourceID in the SAF-T file. If the creating\
            \ system is\r\nrequired to export it's own SAF-T file, this source id\
            \ should correspond with the SystemID in the SAF-T file of\r\nthe external\
            \ system to ensure an audit trail. Max length is 35 characters."
          example: System_123
          nullable: true
          type: string
        VoucherDate:
          description: "The voucher date.\r\nThis represents the date of the voucher,\
            \ the document date of an invoice for instance,\r\nand may differ from\
            \ the transaction dates for lines the voucher, depending on the type of\
            \ voucher."
          example: 2024-03-20
          format: date
          type: string
        VoucherLines:
          description: The lines of the bank voucher
          items:
            $ref: '#/components/schemas/BankVoucherLineDto'
          nullable: true
          type: array
        VoucherNo:
          description: "The voucher number. This is the voucher number assigned by\
            \ Go when the voucher was posted. Voucher numbers are\r\nassigned by Go\
            \ in sequence."
          example: 123456
          format: int64
          readOnly: true
          type: integer
      type: object
    BankVoucherLineDto:
      additionalProperties: false
      description: The lines of the bank voucher
      example:
        ExternalLineReference: 123ABC
        AccountId: 12345
        Description: Hello accounting world!
        Dim3Id: 12345
        Dim2Id: 12345
        Dim1Id: 12345
        LocationId: 12345
        ProjectId: 12345
        Quantity: 100
        CurrencyExchangeRate: 10.78
        InvoiceNo: "753159"
        ProductId: 12345
        VatReturnSpecification: None
        VatId: 12345
        CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        CurrencyAmount: 69420
        CurrencyCode: USD
        Quantity2: 200
        PostingDate: 2021-09-28
        CustomMatchingReference: 123ABC
        DepartmentId: 12345
        Id: 0
        Cid: "9235400011927001"
      properties:
        AccountId:
          description: The id of the general ledger account or the subledger account
            to post the amount.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Cid:
          description: "The cid number (norwegian: KID), if present.\r\nEntries with\
            \ the opposite amounts and the same cid will be matched on the sub-ledger\
            \ account, if the client use cid and the items are not already matched\
            \ out."
          example: "9235400011927001"
          maxLength: 25
          minLength: 0
          nullable: true
          readOnly: true
          type: string
        CreatedDateTimeOffset:
          description: The timestamp the year end voucher entity was created.
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          type: string
        CurrencyAmount:
          description: "The amount on the line, in the currency specified by the currency\
            \ code of the voucher or the currency of the voucher line if available.\r\
            \nGross amounts should be provided, along with the relevant vat code.\
            \ The amount must be a positive or negative number not 0."
          example: 69420
          format: double
          type: number
        CurrencyCode:
          description: "The currency code of the voucher line. Will inherit the currency\
            \ code of the voucher head if not set.\r\nThe line currency amounts will\
            \ be determined in the currency specified on the line. Currencies active\
            \ on the\r\nclient can be queried using the AccountingSettings service.\
            \ Currency codes follow the ISO4217 standard."
          example: USD
          nullable: true
          type: string
        CurrencyExchangeRate:
          description: "The normalized currency exchange rate. Always base 1.\r\n\
            \            \r\nRelevant to set if the voucher line have a foreign currency\
            \ with a specific currency exchange rate.\r\nIf not set, the field will\
            \ inherit the rate in Go for the posting date set. The rates in Go are\
            \ retrieved\r\nfrom ECB via api."
          example: 10.78
          format: double
          nullable: true
          type: number
        CustomMatchingReference:
          description: "The custom matching reference of the line. This property may\
            \ be used for matching purposes on sub-ledger\r\naccounts, where entries\
            \ posted with a CustomMatchingReference will be matched immediately with\
            \ existing entries\r\nin the sub-ledger that have the same CustomMatchingReference\
            \ and opposite amount (unless existing entries are\r\nalready matched\
            \ out)."
          example: 123ABC
          nullable: true
          type: string
        DepartmentId:
          description: The department Id.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Description:
          description: The description of the voucher line.
          example: Hello accounting world!
          nullable: true
          type: string
        Dim1Id:
          description: The id of the dimension 1 associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim2Id:
          description: The id of the dimension 2 associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim3Id:
          description: The id of the dimension 3 associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        ExternalLineReference:
          description: "The external line reference associated with the line. This\
            \ property can only be set using the api, in order\r\nto reference the\
            \ external system's line. Can be used to correlate/duplicate check transactions."
          example: 123ABC
          nullable: true
          type: string
        Id:
          description: "A value that uniquely identifies the voucher objects line.\
            \ The id is assigned by Go when the entry is\r\ncreated. This id have\
            \ no relation to the account transaction id posted by the system."
          format: int64
          readOnly: true
          type: integer
        InvoiceNo:
          description: "The invoice number this payment transaction relate to.\r\n\
            If provided, and the account number set on the line is a subledger account,\
            \ the system will try to match the payment line with the accounting entry\
            \ of the invoice referenced."
          example: "753159"
          nullable: true
          readOnly: true
          type: string
        LocationId:
          description: The id of the location dimension associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        PostingDate:
          description: "The posting date.\r\nThis is the date of effect in the accounting\
            \ system for the Amount and CurrencyAmount (also the currency\r\nconversion\
            \ date used by Go if the currency rate was not set explicit when posted).\r\
            \nAlways present on transactions."
          example: 2021-09-28
          format: date
          type: string
        ProductId:
          description: The product id associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        ProjectId:
          description: The id of the project associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Quantity:
          description: "The quantity dimension set on the line.\r\nUsually associated\
            \ with the product set on the line.\r\nIf the client is an agriculture\
            \ client, the quantity is associated with the unit1 of the general ledger\
            \ account."
          example: 100
          format: double
          nullable: true
          type: number
        Quantity2:
          description: "The quantity2 dimension set on the line.\r\nRelevant only\
            \ for agriculture clients, where the quantity2 is associated with the\
            \ unit2 of the general ledger account."
          example: 200
          format: double
          nullable: true
          type: number
        VatId:
          description: The id of the vat code used for the credit entry.
          example: 12345
          format: int32
          nullable: true
          type: integer
        VatReturnSpecification:
          $ref: '#/components/schemas/VatReturnSpecification'
      required:
      - PostingDate
      type: object
    CustomDimensionPostDto:
      additionalProperties: false
      description: DTO for creating a CustomDimension.
      example:
        IsActive: true
        Ordinal: 1
        ExternalImportReference: abc123-def567
        Code: 4A
        Name: Tickers
      properties:
        Code:
          description: "The code of the custom dimension. The code must be unique\
            \ for each ordinal (within dim1, dim2 and dim3 respectively).\r\nGo will\
            \ assign a code automatically, if not provided."
          example: 4A
          maxLength: 40
          nullable: true
          type: string
        ExternalImportReference:
          description: "The external import reference. This field is not available\
            \ in the GUI, but can be used by the integrating party to reference the\
            \ external system.\r\nThe field must be unique within each set of custom\
            \ dimension (unique for dim1, dim2 or dim3).\r\nAny integration with access\
            \ can set the field (and change it)."
          example: abc123-def567
          maxLength: 50
          nullable: true
          type: string
        IsActive:
          description: A value indicating whether this instance is active. Inactive
            custom dimensions disable the usage of that custom dimension in the GUI.
          example: true
          nullable: true
          type: boolean
        Name:
          description: The name of the custom dimension
          example: Tickers
          maxLength: 200
          nullable: true
          type: string
        Ordinal:
          description: "The custom dimension ordinal, providing information on which\
            \ of the available custom dimension sets this custom dimension belong\
            \ to (1=Dim1, 2=Dim3, 3=Dim3)."
          example: 1
          format: int32
          maximum: 3
          minimum: 1
          type: integer
      required:
      - Name
      - Ordinal
      type: object
    EmployeeHourlyRatePostDto:
      additionalProperties: false
      description: The Employee Hourly Rate post DTO contains properties relevant
        to creating a new "EmployeeTimeHourlyRates" object in Go.
      example:
        CostRate: 200
        ValidFromDate: 2022-07-01
        BillableRate: 250
      properties:
        BillableRate:
          description: "The billable hourly rate for timetransactions registered with\
            \ billable activities for this employee.\r\nMust be a positive number.\r\
            \nNote that a hierarchy exist in Go for timetracking price settings of\
            \ billable rates."
          example: 250
          format: double
          nullable: true
          type: number
        CostRate:
          description: "The hourly cost rate for timetransactions registered for this\
            \ employee.\r\nMust be a positive number.\r\nThis cost rate have no direct\
            \ relation to payroll settings, and is primarily used for reporting purposes\
            \ on timetracking entries."
          example: 200
          format: double
          nullable: true
          type: number
        ValidFromDate:
          description: The date from which this rate is to be used from.
          example: 2022-07-01
          format: date
          nullable: true
          type: string
      required:
      - ValidFromDate
      type: object
    BankVoucherPostDto:
      additionalProperties: false
      description: Dto for posting bank voucher type
      example:
        CurrencyCode: EUR
        SaftBatchId: "12312"
        Description: My first voucher description
        ImportedVoucherNo: 23145
        VoucherDate: 2024-03-20
        SaftSourceId: System_123
        VoucherLines:
        - ExternalLineReference: 123ABC
          AccountId: 12345
          Description: Hello accounting world!
          Dim3Id: 12345
          Dim2Id: 12345
          Dim1Id: 12345
          LocationId: 12345
          ProjectId: 12345
          Quantity: 100
          CurrencyExchangeRate: 10.78
          InvoiceNo: "753159"
          ProductId: 12345
          VatReturnSpecification: None
          VatId: 12345
          CurrencyAmount: 69420
          CurrencyCode: USD
          Quantity2: 200
          PostingDate: 2021-09-28
          CustomMatchingReference: 123ABC
          DepartmentId: 12345
          Cid: "9235400011927001"
        - ExternalLineReference: 123ABC
          AccountId: 12345
          Description: Hello accounting world!
          Dim3Id: 12345
          Dim2Id: 12345
          Dim1Id: 12345
          LocationId: 12345
          ProjectId: 12345
          Quantity: 100
          CurrencyExchangeRate: 10.78
          InvoiceNo: "753159"
          ProductId: 12345
          VatReturnSpecification: None
          VatId: 12345
          CurrencyAmount: 69420
          CurrencyCode: USD
          Quantity2: 200
          PostingDate: 2021-09-28
          CustomMatchingReference: 123ABC
          DepartmentId: 12345
          Cid: "9235400011927001"
        ExternalImportReference: 123abc
      properties:
        CurrencyCode:
          description: "The currency code of the voucher header.\r\nThe line amounts\
            \ will default be determined in the currency specified in the header.\r\
            \nFor some voucher types, different currency codes can be set on the line\
            \ level, thus overriding the currency of the head.\r\nCurrencies active\
            \ on the client can be queried using the AccountingSettings service. Currency\
            \ codes follow the ISO4217 standard."
          example: EUR
          maxLength: 3
          minLength: 0
          nullable: true
          type: string
        Description:
          description: The description field of the voucher header.
          example: My first voucher description
          nullable: true
          type: string
        ExternalImportReference:
          description: "The external import reference associated with the voucher.\
            \ This property can be set by integrations creating\r\nvouchers, in order\
            \ to reference the external system and ensure a duplicate check (only\
            \ one instance of the\r\nreference can exist on the client). Can be used\
            \ to correlate/duplicate check transactions. Guid's are\r\nrecommended,\
            \ or other unique references. This property is only available using the\
            \ api (not visible in the user\r\ninterface)"
          example: 123abc
          nullable: true
          type: string
        ImportedVoucherNo:
          description: "The external voucher number. Can be used to reference the\
            \ voucher number in the external system. The external\r\nvoucher number\
            \ is visible in Go in various reports."
          example: 23145
          format: int64
          nullable: true
          type: integer
        SaftBatchId:
          description: "The SAF-T batch id. This is the ID of the batch in the system\
            \ that transferred the voucher. Should be set if\r\nthis voucher is a\
            \ batch voucher containing the entries of multiple vouchers in the external\
            \ system. When this\r\nvoucher is exported to SAF-T, this property is\
            \ transactions BatchID in the SAF-T file. The external systems\r\nSAF-T\
            \ export should set the same BatchId on all the transactions that are\
            \ included in this Voucher to ensure\r\naudit trail. Max length 35 characters."
          example: "12312"
          nullable: true
          type: string
        SaftSourceId:
          description: "The SAF-T source id. This is the ID of the system that generated\
            \ the voucher. When this voucher is exported to\r\nSAF-T, this property\
            \ is mapped on the transactions SourceID in the SAF-T file. If the creating\
            \ system is\r\nrequired to export it's own SAF-T file, this source id\
            \ should correspond with the SystemID in the SAF-T file of\r\nthe external\
            \ system to ensure an audit trail. Max length is 35 characters."
          example: System_123
          nullable: true
          type: string
        VoucherDate:
          description: "The voucher date.\r\nThis represents the date of the voucher,\
            \ the document date of an invoice for instance,\r\nand may differ from\
            \ the transaction dates for lines the voucher, depending on the type of\
            \ voucher."
          example: 2024-03-20
          format: date
          type: string
        VoucherLines:
          description: The lines of the bank voucher to be posted
          items:
            $ref: '#/components/schemas/BankVoucherLinePostDto'
          nullable: true
          type: array
      required:
      - CurrencyCode
      - VoucherDate
      type: object
    BankVoucherLinePostDto:
      additionalProperties: false
      description: The lines of the bank voucher to be posted
      example:
        ExternalLineReference: 123ABC
        AccountId: 12345
        Description: Hello accounting world!
        Dim3Id: 12345
        Dim2Id: 12345
        Dim1Id: 12345
        LocationId: 12345
        ProjectId: 12345
        Quantity: 100
        CurrencyExchangeRate: 10.78
        InvoiceNo: "753159"
        ProductId: 12345
        VatReturnSpecification: None
        VatId: 12345
        CurrencyAmount: 69420
        CurrencyCode: USD
        Quantity2: 200
        PostingDate: 2021-09-28
        CustomMatchingReference: 123ABC
        DepartmentId: 12345
        Cid: "9235400011927001"
      properties:
        AccountId:
          description: The id of the general ledger account or the subledger account
            to post the amount.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Cid:
          description: "The cid number (norwegian: KID), if present.\r\nEntries with\
            \ the opposite amounts and the same cid will be matched on the sub-ledger\
            \ account, if the client use cid and the items are not already matched\
            \ out."
          example: "9235400011927001"
          nullable: true
          type: string
        CurrencyAmount:
          description: "The amount on the line, in the currency specified by the currency\
            \ code of the voucher or the currency of the voucher line if available.\r\
            \nGross amounts should be provided, along with the relevant vat code.\
            \ The amount must be a positive or negative number not 0."
          example: 69420
          format: double
          type: number
        CurrencyCode:
          description: "The currency code of the voucher line. Will inherit the currency\
            \ code of the voucher head if not set.\r\nThe line currency amounts will\
            \ be determined in the currency specified on the line. Currencies active\
            \ on the\r\nclient can be queried using the AccountingSettings service.\
            \ Currency codes follow the ISO4217 standard."
          example: USD
          nullable: true
          type: string
        CurrencyExchangeRate:
          description: "The normalized currency exchange rate. Always base 1.\r\n\
            \            \r\nRelevant to set if the voucher line have a foreign currency\
            \ with a specific currency exchange rate.\r\nIf not set, the field will\
            \ inherit the rate in Go for the posting date set. The rates in Go are\
            \ retrieved\r\nfrom ECB via api."
          example: 10.78
          format: double
          nullable: true
          type: number
        CustomMatchingReference:
          description: "The custom matching reference of the line. This property may\
            \ be used for matching purposes on sub-ledger\r\naccounts, where entries\
            \ posted with a CustomMatchingReference will be matched immediately with\
            \ existing entries\r\nin the sub-ledger that have the same CustomMatchingReference\
            \ and opposite amount (unless existing entries are\r\nalready matched\
            \ out)."
          example: 123ABC
          nullable: true
          type: string
        DepartmentId:
          description: The department Id.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Description:
          description: The description of the voucher line.
          example: Hello accounting world!
          nullable: true
          type: string
        Dim1Id:
          description: The id of the dimension 1 associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim2Id:
          description: The id of the dimension 2 associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Dim3Id:
          description: The id of the dimension 3 associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        ExternalLineReference:
          description: "The external line reference associated with the line. This\
            \ property can only be set using the api, in order\r\nto reference the\
            \ external system's line. Can be used to correlate/duplicate check transactions."
          example: 123ABC
          nullable: true
          type: string
        InvoiceNo:
          description: "The invoice number this payment transaction relate to.\r\n\
            If provided, and the account number set on the line is a subledger account,\
            \ the system will try to match the payment line with the accounting entry\
            \ of the invoice referenced."
          example: "753159"
          nullable: true
          type: string
        LocationId:
          description: The id of the location dimension associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        PostingDate:
          description: "The posting date.\r\nThis is the date of effect in the accounting\
            \ system for the Amount and CurrencyAmount (also the currency\r\nconversion\
            \ date used by Go if the currency rate was not set explicit when posted).\r\
            \nAlways present on transactions."
          example: 2021-09-28
          format: date
          type: string
        ProductId:
          description: The product id associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        ProjectId:
          description: The id of the project associated with the line.
          example: 12345
          format: int64
          nullable: true
          type: integer
        Quantity:
          description: "The quantity dimension set on the line.\r\nUsually associated\
            \ with the product set on the line.\r\nIf the client is an agriculture\
            \ client, the quantity is associated with the unit1 of the general ledger\
            \ account."
          example: 100
          format: double
          nullable: true
          type: number
        Quantity2:
          description: "The quantity2 dimension set on the line.\r\nRelevant only\
            \ for agriculture clients, where the quantity2 is associated with the\
            \ unit2 of the general ledger account."
          example: 200
          format: double
          nullable: true
          type: number
        VatId:
          description: The id of the vat code used for the credit entry.
          example: 12345
          format: int32
          nullable: true
          type: integer
        VatReturnSpecification:
          $ref: '#/components/schemas/VatReturnSpecification'
      required:
      - AccountId
      - PostingDate
      - VatId
      type: object
    DepartmentDto:
      additionalProperties: false
      description: DTO for Department read operations.
      example:
        ManagerEmployeeNo: 2
        IsActive: true
        Id: 1610
        Code: "10"
        CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        CreatedFromImportJournalId: f575b4b0-55be-4b56-b01f-44b204df82c5
        LastChangedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        ManagerEmployeeId: 123456
        Name: Research
      properties:
        Code:
          description: The code of the department.
          example: "10"
          nullable: true
          type: string
        CreatedDateTimeOffset:
          description: The timestamp the department entity was created.
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        CreatedFromImportJournalId:
          description: "The created from import journal identifier (guid). If the\
            \ department was created from an import, this property will contain the\
            \ Id of the Import that created this entity."
          example: f575b4b0-55be-4b56-b01f-44b204df82c5
          format: uuid
          nullable: true
          readOnly: true
          type: string
        Id:
          description: The identifier of the department.
          example: 1610
          format: int64
          readOnly: true
          type: integer
        IsActive:
          description: "Value indicating whether this instance is active.\r\nInactive\
            \ departments disable the usage of that departments in the GUI.\r\nDefaults\
            \ to false."
          example: true
          nullable: true
          type: boolean
        LastChangedDateTimeOffset:
          description: The timestamp of the last change of the department.
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        ManagerEmployeeId:
          description: The employee id of the manager of the department.
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        ManagerEmployeeNo:
          description: The employee number of the manager of the department.
          example: 2
          format: int64
          nullable: true
          readOnly: true
          type: integer
        Name:
          description: The name of the department
          example: Research
          nullable: true
          type: string
      type: object
    DepartmentPostDto:
      additionalProperties: false
      description: DTO for creating department.
      example:
        ManagerEmployeeNo: 123
        IsActive: true
        Code: "10"
        ManagerEmployeeId: 123
        Name: Research
      properties:
        Code:
          description: The code of the department.
          example: "10"
          nullable: true
          type: string
        IsActive:
          description: "Value indicating whether this instance is active.\r\nInactive\
            \ departments disable the usage of that departments in the GUI.\r\nDefaults\
            \ to false."
          example: true
          nullable: true
          type: boolean
        ManagerEmployeeId:
          description: The employee id of the manager of the department.
          example: 123
          format: int64
          nullable: true
          type: integer
        ManagerEmployeeNo:
          description: "The employee number of the manager of the department.\r\n\
            Note that if ManagerEmployeeId is set as well in the request, ManagerEmployeeId\
            \ takes precedence and ManagerEmployeeNo is ignored."
          example: 123
          format: int64
          nullable: true
          type: integer
        Name:
          description: The name of the department
          example: Research
          nullable: true
          type: string
      required:
      - Name
      type: object
    PayrollSettingsDto:
      additionalProperties: false
      description: The payroll settings DTO contains all properties relevant to the
        payroll settings in Go.
      example:
        DaysInWeekHolidayPay: FiveDays
        FullTimeHoursPerWeek: 37.5
        RemunerationPeriod: Monthly
        NumberOfHolidaysAbove60: 5
        PostVoucherOnK27ImportFromNav: true
        HolidayPayAbove60ResultAccountId: 12345
        ShowHolidayPayEarnedCurrentYearOnPayslip: true
        EmployerContributionAllottedHolidayPayResultAccountId: 12345
        EmployerContributionBalanceAccountId: 12345
        ShowPayItemsOnPayslip: true
        EmploymentType: Ordinary
        MonthlyPayDay: 31
        ShowProjectOnPayslip: true
        ShowLogoOnPayslip: true
        PayslipDeliveryType: App
        PayslipPasswordType: None
        EmployerContributionAllottedHolidayPayBalanceAccountId: 12345
        OwedTaxedBalanceAccountId: 12345
        SalaryPaymentBankAccountId: 12345
        FinancialActivityAllottedHolidayPayBalanceAccountId: 12345
        HolidayPayAbove60Percentage: 2.3
        AccrualOfEmployerContributionResultAccountId: 12345
        FinancialActivityAllottedHolidayPayResultAccountId: 12345
        LimitHolidayPayAbove60To6G: true
        PayslipSendScheduleType: OnApproval
        WorkingHoursArrangement: NonShift
        EmployerContributionPaymentOfHolidayPayAccountId: 12345
        ShowCommentsOnPayslip: true
        RemunerationType: Commission
        TaxDeductionBankAccountId: 12345
        EmployerContributionResultAccountId: 12345
        HolidayPayResultAccountId: 12345
        ShowHolidayPayEarnedLastYearOnPayslip: true
        FinancialActivityTaxResultAccountId: 12345
        TaxDeductionBankGuarantee: true
        AccrualOfHolidayPayBalanceAccountId: 12345
        HolidayPayPercentage: 10.2
        AllowAccrualOfWages: true
        PensionAgeFno: 67
        EnableFlexTimePayout: true
        HolidayPayBalanceAccountId: 12345
        NumberOfHolidays: 25
        IncludeTimeTransactionsFromDate: 2000-01-23T04:56:07.000+00:00
        PostVoucherOnK27ImportFromNavAccountId: 12345
        AttachmentOfEarningsBalanceAccountId: 12345
        OutstandingSalaryBalanceAccountId: 12345
        AccrualOfEmployerContributionBalanceAccountId: 12345
        PayslipLanguageType: Unknown
        AllowDifferentRemunerationPeriodPerEmployee: true
        AccrualOfWagesResultAccountId: 12345
        NegativeFlextimePayItemId: 595af05a-ed03-4fa3-a4be-672e72531af4
        EmployerContributionPaymentOfHolidayPayBalanceAccountId: 12345
        FinancialActivityPaymentOfHolidayPayAccountId: 12345
        HoursPerYearFno: 1750
        SuggestedAccrualDate: None
        AccrualOfHolidayPayResultAccountId: 12345
        AddFinancialActivityTax: true
        PositiveFlextimePayItemId: 595af05a-ed03-4fa3-a4be-672e72531af4
        FinancialActivityTaxBalanceAccountId: 12345
        HolidayPayAbove60BalanceAccountId: 12345
        MergeImportedSalaryLines: true
        SickPayRefundPayItemId: 595af05a-ed03-4fa3-a4be-672e72531af4
        FinancialActivityPaymentOfHolidayPayBalanceAccountId: 12345
        AccrualOfWagesBalanceAccountId: 12345
        PensionSchemesCount: 2
        EmployerContributionFreeAllowanceAvailable: 123.56
        TaxRule: Ordinary
        EmployerContributionRule: GeneralIndustries
      properties:
        AccrualOfEmployerContributionBalanceAccountId:
          description: "The identifier of the general ledger balance account used\
            \ for accrual of employer's contribution. \r\nOnly relevant if allow accrual\
            \ of wages is set true."
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        AccrualOfEmployerContributionResultAccountId:
          description: "The identifier of the general ledger result account used for\
            \ accrual of employer's contribution. \r\nOnly relevant if allow accrual\
            \ of wages is set true."
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        AccrualOfHolidayPayBalanceAccountId:
          description: "The identifier of the general ledger balance account used\
            \ for accrual of holiday pay. \r\nOnly relevant if allow accrual of wages\
            \ is set true."
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        AccrualOfHolidayPayResultAccountId:
          description: "The identifier of the general ledger result account used for\
            \ accrual of holiday pay. \r\nOnly relevant if allow accrual of wages\
            \ is set true."
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        AccrualOfWagesBalanceAccountId:
          description: "The identifier of the general ledger balance account used\
            \ for accrual of wages. \r\nOnly relevant if allow accrual of wages is\
            \ set true."
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        AccrualOfWagesResultAccountId:
          description: "The identifier of the general ledger result account used for\
            \ accrual of wages. \r\nOnly relevant if allow accrual of wages is set\
            \ true."
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        AddFinancialActivityTax:
          description: "Property indicating whether to add financial activity tax\
            \ for this client. \r\nIf true, several other properties can be set (related\
            \ to financial activity tax)."
          example: true
          readOnly: true
          type: boolean
        AllowAccrualOfWages:
          description: Property indicating whether accrual of wages can be set up
            and used.
          example: true
          readOnly: true
          type: boolean
        AllowDifferentRemunerationPeriodPerEmployee:
          description: Property indicating whether different remuneration periods
            can be set per employee.
          example: true
          readOnly: true
          type: boolean
        AttachmentOfEarningsBalanceAccountId:
          description: The identifier of the general ledger balance account used for
            attachment of earnings.
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        DaysInWeekHolidayPay:
          $ref: '#/components/schemas/DaysInWeekHolidayPay'
        EmployerContributionAllottedHolidayPayBalanceAccountId:
          description: The identifier of the general ledger balance account used for
            the employer's contribution of allotted holiday pay.
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        EmployerContributionAllottedHolidayPayResultAccountId:
          description: The identifier of the general ledger result account used for
            the cost of employer's contribution of allotted holiday pay.
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        EmployerContributionBalanceAccountId:
          description: The identifier of the general ledger balance account used for
            the employer's contribution.
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        EmployerContributionFreeAllowanceAvailable:
          description: "The free allowance amount for employer contribution.\r\nIf\
            \ null, the field will inherit the official free allowance amount of the\
            \ current year based on the employer contribution rule for general industries."
          example: 123.56
          format: double
          nullable: true
          readOnly: true
          type: number
        EmployerContributionPaymentOfHolidayPayAccountId:
          description: The identifier of the general ledger account used for the cost
            of employer's contribution upon payment of holiday pay.
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        EmployerContributionPaymentOfHolidayPayBalanceAccountId:
          description: The identifier of the general ledger balance account used for
            the employer's contribution upon payment of holiday pay.
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        EmployerContributionResultAccountId:
          description: The identifier of the general ledger result account used for
            the cost of employer's contribution.
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        EmployerContributionRule:
          $ref: '#/components/schemas/EmployerContributionRule'
        EmploymentType:
          $ref: '#/components/schemas/EmploymentType'
        EnableFlexTimePayout:
          description: Property indicating whether payout of flextime hours is allowed.
          example: true
          readOnly: true
          type: boolean
        FinancialActivityAllottedHolidayPayBalanceAccountId:
          description: The identifier of the general ledger balance account used for
            the financial activity allotted holiday pay.
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        FinancialActivityAllottedHolidayPayResultAccountId:
          description: The identifier of the general ledger result account used for
            the financial activity allotted holiday pay.
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        FinancialActivityPaymentOfHolidayPayAccountId:
          description: The identifier of the general ledger account used for the financial
            activity payment of holiday pay.
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        FinancialActivityPaymentOfHolidayPayBalanceAccountId:
          description: The identifier of the general ledger balance account used for
            the financial activity payment of holiday pay.
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        FinancialActivityTaxBalanceAccountId:
          description: The identifier of the general ledger balance account used for
            the financial activity tax.
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        FinancialActivityTaxResultAccountId:
          description: The identifier of the general ledger result account used for
            the financial activity tax.
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        FullTimeHoursPerWeek:
          description: The number of hours that would represent full time week of
            employment.
          example: 37.5
          format: double
          readOnly: true
          type: number
        HolidayPayAbove60BalanceAccountId:
          description: The identifier of the general ledger balance account used the
            holiday pay above 60 years.
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        HolidayPayAbove60Percentage:
          description: The holiday pay percentage above 60 years.
          example: 2.3
          format: double
          readOnly: true
          type: number
        HolidayPayAbove60ResultAccountId:
          description: The identifier of the general ledger result account used for
            the cost of holiday pay above 60 years.
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        HolidayPayBalanceAccountId:
          description: The identifier of the general ledger balance account used for
            the holiday pay.
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        HolidayPayPercentage:
          description: The holiday pay percentage.
          example: 10.2
          format: double
          readOnly: true
          type: number
        HolidayPayResultAccountId:
          description: The identifier of the general ledger result account used for
            the cost of holiday pay.
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        HoursPerYearFno:
          description: "The number of hours per year for a full time employment, in\
            \ terms of FNO reporting."
          example: 1750
          format: int64
          readOnly: true
          type: integer
        IncludeTimeTransactionsFromDate:
          description: The date define which time transactions from the time tracking
            module in PowerOffice that can be included in payrolls.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        LimitHolidayPayAbove60To6G:
          description: Property indicating whether holiday pay above 60 years is limited
            to 6G.
          example: true
          readOnly: true
          type: boolean
        MergeImportedSalaryLines:
          description: "Property indicating whether imported salary lines will be\
            \ merged (if the lines have similar attributes)\r\nwhen payrolls are created\
            \ and imported salary lines included in the payroll."
          example: true
          readOnly: true
          type: boolean
        MonthlyPayDay:
          description: "The day in a month for the salary pay.\r\nRelevant if monthly\
            \ remuneration is used.\r\nMust be an integer between 1 and 31.\r\nIf\
            \ 31 is used, the salary will always be paid on the last day of the month."
          example: 31
          format: int64
          readOnly: true
          type: integer
        NegativeFlextimePayItemId:
          description: "The identifier of the pay item used for deduction of negative\
            \ flextime.\r\nRelevant only if enableFlextimePayout is true."
          example: 595af05a-ed03-4fa3-a4be-672e72531af4
          format: uuid
          nullable: true
          readOnly: true
          type: string
        NumberOfHolidays:
          description: The number of holidays.
          example: 25
          format: int64
          readOnly: true
          type: integer
        NumberOfHolidaysAbove60:
          description: The number of holidays above 60 years.
          example: 5
          format: int64
          readOnly: true
          type: integer
        OutstandingSalaryBalanceAccountId:
          description: The identifier of the general ledger balance account used for
            the outstanding salary (salary owed/to be paid).
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        OwedTaxedBalanceAccountId:
          description: The identifier of the general ledger balance account used for
            owed taxes.
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        PayslipDeliveryType:
          $ref: '#/components/schemas/PayslipDeliveryType'
        PayslipLanguageType:
          $ref: '#/components/schemas/PayslipLanguageType'
        PayslipPasswordType:
          $ref: '#/components/schemas/PayslipPasswordType'
        PayslipSendScheduleType:
          $ref: '#/components/schemas/PayslipSendScheduleType'
        PensionAgeFno:
          description: The pension age in terms of FNO reporting.
          example: 67
          format: int64
          readOnly: true
          type: integer
        PensionSchemesCount:
          description: "The pension schemes count.\r\nUse pension scheme GET endpoint\
            \ to get the pension schemes."
          example: 2
          format: int64
          readOnly: true
          type: integer
        PositiveFlextimePayItemId:
          description: "The identifier of the pay item used for payout of positive\
            \ flextime.\r\nRelevant only if enableFlextimePayout is true."
          example: 595af05a-ed03-4fa3-a4be-672e72531af4
          format: uuid
          nullable: true
          readOnly: true
          type: string
        PostVoucherOnK27ImportFromNav:
          description: Property indicating whether a voucher should be posted when
            importing K27 (sick-pay related) from NAV.
          example: true
          readOnly: true
          type: boolean
        PostVoucherOnK27ImportFromNavAccountId:
          description: "The identifier of general ledger account used to post the\
            \ voucher when importing K27 from NAV.\r\n Relevant only if post voucher\
            \ on K27 import from NAV is set true."
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        RemunerationPeriod:
          $ref: '#/components/schemas/RemunerationPeriodType'
        RemunerationType:
          $ref: '#/components/schemas/SalaryRemunerationType'
        SalaryPaymentBankAccountId:
          description: "The identifier of client bank account used for payment of\
            \ salary.\r\nIf null, the primary client bank account is used."
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        ShowCommentsOnPayslip:
          description: Property indicating whether salary line comments will be available
            on the payslip.
          example: true
          readOnly: true
          type: boolean
        ShowHolidayPayEarnedCurrentYearOnPayslip:
          description: Property indicating whether the holiday pay earned the current
            year will be available on the payslip.
          example: true
          readOnly: true
          type: boolean
        ShowHolidayPayEarnedLastYearOnPayslip:
          description: Property indicating whether the holiday pay earned last year
            will be available on the payslip.
          example: true
          readOnly: true
          type: boolean
        ShowLogoOnPayslip:
          description: Property indicating whether the company logo will be visible
            on the payslip.
          example: true
          readOnly: true
          type: boolean
        ShowPayItemsOnPayslip:
          description: Property indicating whether the pay item code will be displayed
            on the lines of the payslip.
          example: true
          readOnly: true
          type: boolean
        ShowProjectOnPayslip:
          description: Property indicating whether the project name will be displayed
            on the lines of the payslip.
          example: true
          readOnly: true
          type: boolean
        SickPayRefundPayItemId:
          description: The identifier of the pay item used for sick-pay refunds.
          example: 595af05a-ed03-4fa3-a4be-672e72531af4
          format: uuid
          nullable: true
          readOnly: true
          type: string
        SuggestedAccrualDate:
          $ref: '#/components/schemas/PayrollAccrualModeType'
        TaxDeductionBankAccountId:
          description: "The identifier of client bank account used for payment of\
            \ tax deduction.\r\nMust have a value if tax deduction bank guarantee\
            \ (TaxDeductionBankGuarantee) is false."
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        TaxDeductionBankGuarantee:
          description: "Property indicating whether bank guarantee for tax deduction\
            \ should be used.\r\nIf property is false, the property 'TaxDeductionBankAccountId'\
            \ should have value."
          example: true
          readOnly: true
          type: boolean
        TaxRule:
          $ref: '#/components/schemas/TaxRuleType'
        WorkingHoursArrangement:
          $ref: '#/components/schemas/WorkingHoursArrangementType'
      type: object
    DaysInWeekHolidayPay:
      description: "Enum defining the days in a week for the holiday pay settings\r\
        \nand how the wage deduction will be calculated.<p>Members:</p><ul><li><i>FiveDays</i>\
        \ - A week have 5 working days,\n                and the calculation for wage\
        \ deduction use 22 days in the denominator.</li><li><i>FiveDays_21_67</i>\
        \ - A week have 5 working days,\n                and the calculation for wage\
        \ deduction use 21.67 days in the denominator.</li><li><i>SixDays</i> - A\
        \ week have 6 working days,\n                and the calculation for wage\
        \ deduction use 26 days in the denominator.</li></ul>"
      enum:
      - FiveDays
      - FiveDays_21_67
      - SixDays
      nullable: true
      type: string
    PayslipPasswordType:
      description: The payslip password type.<p>Members:</p><ul><li><i>None</i> -
        No password required.</li><li><i>Last5DigitsOfSsn</i> - The password is the
        last 5 digits of the employees social security number.</li><li><i>Last5DigitsOfBankAccountNo</i>
        - The password is the last 5 digits of the employees salary bank account number.</li><li><i>Postcode</i>
        - The password is the post code of the employees address.</li></ul>
      enum:
      - None
      - Last5DigitsOfSsn
      - Last5DigitsOfBankAccountNo
      - Postcode
      nullable: true
      type: string
    PayslipSendScheduleType:
      description: The payslip send schedule type.<p>Members:</p><ul><li><i>OnApproval</i>
        - The payslip is sent on approval.</li><li><i>OnPaymentDate</i> - The payslip
        is sent on the payment date.</li><li><i>OneDayBeforePayment</i> - The payslip
        is sent one day before the payment date.</li><li><i>TwoDaysBeforePayment</i>
        - The payslip is sent two days before the payment date.</li></ul>
      enum:
      - OnApproval
      - OnPaymentDate
      - OneDayBeforePayment
      - TwoDaysBeforePayment
      nullable: true
      type: string
    PayrollAccrualModeType:
      description: The payroll accrual mode.<p>Members:</p><ul><li><i>None</i> - Does
        not suggest accrual date when creating payroll.</li><li><i>LastDayOfPreviousMonth</i>
        - Suggests the last day of the previous month as accrual date.</li><li><i>SameDayPreviousMonth</i>
        - Suggest the same day (as the payroll date) of the previous month as accrual
        date.</li></ul>
      enum:
      - None
      - LastDayOfPreviousMonth
      - SameDayPreviousMonth
      nullable: true
      type: string
    EmployeePensionSettingsDto:
      additionalProperties: false
      description: The Employee pension settings DTO contains properties relevant
        for pension settings on an employee in Go.
      example:
        IsReceivingAfp: true
        IncludeInFnoPensionReport: true
        FnoStatus: Active
        PensionAgeFno: 67
        IsUnfitForWork: true
        FnoStatusPercentage: 12
        HoursPerYearFno: 1850
      properties:
        FnoStatus:
          $ref: '#/components/schemas/FnoStatusType'
        FnoStatusPercentage:
          description: The percentage related to the FNO status that is reported.
          example: 12
          format: int32
          nullable: true
          type: integer
        HoursPerYearFno:
          description: "The number of hours per year for a full time employment, in\
            \ terms of FNO reporting.\r\nIf null, the general payroll settings is\
            \ used."
          example: 1850
          format: int32
          nullable: true
          type: integer
        IncludeInFnoPensionReport:
          description: Property indicating whether the employee should be included
            in the FNO pension reporting.
          example: true
          nullable: true
          type: boolean
        IsReceivingAfp:
          description: Property indicating whether the employee is receiving AFP (in
            terms of FNO pension report).
          example: true
          nullable: true
          type: boolean
        IsUnfitForWork:
          description: Property indicating whether the employee is unfit for work
            (in terms of FNO pension report).
          example: true
          nullable: true
          type: boolean
        PensionAgeFno:
          description: "The pension age in terms of FNO reporting.\r\nIf null, the\
            \ general payroll settings is used."
          example: 67
          format: int32
          nullable: true
          type: integer
      type: object
    FnoStatusType:
      description: "Type of FNO status.<p>Members:</p><ul><li><i>Active</i> - Active\
        \ (Norwegian: Aktiv)</li><li><i>AgreedLeave</i> - Agreed Leave (Norwegian:\
        \ Avtalt permisjon)</li><li><i>LaidOff</i> - Laid Off (Norwegian: Permittert)</li><li><i>Sick</i>\
        \ - Sick (Norwegian: Syk)</li><li><i>StatutoryLeave</i> - Statutory Leave\
        \ (Norwegian: Lovfestet permisjon)</li></ul>"
      enum:
      - Active
      - AgreedLeave
      - LaidOff
      - Sick
      - StatutoryLeave
      nullable: true
      type: string
    AccountTransactionDto:
      additionalProperties: false
      description: AccountTransaction representing an accounting entry. This is a
        single posted amount on a general ledger account.
      example:
        VatAmount: -71.14
        AccountId: 12345
        Dim2Id: 123456
        ProductId: 123456
        CurrencyCode: USD
        CorrectionOfVoucherNo: 12345
        VoucherDate: 2020-07-25
        ReversedVoucherNo: 15544
        SupplierAccountNo: 2000
        AccountNo: 3000
        ProductCode: "10"
        LocationCode: L1337
        CurrencyAmount: 8.5212
        VoucherDescription: Hello
        Id: 476023749
        SubLedgerEntryId: 123
        CreatedFromImportJournalId: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        VoucherType: Unknown
        Description: Hello accounting world
        Dim3Id: 123456
        Dim1Code: dimcode111
        Dim1Id: 123456
        Dim2Code: dimcode222
        ExternalImportReference: 123abc
        ContactId: 123456
        EmployeeAccountNo: 3
        ProjectCode: "100"
        VoucherNo: 15545
        DepartmentCode: "110"
        ImportedVoucherNo: 123
        Amount: 99
        LocationId: 12345
        ProjectId: 123456
        IsReversed: true
        Quantity: 100
        VatReturnSpecification: None
        CustomerAccountNo: 10000
        VatId: 123456
        CreatedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        VatRate: 0.12
        AgricultureDepartment: None
        Quantity2: 100
        Dim3Code: dimcode333
        PostingDate: 2021-09-28
        IsNoteMainEntry: true
        VatCode: "33"
        VoucherId: ee373540-ca8d-4562-8fb6-6fb52de47722
        BankTransferId: 21d4ddf1-c8bf-4874-8879-b70468fa1032
        DepartmentId: 123456
        CorrectionOfVoucherId: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        ReversedVoucherId: 21d4ddf1-c8bf-4874-8879-b70468fa1032
        LastChangedDateTimeOffset: 2021-09-30T08:03:00.1234567Z
      properties:
        AccountId:
          description: The Id of the general ledger account account.
          example: 12345
          format: int64
          readOnly: true
          type: integer
        AccountNo:
          description: "The general ledger account code. Information of accounts can\
            \ be retrieved using the GeneralLedgerAccount service.\r\nAlways present\
            \ on transactions."
          example: 3000
          format: int64
          readOnly: true
          type: integer
        AgricultureDepartment:
          $ref: '#/components/schemas/AgricultureDepartment'
        Amount:
          description: "The posted amount on the account. Amount is always presented\
            \ in the client currency.\r\nAlways present on transactions."
          example: 99
          format: double
          readOnly: true
          type: number
        BankTransferId:
          description: "The identifier of a bank transfer.\r\nIf provided on an accounting\
            \ entry, this accounting entry is created from a remittance of a bank\
            \ transfer with a given id."
          example: 21d4ddf1-c8bf-4874-8879-b70468fa1032
          format: uuid
          nullable: true
          readOnly: true
          type: string
        ContactId:
          description: "The id of the contact entity if the transaction is related\
            \ to an employeAccountNo, customerAccountNo or supplierAccountNo.\r\n\
            Employees, Customers and Suppliers are all contact entities in Go, meaning\
            \ that they might share the id if the contact is registered as both an\
            \ employee/customer or customer/supplier in Go."
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        CorrectionOfVoucherId:
          description: "The id of the original voucher that has been corrected by\
            \ this voucher (where this transactions are part of the correction voucher).\r\
            \nOnly present on transactions that are part of correction vouchers"
          example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
          format: uuid
          nullable: true
          readOnly: true
          type: string
        CorrectionOfVoucherNo:
          description: "The voucher number of the original voucher that has been corrected\
            \ by this voucher (where this transactions are part of the correction\
            \ voucher).\r\nOnly present on transactions that are part of correction\
            \ vouchers."
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        CreatedDateTimeOffset:
          description: "The created timestamp.\r\nThis is the timestamp the transaction\
            \ was created, and may differ from the timestamp of accounting effect\
            \ for the transaction (ie the property PostingDate).\r\nAlways present\
            \ on transactions."
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        CreatedFromImportJournalId:
          description: "The created from import journal identifier, if present.\r\n\
            Provided if this account transaction has been created in Go by an import."
          example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
          format: uuid
          nullable: true
          readOnly: true
          type: string
        CurrencyAmount:
          description: The currency amount. Differs from Amount if the transaction
            was posted with a currency other than the client currency.
          example: 8.5212
          format: double
          readOnly: true
          type: number
        CurrencyCode:
          description: The currency code. Currencies active on the client can be queried
            using the AccountingSettings service. Currency codes follow the ISO4217
            standard.
          example: USD
          nullable: true
          readOnly: true
          type: string
        CustomerAccountNo:
          description: "The customer account number this account transaction is posted\
            \ on, that is provided if the account is a customer subledger account.\r\
            \n If present, CustomerAccountNo will also represent the Customer number.\
            \ Customers can be queried and identified using the Customer service."
          example: 10000
          format: int64
          nullable: true
          readOnly: true
          type: integer
        DepartmentCode:
          description: "The department code. Available if the transaction was posted\
            \ with department.\r\nDepartments can be queried and identified using\
            \ the Department service."
          example: "110"
          nullable: true
          readOnly: true
          type: string
        DepartmentId:
          description: "The department Id. Available if the transaction was posted\
            \ with department.\r\nDepartments can be queried and identified using\
            \ the Department service."
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        Description:
          description: The description of the transaction.
          example: Hello accounting world
          nullable: true
          readOnly: true
          type: string
        Dim1Code:
          description: The code of the dimension 1 associated with the account transaction.
          example: dimcode111
          nullable: true
          readOnly: true
          type: string
        Dim1Id:
          description: The id of the dimension 1 associated with the account transaction.
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        Dim2Code:
          description: The code of the dimension 2 associated with the account transaction.
          example: dimcode222
          nullable: true
          readOnly: true
          type: string
        Dim2Id:
          description: The id of the dimension 2 associated with the account transaction.
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        Dim3Code:
          description: The code of the dimension 3 associated with the account transaction.
          example: dimcode333
          nullable: true
          readOnly: true
          type: string
        Dim3Id:
          description: The id of the dimension 3 associated with the account transaction.
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        EmployeeAccountNo:
          description: "The employee account number this account transaction is posted\
            \ on that is provided if the account is a employee subledger account.\r\
            \nIf present, EmployeeAccountNo will also represent the Employee number.\
            \ Employees can be queried and identified using the Employee service."
          example: 3
          format: int64
          nullable: true
          readOnly: true
          type: integer
        ExternalImportReference:
          description: "The ExternalImportReference, if available.\r\nThis property\
            \ can be set by integrations posting vouchers in Go, in order to reference\
            \ the external system and ensure a duplicate check when posting the voucher\
            \ to Go (only one instance of the reference can exist).\r\nCan be used\
            \ to correlate/duplicate check transaction."
          example: 123abc
          nullable: true
          readOnly: true
          type: string
        Id:
          description: "The value that uniquely identifies this accounting entry.\
            \ The Id is assigned by Go when the transactions is posted in Go.\r\n\
            Always present on transactions."
          example: 476023749
          format: int64
          readOnly: true
          type: integer
        ImportedVoucherNo:
          description: "The imported voucher number, if available.\r\nThis property\
            \ can be set by integrations posting vouchers in Go, in order to reference\
            \ the external system."
          example: 123
          format: int64
          nullable: true
          readOnly: true
          type: integer
        IsNoteMainEntry:
          description: A value indicating whether this instance is the main subledger
            entry for a note (invoice/expense).
          example: true
          nullable: true
          readOnly: true
          type: boolean
        IsReversed:
          description: A value indicating whether the voucher this transaction belong
            to have been reversed by an reversal voucher.
          example: true
          nullable: true
          readOnly: true
          type: boolean
        LastChangedDateTimeOffset:
          description: "The timestamp of the last change of the account transaction.\r\
            \nNo changes with accounting effect can be made on a posted voucher in\
            \ Go, making this timestamp equal the created timestamp in most cases.\r\
            \nHowever, simple changes like the description can be made on a posted\
            \ voucher, which will effect the last changed timestamp.\r\nThis property\
            \ can be used when polling for new entries and where changes in description\
            \ are needed from Go - but voucherNo and createdDateTimeOffset are better\
            \ suited to query new entries if not.\r\nIf this property is used, changed\
            \ transactions should replace what was previously stored in the external\
            \ system.\r\nNote again that no changes can be made that affects the accounting\
            \ as such.\r\nAlways present on transactions."
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        LocationCode:
          description: "The code of the location dimension associated with the account\
            \ transaction, if set."
          example: L1337
          nullable: true
          readOnly: true
          type: string
        LocationId:
          description: "The id of the location dimension associated with the account\
            \ transaction, if location code is set."
          example: 12345
          format: int64
          nullable: true
          readOnly: true
          type: integer
        PostingDate:
          description: "The posting date.\r\nThis is the date of effect in the accounting\
            \ system for the Amount and CurrencyAmount (also the currency conversion\
            \ date used by Go if the currency rate was not set explicit when posted).\r\
            \nAlways present on transactions."
          example: 2021-09-28
          format: date
          readOnly: true
          type: string
        ProductCode:
          description: "The product code. Available if the transaction was posted\
            \ with product.\r\nProducts can be queried and identified using the Product\
            \ service."
          example: "10"
          nullable: true
          readOnly: true
          type: string
        ProductId:
          description: "The product id. Available if the transaction was posted with\
            \ product.\r\nProducts can be queried and identified using the Product\
            \ service."
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        ProjectCode:
          description: "The project code. Available if the transaction was posted\
            \ with project.\r\nProjects can be queried and identified using the Project\
            \ service."
          example: "100"
          nullable: true
          readOnly: true
          type: string
        ProjectId:
          description: "The project id. Available if the transaction was posted with\
            \ project.\r\nProjects can be queried and identified using the Project\
            \ service."
          example: 123456
          format: int64
          nullable: true
          readOnly: true
          type: integer
        Quantity:
          description: The quantity that was set on the voucher line generating this
            account transaction.
          example: 100
          format: double
          nullable: true
          readOnly: true
          type: number
        Quantity2:
          description: The quantity2 that was set on the voucher line generating this
            account transaction.
          example: 100
          format: double
          nullable: true
          readOnly: true
          type: number
        ReversedVoucherId:
          description: "The id of the of the original voucher that has been reversed.\r\
            \nThis property is only available for reversal vouchers (type 99), and\
            \ link the reversal voucher to the original voucher that has been reversed\
            \ in Go."
          example: 21d4ddf1-c8bf-4874-8879-b70468fa1032
          format: uuid
          nullable: true
          readOnly: true
          type: string
        ReversedVoucherNo:
          description: "The voucher number of the original voucher that has been reversed.\r\
            \nThis property is only available for reversal vouchers (type 99), and\
            \ link the reversal voucher to the original voucher that has been reversed\
            \ in Go."
          example: 15544
          format: int64
          nullable: true
          readOnly: true
          type: integer
        SubLedgerEntryId:
          description: "The subledger entry id.\r\nIf this AccountTransaction is on\
            \ a subledger account this property will represent the Id of the subledger\
            \ entry related to this transaction.\r\nThis will match the Id in the\
            \ CustomerLedger or SupplierLedger if querying these services for transactions."
          example: 123
          format: int64
          nullable: true
          readOnly: true
          type: integer
        SupplierAccountNo:
          description: "The supplier account number this account transaction is posted\
            \ on that is provided if the account is a supplier subledger account.\r\
            \nIf present, SupplierAccountNo will also represent the Supplier number.\
            \ Suppliers can be queried and identified using the Supplier service."
          example: 2000
          format: int64
          nullable: true
          readOnly: true
          type: integer
        VatAmount:
          description: The vat amount on this transaction.
          example: -71.14
          format: double
          readOnly: true
          type: number
        VatCode:
          description: "The vat code.\r\nStandard codes in Go is based on the SAF-T\
            \ standard. Codes and any custom codes can be queried and identified using\
            \ the VatCode service."
          example: "33"
          nullable: true
          readOnly: true
          type: string
        VatId:
          description: "The vat id for the vat code used on the transaction.\r\nCodes\
            \ and any custom codes can be queried and identified using the VatCode\
            \ service."
          example: 123456
          format: int32
          readOnly: true
          type: integer
        VatRate:
          description: The vat rate for the vat code used on the transaction.
          example: 0.12
          format: double
          readOnly: true
          type: number
        VatReturnSpecification:
          $ref: '#/components/schemas/VatReturnSpecification'
        VoucherDate:
          description: "The date of the voucher. This represents the date of the voucher,\
            \ the document date of an invoice for instance,\r\nand may differ from\
            \ the transaction dates for the voucher.\r\nAlways present on transactions."
          example: 2020-07-25
          format: date
          readOnly: true
          type: string
        VoucherDescription:
          description: The description of the voucher if set.
          example: Hello
          nullable: true
          readOnly: true
          type: string
        VoucherId:
          description: "The voucher identifier.\r\nThe Id is assigned by Go when the\
            \ voucher is created, and is shared by all transactions within the same\
            \ voucher.\r\nAlways present on transactions."
          example: ee373540-ca8d-4562-8fb6-6fb52de47722
          format: uuid
          readOnly: true
          type: string
        VoucherNo:
          description: "The voucher number. This is the voucher number assigned by\
            \ Go when the voucher was posted.\r\nVoucher numbers are assigned by Go\
            \ in sequence.\r\nAlways present on transactions."
          example: 15545
          format: int64
          readOnly: true
          type: integer
        VoucherType:
          $ref: '#/components/schemas/VoucherType'
      type: object
    EmploymentSalaryPostDto:
      additionalProperties: false
      description: The Employment Salary post DTO contains all properties relevant
        to creating a new salary (line) on an employment relationship object in Go.
      example:
        AnnualSalary: 123.45
        FromDate: 2021-01-01
        RemunerationType: Commission
        HourlyRate: 123.45
      properties:
        AnnualSalary:
          description: "The annual salary of the employment salary.\r\nOnly relevant\
            \ for fixed wage salary."
          example: 123.45
          format: double
          nullable: true
          type: number
        FromDate:
          description: The from-date for the effect of the employment salary.
          example: 2021-01-01
          format: date
          nullable: true
          type: string
        HourlyRate:
          description: "The hourly rate of the employment salary.\r\nRelevant to set\
            \ for hourly wage salary and commission salary.\r\nFor fixed wage salary,\
            \ the hourly rate is automatically calculated if null, but can be overridden.\r\
            \nThe calculation is based on the full time hours per week property on\
            \ the employment general information, multiplied by 52 weeks.\r\nRelevant\
            \ for fixed wage in terms of overtime/extra hours, for instance."
          example: 123.45
          format: double
          nullable: true
          type: number
        RemunerationType:
          $ref: '#/components/schemas/SalaryRemunerationType'
      required:
      - FromDate
      - RemunerationType
      type: object
    VoucherForApprovalDto:
      additionalProperties: false
      description: Dto for available information when listing vouchers ready for handling
        by integration.
      example:
        AvailableFromDateTimeOffset: 2021-09-30T08:03:00.1234567Z
        Id: 38ecfc1a-bf51-448f-99a8-a61bc5771109
        OriginatedFromEhf: false
        ApprovalVoucherType: SupplierInvoice
      properties:
        ApprovalVoucherType:
          $ref: '#/components/schemas/ApprovalVoucherType'
        AvailableFromDateTimeOffset:
          description: The timestamp of when the voucher was made available to the
            integrating party.
          example: 2021-09-30T08:03:00.1234567Z
          format: date-time
          readOnly: true
          type: string
        Id:
          description: "A value that uniquely identifies this voucher.\r\nThe Id is\
            \ assigned by Go when the entry is created, and will persist when/if the\
            \ voucher is posted."
          example: 38ecfc1a-bf51-448f-99a8-a61bc5771109
          format: uuid
          readOnly: true
          type: string
        OriginatedFromEhf:
          description: "A value indicating whether the voucher was received to Go\
            \ by EHF. If true, the voucher have an xml file associated with it."
          example: false
          type: boolean
      type: object
    ApprovalVoucherType:
      description: Enum defining what kind of voucher the voucher is<p>Members:</p><ul><li><i>SupplierInvoice</i>
        - Incoming invoice sent from a supplier to the client. Correspond with the
        voucher type IncomingInvoice.</li><li><i>SupplierCreditNote</i> - Incoming
        credit note sent from a supplier to the client. Correspond with the voucher
        type IncomingCreditNote.</li><li><i>ManualJournal</i> - Manual Journal. Correspond
        with the voucher type ManualJournal</li><li><i>BankJournal</i> - Bank journal.
        Correspond with the voucher type BankJournal</li></ul>
      enum:
      - SupplierInvoice
      - SupplierCreditNote
      - ManualJournal
      - BankJournal
      nullable: true
      type: string
    VoucherDocumentationDto:
      additionalProperties: false
      description: A lightweight object of available voucher documentation.
      example:
        HasEhf: true
        HasPdf: true
        IsImported: true
        HasSalesOrderAttachments: true
        VoucherId: 1833b062-0d41-470c-80c3-46b480fd219b
        VoucherNo: 12342
        HasImages: true
        VoucherType: Unknown
      properties:
        HasEhf:
          description: Indicates whether there is an EHF (Electronic Trade Format)
            attached to the voucher.
          example: true
          readOnly: true
          type: boolean
        HasImages:
          description: Indicates whether there are images attached to the voucher.
          example: true
          readOnly: true
          type: boolean
        HasPdf:
          description: Indicates whether there is an PDF (Portable Document Format)
            attached to the voucher.
          example: true
          readOnly: true
          type: boolean
        HasSalesOrderAttachments:
          description: "Indicates whether there is sales order attachments on the\
            \ voucher.\r\nNote that this is only relevant for OutgoingInvoice and\
            \ OutgoingCreditNote.\r\nUse attachments-endpoint under SalesOrders to\
            \ get the attachments."
          example: true
          readOnly: true
          type: boolean
        IsImported:
          description: "Indicates whether the voucher has been created by an integration\
            \ via API.\r\nWe only allow adding documentation to imported vouchers."
          example: true
          type: boolean
        VoucherId:
          description: The identifier of the voucher the documentation belongs to.
          example: 1833b062-0d41-470c-80c3-46b480fd219b
          format: uuid
          readOnly: true
          type: string
        VoucherNo:
          description: The voucher number.
          example: 12342
          format: int64
          nullable: true
          readOnly: true
          type: integer
        VoucherType:
          $ref: '#/components/schemas/VoucherType'
      type: object
    _JournalEntryVouchers__id__VoucherPages_post_request:
      properties:
        file:
          format: binary
          type: string
      type: object

