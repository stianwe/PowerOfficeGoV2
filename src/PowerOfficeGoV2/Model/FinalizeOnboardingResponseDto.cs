// <auto-generated>
/*
 * merged spec
 *
 * merged spec
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using PowerOfficeGoV2.Client;

namespace PowerOfficeGoV2.Model
{
    /// <summary>
    /// The finalize onboarding response DTO contains properties necessary for finalizing the onboarding processes in external system.
    /// </summary>
    public partial class FinalizeOnboardingResponseDto : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FinalizeOnboardingResponseDto" /> class.
        /// </summary>
        /// <param name="onboardedClientsInformation">A collection of the onboarded clients information.</param>
        /// <param name="userEmail">The email of the user that authenticated and onboarded the integrated application.</param>
        [JsonConstructor]
        internal FinalizeOnboardingResponseDto(Option<List<OnboardedClientInformation>?> onboardedClientsInformation = default, Option<string?> userEmail = default)
        {
            OnboardedClientsInformationOption = onboardedClientsInformation;
            UserEmailOption = userEmail;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of OnboardedClientsInformation
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<OnboardedClientInformation>?> OnboardedClientsInformationOption { get; }

        /// <summary>
        /// A collection of the onboarded clients information.
        /// </summary>
        /// <value>A collection of the onboarded clients information.</value>
        [JsonPropertyName("OnboardedClientsInformation")]
        public List<OnboardedClientInformation>? OnboardedClientsInformation { get { return this.OnboardedClientsInformationOption; } }

        /// <summary>
        /// Used to track the state of UserEmail
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> UserEmailOption { get; }

        /// <summary>
        /// The email of the user that authenticated and onboarded the integrated application.
        /// </summary>
        /// <value>The email of the user that authenticated and onboarded the integrated application.</value>
        /* <example>jon.doe@company.no</example> */
        [JsonPropertyName("UserEmail")]
        public string? UserEmail { get { return this.UserEmailOption; } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class FinalizeOnboardingResponseDto {\n");
            sb.Append("  OnboardedClientsInformation: ").Append(OnboardedClientsInformation).Append("\n");
            sb.Append("  UserEmail: ").Append(UserEmail).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="FinalizeOnboardingResponseDto" />
    /// </summary>
    public class FinalizeOnboardingResponseDtoJsonConverter : JsonConverter<FinalizeOnboardingResponseDto>
    {
        /// <summary>
        /// Deserializes json to <see cref="FinalizeOnboardingResponseDto" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override FinalizeOnboardingResponseDto Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<List<OnboardedClientInformation>?> onboardedClientsInformation = default;
            Option<string?> userEmail = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "OnboardedClientsInformation":
                            if (utf8JsonReader.TokenType != JsonTokenType.Null)
                                onboardedClientsInformation = new Option<List<OnboardedClientInformation>?>(JsonSerializer.Deserialize<List<OnboardedClientInformation>>(ref utf8JsonReader, jsonSerializerOptions));
                            break;
                        case "UserEmail":
                            userEmail = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        default:
                            break;
                    }
                }
            }

            return new FinalizeOnboardingResponseDto(onboardedClientsInformation, userEmail);
        }

        /// <summary>
        /// Serializes a <see cref="FinalizeOnboardingResponseDto" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="finalizeOnboardingResponseDto"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, FinalizeOnboardingResponseDto finalizeOnboardingResponseDto, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, finalizeOnboardingResponseDto, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="FinalizeOnboardingResponseDto" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="finalizeOnboardingResponseDto"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, FinalizeOnboardingResponseDto finalizeOnboardingResponseDto, JsonSerializerOptions jsonSerializerOptions)
        {
            if (finalizeOnboardingResponseDto.OnboardedClientsInformationOption.IsSet)
                if (finalizeOnboardingResponseDto.OnboardedClientsInformationOption.Value != null)
                {
                    writer.WritePropertyName("OnboardedClientsInformation");
                    JsonSerializer.Serialize(writer, finalizeOnboardingResponseDto.OnboardedClientsInformation, jsonSerializerOptions);
                }
                else
                    writer.WriteNull("OnboardedClientsInformation");
            if (finalizeOnboardingResponseDto.UserEmailOption.IsSet)
                if (finalizeOnboardingResponseDto.UserEmailOption.Value != null)
                    writer.WriteString("UserEmail", finalizeOnboardingResponseDto.UserEmail);
                else
                    writer.WriteNull("UserEmail");
        }
    }
}
