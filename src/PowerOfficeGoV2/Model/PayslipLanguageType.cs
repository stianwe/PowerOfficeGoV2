// <auto-generated>
/*
 * merged spec
 *
 * merged spec
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using PowerOfficeGoV2.Client;

namespace PowerOfficeGoV2.Model
{
    /// <summary>
    /// The payslip language type.&lt;p&gt;Members:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;Unknown&lt;/i&gt; - The payslip language is unknown.                (this should never be used, contact api-support if you see this)&lt;/li&gt;&lt;li&gt;&lt;i&gt;En_US&lt;/i&gt; - Payslip is delivered in English (United States) language.&lt;/li&gt;&lt;li&gt;&lt;i&gt;Nb_NO&lt;/i&gt; - The payslip is delivered in Norwegian Bokmål (Norway) language.&lt;/li&gt;&lt;li&gt;&lt;i&gt;Nn_NO&lt;/i&gt; - The payslip is delivered in Norwegian Nynorsk (Norway) language.&lt;/li&gt;&lt;li&gt;&lt;i&gt;Sv_SE&lt;/i&gt; - The payslip is delivered in Swedish (Sweden) language.&lt;/li&gt;&lt;li&gt;&lt;i&gt;Da_DK&lt;/i&gt; - The payslip is delivered in Danish (Denmark) language.&lt;/li&gt;&lt;/ul&gt;
    /// </summary>
    /// <value>The payslip language type.&lt;p&gt;Members:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;Unknown&lt;/i&gt; - The payslip language is unknown.                (this should never be used, contact api-support if you see this)&lt;/li&gt;&lt;li&gt;&lt;i&gt;En_US&lt;/i&gt; - Payslip is delivered in English (United States) language.&lt;/li&gt;&lt;li&gt;&lt;i&gt;Nb_NO&lt;/i&gt; - The payslip is delivered in Norwegian Bokmål (Norway) language.&lt;/li&gt;&lt;li&gt;&lt;i&gt;Nn_NO&lt;/i&gt; - The payslip is delivered in Norwegian Nynorsk (Norway) language.&lt;/li&gt;&lt;li&gt;&lt;i&gt;Sv_SE&lt;/i&gt; - The payslip is delivered in Swedish (Sweden) language.&lt;/li&gt;&lt;li&gt;&lt;i&gt;Da_DK&lt;/i&gt; - The payslip is delivered in Danish (Denmark) language.&lt;/li&gt;&lt;/ul&gt;</value>
    public enum PayslipLanguageType
    {
        /// <summary>
        /// Enum Unknown for value: Unknown
        /// </summary>
        Unknown,

        /// <summary>
        /// Enum EnUS for value: En_US
        /// </summary>
        EnUS,

        /// <summary>
        /// Enum NbNO for value: Nb_NO
        /// </summary>
        NbNO,

        /// <summary>
        /// Enum NnNO for value: Nn_NO
        /// </summary>
        NnNO,

        /// <summary>
        /// Enum SvSE for value: Sv_SE
        /// </summary>
        SvSE,

        /// <summary>
        /// Enum DaDK for value: Da_DK
        /// </summary>
        DaDK
    }

    /// <summary>
    /// Converts <see cref="PayslipLanguageType"/> to and from the JSON value
    /// </summary>
    public static class PayslipLanguageTypeValueConverter
    {
        /// <summary>
        /// Parses a given value to <see cref="PayslipLanguageType"/>
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        public static PayslipLanguageType FromString(string value)
        {
            if (value.Equals("Unknown"))
                return PayslipLanguageType.Unknown;

            if (value.Equals("En_US"))
                return PayslipLanguageType.EnUS;

            if (value.Equals("Nb_NO"))
                return PayslipLanguageType.NbNO;

            if (value.Equals("Nn_NO"))
                return PayslipLanguageType.NnNO;

            if (value.Equals("Sv_SE"))
                return PayslipLanguageType.SvSE;

            if (value.Equals("Da_DK"))
                return PayslipLanguageType.DaDK;

            throw new NotImplementedException($"Could not convert value to type PayslipLanguageType: '{value}'");
        }

        /// <summary>
        /// Parses a given value to <see cref="PayslipLanguageType"/>
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        public static PayslipLanguageType? FromStringOrDefault(string value)
        {
            if (value.Equals("Unknown"))
                return PayslipLanguageType.Unknown;

            if (value.Equals("En_US"))
                return PayslipLanguageType.EnUS;

            if (value.Equals("Nb_NO"))
                return PayslipLanguageType.NbNO;

            if (value.Equals("Nn_NO"))
                return PayslipLanguageType.NnNO;

            if (value.Equals("Sv_SE"))
                return PayslipLanguageType.SvSE;

            if (value.Equals("Da_DK"))
                return PayslipLanguageType.DaDK;

            return null;
        }

        /// <summary>
        /// Converts the <see cref="PayslipLanguageType"/> to the json value
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        /// <exception cref="NotImplementedException"></exception>
        public static string ToJsonValue(PayslipLanguageType value)
        {
            if (value == PayslipLanguageType.Unknown)
                return "Unknown";

            if (value == PayslipLanguageType.EnUS)
                return "En_US";

            if (value == PayslipLanguageType.NbNO)
                return "Nb_NO";

            if (value == PayslipLanguageType.NnNO)
                return "Nn_NO";

            if (value == PayslipLanguageType.SvSE)
                return "Sv_SE";

            if (value == PayslipLanguageType.DaDK)
                return "Da_DK";

            throw new NotImplementedException($"Value could not be handled: '{value}'");
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="PayslipLanguageType"/>
    /// </summary>
    /// <exception cref="NotImplementedException"></exception>
    public class PayslipLanguageTypeJsonConverter : JsonConverter<PayslipLanguageType>
    {
        /// <summary>
        /// Returns a  from the Json object
        /// </summary>
        /// <param name="reader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="options"></param>
        /// <returns></returns>
        public override PayslipLanguageType Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string? rawValue = reader.GetString();

            PayslipLanguageType? result = rawValue == null
                ? null
                : PayslipLanguageTypeValueConverter.FromStringOrDefault(rawValue);

            if (result != null)
                return result.Value;

            throw new JsonException();
        }

        /// <summary>
        /// Writes the PayslipLanguageType to the json writer
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="payslipLanguageType"></param>
        /// <param name="options"></param>
        public override void Write(Utf8JsonWriter writer, PayslipLanguageType payslipLanguageType, JsonSerializerOptions options)
        {
            writer.WriteStringValue(payslipLanguageType.ToString());
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="PayslipLanguageType"/>
    /// </summary>
    public class PayslipLanguageTypeNullableJsonConverter : JsonConverter<PayslipLanguageType?>
    {
        /// <summary>
        /// Returns a PayslipLanguageType from the Json object
        /// </summary>
        /// <param name="reader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="options"></param>
        /// <returns></returns>
        public override PayslipLanguageType? Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string? rawValue = reader.GetString();

            PayslipLanguageType? result = rawValue == null
                ? null
                : PayslipLanguageTypeValueConverter.FromStringOrDefault(rawValue);

            if (result != null)
                return result.Value;

            throw new JsonException();
        }

        /// <summary>
        /// Writes the DateTime to the json writer
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="payslipLanguageType"></param>
        /// <param name="options"></param>
        public override void Write(Utf8JsonWriter writer, PayslipLanguageType? payslipLanguageType, JsonSerializerOptions options)
        {
            writer.WriteStringValue(payslipLanguageType?.ToString() ?? "null");
        }
    }
}
