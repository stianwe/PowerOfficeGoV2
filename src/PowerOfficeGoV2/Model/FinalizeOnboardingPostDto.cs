// <auto-generated>
/*
 * merged spec
 *
 * merged spec
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using PowerOfficeGoV2.Client;

namespace PowerOfficeGoV2.Model
{
    /// <summary>
    /// The finalize onboarding post DTO contains properties necessary for finalizing the onboarding processes in GO.
    /// </summary>
    public partial class FinalizeOnboardingPostDto : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FinalizeOnboardingPostDto" /> class.
        /// </summary>
        /// <param name="onboardingToken">Include the token received after the user have authenticated and authorized the integrated application.</param>
        [JsonConstructor]
        public FinalizeOnboardingPostDto(Option<string?> onboardingToken = default)
        {
            OnboardingTokenOption = onboardingToken;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of OnboardingToken
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> OnboardingTokenOption { get; private set; }

        /// <summary>
        /// Include the token received after the user have authenticated and authorized the integrated application.
        /// </summary>
        /// <value>Include the token received after the user have authenticated and authorized the integrated application.</value>
        /* <example>iQcF9czVruLZQbhXyMTt7a11IyTDwZEwU1MifUbYN5RTy4I6sfoOX3HM2u5huwc7hz7SqRTLMIKkuiktiU1bWglYJd48uVv5QIZe2lhqPSGxJBQMMn9yTGWzn6I8BqKK</example> */
        [JsonPropertyName("OnboardingToken")]
        public string? OnboardingToken { get { return this.OnboardingTokenOption; } set { this.OnboardingTokenOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class FinalizeOnboardingPostDto {\n");
            sb.Append("  OnboardingToken: ").Append(OnboardingToken).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="FinalizeOnboardingPostDto" />
    /// </summary>
    public class FinalizeOnboardingPostDtoJsonConverter : JsonConverter<FinalizeOnboardingPostDto>
    {
        /// <summary>
        /// Deserializes json to <see cref="FinalizeOnboardingPostDto" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override FinalizeOnboardingPostDto Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<string?> onboardingToken = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "OnboardingToken":
                            onboardingToken = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        default:
                            break;
                    }
                }
            }

            return new FinalizeOnboardingPostDto(onboardingToken);
        }

        /// <summary>
        /// Serializes a <see cref="FinalizeOnboardingPostDto" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="finalizeOnboardingPostDto"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, FinalizeOnboardingPostDto finalizeOnboardingPostDto, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, finalizeOnboardingPostDto, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="FinalizeOnboardingPostDto" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="finalizeOnboardingPostDto"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, FinalizeOnboardingPostDto finalizeOnboardingPostDto, JsonSerializerOptions jsonSerializerOptions)
        {
            if (finalizeOnboardingPostDto.OnboardingTokenOption.IsSet)
                if (finalizeOnboardingPostDto.OnboardingTokenOption.Value != null)
                    writer.WriteString("OnboardingToken", finalizeOnboardingPostDto.OnboardingToken);
                else
                    writer.WriteNull("OnboardingToken");
        }
    }
}
