// <auto-generated>
/*
 * merged spec
 *
 * merged spec
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using PowerOfficeGoV2.Client;

namespace PowerOfficeGoV2.Model
{
    /// <summary>
    /// The payslip password type.&lt;p&gt;Members:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;None&lt;/i&gt; - No password required.&lt;/li&gt;&lt;li&gt;&lt;i&gt;Last5DigitsOfSsn&lt;/i&gt; - The password is the last 5 digits of the employees social security number.&lt;/li&gt;&lt;li&gt;&lt;i&gt;Last5DigitsOfBankAccountNo&lt;/i&gt; - The password is the last 5 digits of the employees salary bank account number.&lt;/li&gt;&lt;li&gt;&lt;i&gt;Postcode&lt;/i&gt; - The password is the post code of the employees address.&lt;/li&gt;&lt;/ul&gt;
    /// </summary>
    /// <value>The payslip password type.&lt;p&gt;Members:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;None&lt;/i&gt; - No password required.&lt;/li&gt;&lt;li&gt;&lt;i&gt;Last5DigitsOfSsn&lt;/i&gt; - The password is the last 5 digits of the employees social security number.&lt;/li&gt;&lt;li&gt;&lt;i&gt;Last5DigitsOfBankAccountNo&lt;/i&gt; - The password is the last 5 digits of the employees salary bank account number.&lt;/li&gt;&lt;li&gt;&lt;i&gt;Postcode&lt;/i&gt; - The password is the post code of the employees address.&lt;/li&gt;&lt;/ul&gt;</value>
    public enum PayslipPasswordType
    {
        /// <summary>
        /// Enum None for value: None
        /// </summary>
        None = 1,

        /// <summary>
        /// Enum Last5DigitsOfSsn for value: Last5DigitsOfSsn
        /// </summary>
        Last5DigitsOfSsn = 2,

        /// <summary>
        /// Enum Last5DigitsOfBankAccountNo for value: Last5DigitsOfBankAccountNo
        /// </summary>
        Last5DigitsOfBankAccountNo = 3,

        /// <summary>
        /// Enum Postcode for value: Postcode
        /// </summary>
        Postcode = 4
    }

    /// <summary>
    /// Converts <see cref="PayslipPasswordType"/> to and from the JSON value
    /// </summary>
    public static class PayslipPasswordTypeValueConverter
    {
        /// <summary>
        /// Parses a given value to <see cref="PayslipPasswordType"/>
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        public static PayslipPasswordType FromString(string value)
        {
            if (value.Equals("None"))
                return PayslipPasswordType.None;

            if (value.Equals("Last5DigitsOfSsn"))
                return PayslipPasswordType.Last5DigitsOfSsn;

            if (value.Equals("Last5DigitsOfBankAccountNo"))
                return PayslipPasswordType.Last5DigitsOfBankAccountNo;

            if (value.Equals("Postcode"))
                return PayslipPasswordType.Postcode;

            throw new NotImplementedException($"Could not convert value to type PayslipPasswordType: '{value}'");
        }

        /// <summary>
        /// Parses a given value to <see cref="PayslipPasswordType"/>
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        public static PayslipPasswordType? FromStringOrDefault(string value)
        {
            if (value.Equals("None"))
                return PayslipPasswordType.None;

            if (value.Equals("Last5DigitsOfSsn"))
                return PayslipPasswordType.Last5DigitsOfSsn;

            if (value.Equals("Last5DigitsOfBankAccountNo"))
                return PayslipPasswordType.Last5DigitsOfBankAccountNo;

            if (value.Equals("Postcode"))
                return PayslipPasswordType.Postcode;

            return null;
        }

        /// <summary>
        /// Converts the <see cref="PayslipPasswordType"/> to the json value
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        /// <exception cref="NotImplementedException"></exception>
        public static string ToJsonValue(PayslipPasswordType value)
        {
            if (value == PayslipPasswordType.None)
                return "None";

            if (value == PayslipPasswordType.Last5DigitsOfSsn)
                return "Last5DigitsOfSsn";

            if (value == PayslipPasswordType.Last5DigitsOfBankAccountNo)
                return "Last5DigitsOfBankAccountNo";

            if (value == PayslipPasswordType.Postcode)
                return "Postcode";

            throw new NotImplementedException($"Value could not be handled: '{value}'");
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="PayslipPasswordType"/>
    /// </summary>
    /// <exception cref="NotImplementedException"></exception>
    public class PayslipPasswordTypeJsonConverter : JsonConverter<PayslipPasswordType>
    {
        /// <summary>
        /// Returns a  from the Json object
        /// </summary>
        /// <param name="reader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="options"></param>
        /// <returns></returns>
        public override PayslipPasswordType Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string? rawValue = reader.GetString();

            PayslipPasswordType? result = rawValue == null
                ? null
                : PayslipPasswordTypeValueConverter.FromStringOrDefault(rawValue);

            if (result != null)
                return result.Value;

            throw new JsonException();
        }

        /// <summary>
        /// Writes the PayslipPasswordType to the json writer
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="payslipPasswordType"></param>
        /// <param name="options"></param>
        public override void Write(Utf8JsonWriter writer, PayslipPasswordType payslipPasswordType, JsonSerializerOptions options)
        {
            writer.WriteStringValue(payslipPasswordType.ToString());
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="PayslipPasswordType"/>
    /// </summary>
    public class PayslipPasswordTypeNullableJsonConverter : JsonConverter<PayslipPasswordType?>
    {
        /// <summary>
        /// Returns a PayslipPasswordType from the Json object
        /// </summary>
        /// <param name="reader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="options"></param>
        /// <returns></returns>
        public override PayslipPasswordType? Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string? rawValue = reader.GetString();

            PayslipPasswordType? result = rawValue == null
                ? null
                : PayslipPasswordTypeValueConverter.FromStringOrDefault(rawValue);

            if (result != null)
                return result.Value;

            throw new JsonException();
        }

        /// <summary>
        /// Writes the DateTime to the json writer
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="payslipPasswordType"></param>
        /// <param name="options"></param>
        public override void Write(Utf8JsonWriter writer, PayslipPasswordType? payslipPasswordType, JsonSerializerOptions options)
        {
            writer.WriteStringValue(payslipPasswordType?.ToString() ?? "null");
        }
    }
}
