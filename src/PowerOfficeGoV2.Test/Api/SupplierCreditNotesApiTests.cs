/*
 * merged spec
 *
 * merged spec
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Xunit;
using Microsoft.Extensions.DependencyInjection;
using PowerOfficeGoV2.Api;
using PowerOfficeGoV2.Model;


/* *********************************************************************************
*              Follow these manual steps to construct tests.
*              This file will not be overwritten.
*  *********************************************************************************
* 1. Navigate to ApiTests.Base.cs and ensure any tokens are being created correctly.
*    Take care not to commit credentials to any repository.
*
* 2. Mocking is coordinated by ApiTestsBase#AddApiHttpClients.
*    To mock the client, use the generic AddApiHttpClients.
*    To mock the server, change the client's BaseAddress.
*
* 3. Locate the test you want below
*      - remove the skip property from the Fact attribute
*      - set the value of any variables if necessary
*
* 4. Run the tests and ensure they work.
*
*/


namespace PowerOfficeGoV2.Test.Api
{
    /// <summary>
    ///  Class for testing SupplierCreditNotesApi
    /// </summary>
    public sealed class SupplierCreditNotesApiTests : ApiTestsBase
    {
        private readonly ISupplierCreditNotesApi _instance;

        public SupplierCreditNotesApiTests(): base(Array.Empty<string>())
        {
            _instance = _host.Services.GetRequiredService<ISupplierCreditNotesApi>();
        }

        /// <summary>
        /// Test GetSupplierCreditNoteById
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetSupplierCreditNoteByIdAsyncTest()
        {
            Guid id = default!;
            var response = await _instance.GetSupplierCreditNoteByIdAsync(id);
            var model = response.Ok();
            Assert.IsType<SupplierCreditNoteJournalEntryVoucherDto>(model);
        }

        /// <summary>
        /// Test JournalEntryVouchersSupplierCreditNotesIdPatch
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task JournalEntryVouchersSupplierCreditNotesIdPatchAsyncTest()
        {
            Guid id = default!;
            Client.Option<List<Operation>> operation = default!;
            var response = await _instance.JournalEntryVouchersSupplierCreditNotesIdPatchAsync(id, operation);
            var model = response.Ok();
            Assert.IsType<SupplierCreditNoteJournalEntryVoucherDto>(model);
        }

        /// <summary>
        /// Test JournalEntryVouchersSupplierCreditNotesIdVoucherLinesLineIdDelete
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task JournalEntryVouchersSupplierCreditNotesIdVoucherLinesLineIdDeleteAsyncTest()
        {
            Guid id = default!;
            long lineId = default!;
            await _instance.JournalEntryVouchersSupplierCreditNotesIdVoucherLinesLineIdDeleteAsync(id, lineId);
        }

        /// <summary>
        /// Test JournalEntryVouchersSupplierCreditNotesIdVoucherLinesLineIdPatch
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task JournalEntryVouchersSupplierCreditNotesIdVoucherLinesLineIdPatchAsyncTest()
        {
            Guid id = default!;
            long lineId = default!;
            Client.Option<List<Operation>> operation = default!;
            var response = await _instance.JournalEntryVouchersSupplierCreditNotesIdVoucherLinesLineIdPatchAsync(id, lineId, operation);
            var model = response.Ok();
            Assert.IsType<SupplierVoucherLineDto>(model);
        }

        /// <summary>
        /// Test JournalEntryVouchersSupplierCreditNotesIdVoucherLinesPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task JournalEntryVouchersSupplierCreditNotesIdVoucherLinesPostAsyncTest()
        {
            Guid id = default!;
            Client.Option<SupplierVoucherLinePostDto> supplierVoucherLinePostDto = default!;
            var response = await _instance.JournalEntryVouchersSupplierCreditNotesIdVoucherLinesPostAsync(id, supplierVoucherLinePostDto);
            var model = response.Created();
            Assert.IsType<SupplierCreditNoteJournalEntryVoucherDto>(model);
        }

        /// <summary>
        /// Test JournalEntryVouchersSupplierCreditNotesPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task JournalEntryVouchersSupplierCreditNotesPostAsyncTest()
        {
            Client.Option<SupplierCreditNoteJournalEntryVoucherPostDto> supplierCreditNoteJournalEntryVoucherPostDto = default!;
            var response = await _instance.JournalEntryVouchersSupplierCreditNotesPostAsync(supplierCreditNoteJournalEntryVoucherPostDto);
            var model = response.Created();
            Assert.IsType<SupplierCreditNoteJournalEntryVoucherDto>(model);
        }
    }
}
