/*
 * merged spec
 *
 * merged spec
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using PowerOfficeGoV2.Model;
using PowerOfficeGoV2.Client;
using System.Reflection;

namespace PowerOfficeGoV2.Test.Model
{
    /// <summary>
    ///  Class for testing EmployeePayrollSettingsDto
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class EmployeePayrollSettingsDtoTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for EmployeePayrollSettingsDto
        //private EmployeePayrollSettingsDto instance;

        public EmployeePayrollSettingsDtoTests()
        {
            // TODO uncomment below to create an instance of EmployeePayrollSettingsDto
            //instance = new EmployeePayrollSettingsDto();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of EmployeePayrollSettingsDto
        /// </summary>
        [Fact]
        public void EmployeePayrollSettingsDtoInstanceTest()
        {
            // TODO uncomment below to test "IsType" EmployeePayrollSettingsDto
            //Assert.IsType<EmployeePayrollSettingsDto>(instance);
        }

        /// <summary>
        /// Test the property 'HolidayPayAbove60Percentage'
        /// </summary>
        [Fact]
        public void HolidayPayAbove60PercentageTest()
        {
            // TODO unit test for the property 'HolidayPayAbove60Percentage'
        }

        /// <summary>
        /// Test the property 'HolidayPayPercentage'
        /// </summary>
        [Fact]
        public void HolidayPayPercentageTest()
        {
            // TODO unit test for the property 'HolidayPayPercentage'
        }

        /// <summary>
        /// Test the property 'LimitHolidayPayAbove60To6G'
        /// </summary>
        [Fact]
        public void LimitHolidayPayAbove60To6GTest()
        {
            // TODO unit test for the property 'LimitHolidayPayAbove60To6G'
        }

        /// <summary>
        /// Test the property 'NumberOfHolidays'
        /// </summary>
        [Fact]
        public void NumberOfHolidaysTest()
        {
            // TODO unit test for the property 'NumberOfHolidays'
        }

        /// <summary>
        /// Test the property 'NumberOfHolidaysAbove60'
        /// </summary>
        [Fact]
        public void NumberOfHolidaysAbove60Test()
        {
            // TODO unit test for the property 'NumberOfHolidaysAbove60'
        }

        /// <summary>
        /// Test the property 'OmitECOnHolidayPayProvision'
        /// </summary>
        [Fact]
        public void OmitECOnHolidayPayProvisionTest()
        {
            // TODO unit test for the property 'OmitECOnHolidayPayProvision'
        }

        /// <summary>
        /// Test the property 'PayslipDeliveryType'
        /// </summary>
        [Fact]
        public void PayslipDeliveryTypeTest()
        {
            // TODO unit test for the property 'PayslipDeliveryType'
        }

        /// <summary>
        /// Test the property 'PayslipEmailAddress'
        /// </summary>
        [Fact]
        public void PayslipEmailAddressTest()
        {
            // TODO unit test for the property 'PayslipEmailAddress'
        }

        /// <summary>
        /// Test the property 'PayslipLanguageType'
        /// </summary>
        [Fact]
        public void PayslipLanguageTypeTest()
        {
            // TODO unit test for the property 'PayslipLanguageType'
        }

        /// <summary>
        /// Test the property 'RemunerationPeriodType'
        /// </summary>
        [Fact]
        public void RemunerationPeriodTypeTest()
        {
            // TODO unit test for the property 'RemunerationPeriodType'
        }
    }
}
